{"version":3,"file":"static/js/400.7868d3cb.chunk.js","mappings":"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","sources":["components/AppWindow/windows/blog/[id].jsx","firebase.js","utils/getCurrentDate.js","utils/getThumbnailImg.js","utils/query/useBlogQuery.js"],"sourcesContent":["/* eslint-disable */\r\n\r\nimport { useLocation, useParams } from 'react-router-dom'\r\nimport styled from 'styled-components'\r\nimport 'highlight.js/styles/github.css' // 코드 하이라이트 스타일 적용\r\nimport 'react-quill/dist/quill.snow.css'\r\nimport { useGetBlogDetail } from 'utils/query/useBlogQuery'\r\n\r\nexport default function BlogDetail() {\r\n  const { id } = useParams()\r\n  const { data, isLoading, isFetching } = useGetBlogDetail(id)\r\n  console.log(data)\r\n\r\n  if (isFetching || isLoading) return '12312'\r\n  return (\r\n    <>\r\n      <TitleWrapper>\r\n        <Title>{data.title}</Title>\r\n        <쩌리컨테이너>\r\n          <게시물생성날짜>생성일 : {data.createdAt}</게시물생성날짜>\r\n          <삭제및수정>수정/삭제</삭제및수정>\r\n        </쩌리컨테이너>\r\n      </TitleWrapper>\r\n      <마크다운 dangerouslySetInnerHTML={{ __html: data.content }} />\r\n    </>\r\n  )\r\n}\r\n\r\nconst TitleWrapper = styled.div`\r\n  padding: 10px;\r\n  border-bottom: 3px solid #696969;\r\n`\r\nconst Title = styled.div`\r\n  padding: 10px;\r\n  font-size: 2rem;\r\n  text-align: center;\r\n  @media screen and (max-width: 600px) {\r\n    font-size: 1.6rem;\r\n  }\r\n`\r\nconst 쩌리컨테이너 = styled.div`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  padding: 5px;\r\n`\r\nconst 게시물생성날짜 = styled.div``\r\nconst 삭제및수정 = styled.div``\r\n\r\nconst 마크다운 = styled.div`\r\n  width: 100%;\r\n  padding: 20px 0;\r\n  * {\r\n    width: 100%;\r\n  }\r\n`\r\n","/* eslint-disable */\r\n\r\n// Import the functions you need from the SDKs you need\r\nimport { initializeApp } from 'firebase/app'\r\nimport { getFirestore } from 'firebase/firestore'\r\nimport { getStorage } from 'firebase/storage'\r\n// TODO: Add SDKs for Firebase products that you want to use\r\n// https://firebase.google.com/docs/web/setup#available-libraries\r\n\r\n// Your web app's Firebase configuration\r\n// For Firebase JS SDK v7.20.0 and later, measurementId is optional\r\nconst firebaseConfig = {\r\n  apiKey: process.env.REACT_APP_API_KEY,\r\n  authDomain: process.env.REACT_APP_AUTH_DOMAIN,\r\n  projectId: process.env.REACT_APP_PROJECT_ID,\r\n  storageBucket: process.env.REACT_APP_STORAGE_BUCKET,\r\n  messagingSenderId: process.env.REACT_APP_MESSAGING_SENDER_ID,\r\n  appId: process.env.REACT_APP_APP_ID,\r\n  measurementId: process.env.REACT_APP_MEASUREMENT_ID,\r\n}\r\n\r\n// Initialize Firebase\r\nconst app = initializeApp(firebaseConfig)\r\nexport const db = getFirestore(app)\r\nexport const storage = getStorage(app)\r\n","export default function getCurrentDate() {\r\n  const currentDate = new Date()\r\n  const year = currentDate.getFullYear()\r\n  const month = String(currentDate.getMonth() + 1).padStart(2, '0')\r\n  const day = String(currentDate.getDate()).padStart(2, '0')\r\n  const hours = String(currentDate.getHours()).padStart(2, '0')\r\n  const minutes = String(currentDate.getMinutes()).padStart(2, '0')\r\n  const seconds = String(currentDate.getSeconds()).padStart(2, '0')\r\n\r\n  const formattedDate = `${year}-${month}-${day} ${hours}:${minutes}:${seconds}`\r\n  return formattedDate\r\n}\r\n","import errorImg from 'asset/images/noImg.webp'\r\n\r\nexport default function getThumnailImg(htmlString) {\r\n  const parser = new DOMParser()\r\n  const doc = parser.parseFromString(htmlString, 'text/html')\r\n  const firstImage = doc.querySelector('img')\r\n  return firstImage ? firstImage.src : errorImg\r\n}\r\n","/* eslint-disable */\r\n\r\nimport { useQuery, useMutation } from '@tanstack/react-query'\r\nimport { db } from '../../firebase'\r\nimport { collection, doc, addDoc, getDocs, query, where, orderBy, setDoc } from 'firebase/firestore'\r\nimport getCurrentDate from 'utils/getCurrentDate'\r\nimport getThumnailImg from 'utils/getThumbnailImg'\r\n\r\nconst getBlogList = category => {\r\n  switch (category.label) {\r\n    case 'all':\r\n      return getAllBlogList()\r\n    case 'React':\r\n      return getReactBlogList()\r\n    case 'JavaScript':\r\n      return getJavaScriptBlogList()\r\n    default:\r\n      return getOtherBlogList()\r\n  }\r\n}\r\nexport const getBlogDetail = async id => {\r\n  const q = query(collection(db, 'blog'), where('id', '==', id))\r\n  const result = []\r\n\r\n  const querySnapshot = await getDocs(q)\r\n  querySnapshot.forEach(doc => {\r\n    // doc.data() is never undefined for query doc snapshots\r\n    result.push(doc.data())\r\n  })\r\n  return result[0]\r\n}\r\nexport const getAllBlogList = async () => {\r\n  // console.log('모든거')\r\n  const result = []\r\n  try {\r\n    const q = query(collection(db, 'blog'), orderBy('createdAt', 'desc'))\r\n    const querySnapshot = await getDocs(q)\r\n    querySnapshot.forEach(item => {\r\n      result.push({\r\n        id: item.id,\r\n        title: item.data().title,\r\n        img: item.data().img, // 썸네일 이미지\r\n        summary: item.data().summary,\r\n      })\r\n    })\r\n    return result\r\n  } catch (error) {\r\n    console.error('Error fetching document:', error)\r\n    throw error\r\n  }\r\n}\r\nconst getReactBlogList = async () => {\r\n  // console.log('리액트 블로그 리스트')\r\n  const result = []\r\n  try {\r\n    const q = query(collection(db, 'blog'), orderBy('createdAt', 'desc'))\r\n    const querySnapshot = await getDocs(q)\r\n\r\n    querySnapshot.forEach(item => {\r\n      result.push({ ...item.data(), id: item.id })\r\n    })\r\n    return result\r\n  } catch (error) {\r\n    console.error('Error fetching document:', error)\r\n    throw error\r\n  }\r\n}\r\nconst getJavaScriptBlogList = async () => {\r\n  // console.log('자바스크립트 블로그 리스트')\r\n  const result = []\r\n  try {\r\n    const q = query(collection(db, 'blog'), orderBy('createdAt', 'desc'))\r\n    const querySnapshot = await getDocs(q)\r\n\r\n    querySnapshot.forEach(item => {\r\n      result.push({ ...item.data(), id: item.id })\r\n    })\r\n    return result\r\n  } catch (error) {\r\n    console.error('Error fetching document:', error)\r\n    throw error\r\n  }\r\n}\r\nconst getOtherBlogList = async () => {\r\n  // console.log('다른 블로그 리스트')\r\n  const result = []\r\n  try {\r\n    const q = query(collection(db, 'blog'), orderBy('createdAt', 'desc'))\r\n    const querySnapshot = await getDocs(q)\r\n\r\n    querySnapshot.forEach(item => {\r\n      result.push({ ...item.data(), id: item.id })\r\n    })\r\n    return result\r\n  } catch (error) {\r\n    console.error('Error fetching document:', error)\r\n    throw error\r\n  }\r\n}\r\nconst postBlogItem = async data => {\r\n  const blogRef = doc(collection(db, 'blog'))\r\n  await setDoc(blogRef, {\r\n    category: data.category,\r\n    content: data.content,\r\n    title: data.title,\r\n    img: getThumnailImg(data.content),\r\n    summary: data.summary,\r\n    createdAt: getCurrentDate(),\r\n    id: blogRef.id,\r\n  })\r\n}\r\n\r\nexport const useBlogQuery = category => {\r\n  // console.log(category)\r\n  return useQuery({\r\n    queryKey: ['blogList', category],\r\n    queryFn: () => getBlogList(category),\r\n  })\r\n}\r\nexport const useBlogItemMutation = () => {\r\n  return useMutation({\r\n    mutationFn: postBlogItem,\r\n  })\r\n}\r\n\r\nexport const useGetBlogDetail = id => {\r\n  return useQuery({\r\n    queryKey: ['blogDetail', id],\r\n    queryFn: () => getBlogDetail(id),\r\n    enabled: false,\r\n  })\r\n}\r\n// 2024/06/05\r\n// 블로그 리스트 전체 조회 시\r\n// content까지 불러오는 비효율성 때문에\r\n// 전체 조회 요청 시 원래는 모~든 필드 가져왓는데\r\n// 필요한 필드만 가져오는 코드로 바꿈\r\n// 블로그 생성 요청 시\r\n// 썸네일 이미지 지정하여 전체 조회시 content자체를 불러올 일이 없게됨\r\n\r\n// 게시물 클릭시 상세조회 하도록 코드 리팩토링"],"names":["BlogDetail","id","useParams","data","isLoading","isFetching","useGetBlogDetail","console","log","_jsxs","_Fragment","children","TitleWrapper","_jsx","Title","title","쩌리컨테이너","게시물생성날짜","createdAt","삭제및수정","마크다운","dangerouslySetInnerHTML","__html","content","styled","div","_templateObject","_taggedTemplateLiteral","_templateObject2","_templateObject3","_templateObject4","_templateObject5","_templateObject6","app","initializeApp","apiKey","process","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","db","getFirestore","storage","getStorage","getCurrentDate","currentDate","Date","year","getFullYear","month","String","getMonth","padStart","day","getDate","hours","getHours","minutes","getMinutes","seconds","getSeconds","concat","getThumnailImg","htmlString","firstImage","DOMParser","parseFromString","querySelector","src","errorImg","getAllBlogList","async","result","q","query","collection","orderBy","getDocs","forEach","item","push","img","summary","error","getReactBlogList","getJavaScriptBlogList","getOtherBlogList","postBlogItem","blogRef","doc","setDoc","category","useBlogQuery","useQuery","queryKey","queryFn","label","getBlogList","useBlogItemMutation","useMutation","mutationFn","where","getBlogDetail","enabled"],"sourceRoot":""}