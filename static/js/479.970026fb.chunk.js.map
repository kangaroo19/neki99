{"version":3,"file":"static/js/479.970026fb.chunk.js","mappings":"kWAUA,MAAMA,GAAmBC,EAAAA,EAAAA,IAAOC,EAAAA,GAAPD,CAAeE,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,2EAMlCC,EAAMJ,EAAAA,GAAOK,IAAGC,IAAAA,GAAAH,EAAAA,EAAAA,GAAA,2CAKTI,GAAgBP,EAAAA,EAAAA,IAAOQ,EAAAA,GAAPR,CAAaS,IAAAA,GAAAN,EAAAA,EAAAA,GAAA,sIAQpCO,GAAkBV,EAAAA,EAAAA,IAAOW,EAAAA,EAAPX,CAAgBY,IAAAA,GAAAT,EAAAA,EAAAA,GAAA,8BAIlCU,EAAc,CAClB,CACEC,GAAI,EACJC,MAAO,KACPC,QAAQ,6TAQV,CACEF,GAAI,EACJC,MAAM,yDACNC,QAAQ,g3BAOV,CACEF,GAAI,EACJC,MAAM,yDACNC,QAAQ,ugBAQV,CACEF,GAAI,EACJC,MAAM,uFACNC,QAAQ,y4CAqBV,CACEF,GAAI,EACJC,MAAM,6CACNC,QAAQ,uLAMG,SAASC,IACtB,MAAM,mBAAEC,EAAkB,gBAAEC,EAAe,cAAEC,IAAkBC,EAAAA,EAAAA,KAC/D,OACEC,EAAAA,EAAAA,MAACC,EAAAA,EAAS,CACRC,MAAM,QACNC,IAAI,MACJC,KAAK,MACLC,OAAQR,EAAgBS,aAAaC,YACrCC,QAASA,IAAMV,EAAc,gBAAgBW,SAAA,EAE7CC,EAAAA,EAAAA,KAACT,EAAAA,EAAUU,OAAM,CAACH,QAASI,GAAShB,EAAmB,eAAgBgB,GAAOH,SAAC,yBAC/ET,EAAAA,EAAAA,MAACC,EAAAA,EAAUY,QAAO,CAAAJ,SAAA,EAChBC,EAAAA,EAAAA,KAACT,EAAAA,EAAUa,aAAY,CAACC,KAAK,6HAC7Bf,EAAAA,EAAAA,MAACC,EAAAA,EAAUe,eAAc,CAACC,OAAO,QAAOR,SAAA,EACtCT,EAAAA,EAAAA,MAACC,EAAAA,EAAUiB,WAAU,CAAChB,MAAM,MAAKO,SAAA,EAC/BC,EAAAA,EAAAA,KAACT,EAAAA,EAAUkB,MAAK,CAACC,IAAKC,EAAQC,IAAI,iCAAQpB,MAAM,UAChDQ,EAAAA,EAAAA,KAACjC,EAAgB,CAAAgC,UACfC,EAAAA,EAAAA,KAAC5B,EAAG,CAACsC,IAAKG,EAAQD,IAAI,aAEvB/B,EAAYiC,KAAIC,IACfzB,EAAAA,EAAAA,MAAA0B,EAAAA,SAAA,CAAAjB,SAAA,CACGgB,EAAKhC,QAASiB,EAAAA,EAAAA,KAACzB,EAAa,CAAAwB,SAAsBgB,EAAKhC,OAArBkC,KAAKC,WACxClB,EAAAA,EAAAA,KAACtB,EAAe,CAAAqB,SAAsBgB,EAAK/B,SAArBiC,KAAKC,mBAIjClB,EAAAA,EAAAA,KAACT,EAAAA,EAAU4B,IAAG,YAKxB,C","sources":["components/AppWindow/windows/MyInfoWindow.jsx"],"sourcesContent":["/* eslint-disable */\r\n\r\nimport { Frame, Monitor } from 'react95'\r\nimport AppWindow from '../AppWindow'\r\nimport myFace from 'asset/images/myFace.webp'\r\nimport styled from 'styled-components'\r\nimport Markdown from 'react-markdown'\r\nimport { useAppWindowRender } from 'utils/zustand/useAppWindowRender'\r\nimport banner from 'asset/images/banner.webp'\r\n\r\nconst MonitorContainer = styled(Monitor)`\r\n  margin: 10px 0;\r\n  display: flex;\r\n  justify-content: center;\r\n`\r\n\r\nconst Img = styled.img`\r\n  width: 100%;\r\n  height: 100%;\r\n`\r\n// 이거 '내 프로젝트' 창에서도 사용 위해 export\r\nexport const MarkdownTitle = styled(Frame)`\r\n  padding: 10px;\r\n  margin: 10px 0;\r\n  width: 100%;\r\n  font-size: 1.2rem;\r\n  background: rgb(57, 66, 77);\r\n  color: white;\r\n`\r\nconst MarkdownContent = styled(Markdown)`\r\n  padding: 0 10px;\r\n`\r\n\r\nconst markdownObj = [\r\n  {\r\n    id: 0,\r\n    title: null,\r\n    content: `\r\n  - 😀이름 : 천재현\r\n  - 👀나이 : 26세(99년생)\r\n  - 🏫서일대학교 컴퓨터전자공학\r\n  - 📩이메일 : 1000jjj@naver.com\r\n  - 📱휴대폰 : 010-6495-2314\r\n    `,\r\n  },\r\n  {\r\n    id: 1,\r\n    title: `👋안녕하세요👋`,\r\n    content: `\r\n  프론트엔드 개발자가 되고 싶은 천재현 입니다.\\n\r\n  기술적인 구현 능력뿐만 아니라 **코드 품질**과 **클린 코드**에 대한 열정을 가지고 있습니다.\\n\r\n  또한, **유지보수가 쉽고 확장 가능한 소프트웨어**를 개발하기 위해 항상 노력하고 있습니다. \\n\r\n  이러한 가치를 바탕으로 팀과 협력하여 프로젝트를 성공적으로\\n\r\n  완수할 수 있도록 최선을 다하겠습니다.\\n`,\r\n  },\r\n  {\r\n    id: 2,\r\n    title: `🖥️커리어🖥️`,\r\n    content: `\r\n  **금성인터내셔널 (2023/08 ~ 2024/02)** \r\n  - MUI 사용하여 백오피스 통계 관련 기능 구현\r\n  - 백엔드 API 사용하여 CRUD 기능 개발\r\n  - zustand 사용하여 상태관리 경험\r\n  - 전반적인 CSS 작업\r\n  - 모든 페이지에서 사용 위한 공통 컴포넌트 개발`,\r\n  },\r\n  {\r\n    id: 3,\r\n    title: `👨‍💻보유기술👨‍💻`,\r\n    content: `\r\n  **React.js** \r\n  - 기본적인 리액트 훅(useState,useEffect,useMemo….)과 자주 사용하는 로직을 커스텀훅으로 만들어 사용.\r\n  - 합성 컴포넌트 패턴 선호함\r\n  - 클린 코드 지향\r\n  - 공통으로 사용할 컴포넌트 구현 경험\r\n  \\n\r\n  **Zustand**\r\n  - zustand 사용하여 react의 컴포넌트 상태를 효과적으로 관리\r\n  \\n\r\n  **React-Query**\r\n  - 서버 상태를 효과적으로 관리하고 요청 성공 여부에 따른 핸들링 처리 경험\r\n  \\n\r\n  **Material-UI**\r\n  - Mui 에서 제공하는 여러 컴포넌트를 프로젝트 성격에 맞게 커스텀\r\n  - Mui-DataGrid 사용하여 어드민 페이지의 기능 구현 작업\r\n  \\n\r\n  **React-Hook-Form**\r\n  - 최근 제일 재미있게 사용한 라이브러리\r\n  - 인풋 컴포넌트 관련 상태를 처리한 경험 있음`,\r\n  },\r\n  {\r\n    id: 4,\r\n    title: `🏅자격증🏅`,\r\n    content: `\r\n  - 정보처리산업기사 (2022년 6월 취득)\r\n  - 컴퓨터활용능력 2급 (2021년 3월 취득)`,\r\n  },\r\n]\r\n\r\nexport default function MyInfoWindow() {\r\n  const { onClickWindowClose, windowRenderObj, onClickWindow } = useAppWindowRender()\r\n  return (\r\n    <AppWindow\r\n      width=\"700px\"\r\n      top=\"10%\"\r\n      left=\"10%\"\r\n      zIndex={windowRenderObj.myInfoWindow.zIndexValue}\r\n      onClick={() => onClickWindow('myInfoWindow')}\r\n    >\r\n      <AppWindow.Header onClick={event => onClickWindowClose('myInfoWindow', event)}>내 정보</AppWindow.Header>\r\n      <AppWindow.Content>\r\n        <AppWindow.ContentTitle text=\"프론트엔드 개발자가 되고싶은 천재현 입니다.\" />\r\n        <AppWindow.ContentSection height=\"300px\">\r\n          <AppWindow.ScrollView width=\"75%\">\r\n            <AppWindow.Image src={banner} alt=\"아스키아트\" width=\"100%\" />\r\n            <MonitorContainer>\r\n              <Img src={myFace} alt=\"myFace\" />\r\n            </MonitorContainer>\r\n            {markdownObj.map(item => (\r\n              <>\r\n                {item.title && <MarkdownTitle key={Math.random()}>{item.title}</MarkdownTitle>}\r\n                <MarkdownContent key={Math.random()}>{item.content}</MarkdownContent>\r\n              </>\r\n            ))}\r\n          </AppWindow.ScrollView>\r\n          <AppWindow.Nav />\r\n        </AppWindow.ContentSection>\r\n      </AppWindow.Content>\r\n    </AppWindow>\r\n  )\r\n}\r\n"],"names":["MonitorContainer","styled","Monitor","_templateObject","_taggedTemplateLiteral","Img","img","_templateObject2","MarkdownTitle","Frame","_templateObject3","MarkdownContent","Markdown","_templateObject4","markdownObj","id","title","content","MyInfoWindow","onClickWindowClose","windowRenderObj","onClickWindow","useAppWindowRender","_jsxs","AppWindow","width","top","left","zIndex","myInfoWindow","zIndexValue","onClick","children","_jsx","Header","event","Content","ContentTitle","text","ContentSection","height","ScrollView","Image","src","banner","alt","myFace","map","item","_Fragment","Math","random","Nav"],"sourceRoot":""}