{"version":3,"file":"static/js/762.0d48734c.chunk.js","mappings":"mOAEe,SAASA,EAAeC,GACrC,MAEMC,GAFS,IAAIC,WACAC,gBAAgBH,EAAY,aACxBI,cAAc,OACrC,OAAOH,EAAaA,EAAWI,IAAMC,CACvC,C,uBCFe,SAASC,EAASC,GAAe,IAAd,QAAEC,GAASD,EAC3C,OACEE,EAAAA,EAAAA,MAACC,EAAgB,CAAAC,SAAA,EACfC,EAAAA,EAAAA,KAACC,EAAU,CAAAF,UACTC,EAAAA,EAAAA,KAACE,EAAAA,EAAU,CAACV,IAAKN,EAAeU,EAAQO,SAAUC,MAAM,OAAOC,OAAO,YAExER,EAAAA,EAAAA,MAACS,EAAe,CAACC,GAAE,SAAAC,OAAWZ,EAAQa,IAAMC,MAAO,CAAEC,KAAMf,GAAUG,SAAA,EACnEC,EAAAA,EAAAA,KAACY,EAAU,CAAAb,SAAEH,EAAQiB,SACrBb,EAAAA,EAAAA,KAACc,EAAY,CAAAf,SAAEH,EAAQmB,eAI/B,CAEA,MAAMjB,EAAmBkB,EAAAA,GAAOC,IAAGC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,gQAa7BlB,EAAae,EAAAA,GAAOC,IAAGG,IAAAA,GAAAD,EAAAA,EAAAA,GAAA,gJASvBb,GAAkBU,EAAAA,EAAAA,IAAOK,EAAAA,GAAPL,CAAYM,IAAAA,GAAAH,EAAAA,EAAAA,GAAA,oLAO9BP,EAAaI,EAAAA,GAAOC,IAAGM,IAAAA,GAAAJ,EAAAA,EAAAA,GAAA,0SAYvBL,EAAeE,EAAAA,GAAOC,IAAGO,IAAAA,GAAAL,EAAAA,EAAAA,GAAA,iI,4CCnD/B,MAAMM,EAAU,CAAC,QAAS,aAAc,SAASC,KAAI,CAACC,EAAOC,KAAK,CAChEC,MAAOD,EAAQ,EACfD,YAGa,SAASG,IACtB,MAAM,KAAEC,EAAI,UAAEC,EAAS,WAAEC,IAAeC,EAAAA,EAAAA,MACxC,OAAIF,GAAaC,EACR,MAGPpC,EAAAA,EAAAA,MAAAsC,EAAAA,SAAA,CAAApC,SAAA,EACEC,EAAAA,EAAAA,KAACoC,EAAK,CAAArC,SAAC,iDACPC,EAAAA,EAAAA,KAACqC,EAAAA,EAAUC,OAAM,CAACb,QAASA,EAASrB,MAAM,QACzC2B,EAAKL,KAAIf,IACRX,EAAAA,EAAAA,KAACN,EAAS,CAACE,QAASe,GAAWA,EAAKF,QAI5C,CAEA,MAAM2B,EAAQpB,EAAAA,GAAOC,IAAGC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,8KAYJH,EAAAA,GAAOC,IAAGG,IAAAA,GAAAD,EAAAA,EAAAA,GAAA,sJ,iGCnCvB,MAAMoB,EAAiBC,UAC5B,MAAMC,EAAS,GACf,IACE,MAAMC,GAAIC,EAAAA,EAAAA,IAAMC,EAAAA,EAAAA,IAAWC,EAAAA,GAAI,SAASC,EAAAA,EAAAA,IAAQ,YAAa,SAM7D,aAL4BC,EAAAA,EAAAA,IAAQL,IAEtBM,SAAQrC,IACpB8B,EAAOQ,KAAK,IAAKtC,EAAKoB,OAAQtB,GAAIE,EAAKF,IAAK,IAEvCgC,CACT,CAAE,MAAOS,GAEP,MADAC,QAAQD,MAAM,2BAA4BA,GACpCA,CACR,GAGIE,EAAeZ,gBACba,EAAAA,EAAAA,KAAOT,EAAAA,EAAAA,IAAWC,EAAAA,GAAI,QAAS,CACnCS,SAAUvB,EAAKuB,SACfnD,QAAS4B,EAAK5B,QACdU,MAAOkB,EAAKlB,MACZE,QAASgB,EAAKhB,QACdwC,WAAWC,EAAAA,EAAAA,KACX/C,GAAI,MACJ,EAGSyB,EAAeA,KACnBuB,EAAAA,EAAAA,GAAS,CACdC,SAAU,CAAC,YACXC,QAASpB,IAGAqB,EAAsBA,KAC1BC,EAAAA,EAAAA,GAAY,CACjBC,WAAYV,G","sources":["utils/getThumbnailImg.js","components/AppWindow/windows/blog/components/BoardItem.jsx","components/AppWindow/windows/blog/BlogHome.jsx","utils/query/useBlogQuery.js"],"sourcesContent":["import errorImg from 'asset/images/noImg.jpg'\r\n\r\nexport default function getThumnailImg(htmlString) {\r\n  const parser = new DOMParser()\r\n  const doc = parser.parseFromString(htmlString, 'text/html')\r\n  const firstImage = doc.querySelector('img')\r\n  return firstImage ? firstImage.src : errorImg\r\n}\r\n","import styled from 'styled-components'\r\nimport ContentImg from '../../../components/ContentImg'\r\nimport { Link } from 'react-router-dom'\r\nimport getThumnailImg from 'utils/getThumbnailImg'\r\n\r\nexport default function BoardItem({ dataObj }) {\r\n  return (\r\n    <BoardItemWrapper>\r\n      <ImgWrapper>\r\n        <ContentImg src={getThumnailImg(dataObj.content)} width=\"100%\" height=\"100%\" />\r\n      </ImgWrapper>\r\n      <TextWrapperLink to={`/blog/${dataObj.id}`} state={{ item: dataObj }}>\r\n        <BoardTitle>{dataObj.title}</BoardTitle>\r\n        <BoardContent>{dataObj.summary}</BoardContent>\r\n      </TextWrapperLink>\r\n    </BoardItemWrapper>\r\n  )\r\n}\r\n\r\nconst BoardItemWrapper = styled.div`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  border-bottom: 1px solid #696969;\r\n  height: 130px;\r\n  box-sizing: border-box;\r\n  padding: 10px 0;\r\n  @media screen and (max-width: 600px) {\r\n    height: 100px;\r\n  }\r\n`\r\n\r\nconst ImgWrapper = styled.div`\r\n  width: 18%;\r\n  height: 100%;\r\n  padding: 10px;\r\n  @media screen and (max-width: 600px) {\r\n    width: 80px;\r\n    height: 80px;\r\n  }\r\n`\r\nconst TextWrapperLink = styled(Link)`\r\n  width: 82%;\r\n  height: 100%; /* 원하는 최대 높이 설정 */\r\n  overflow: hidden;\r\n  flex-direction: column;\r\n  text-decoration: none;\r\n`\r\nconst BoardTitle = styled.div`\r\n  font-weight: 600;\r\n  white-space: nowrap; /*글자를 한줄로 모아준다*/\r\n  overflow: hidden;\r\n  font-size: 1.4rem;\r\n  width: 100%;\r\n  cursor: pointer;\r\n  text-overflow: ellipsis;\r\n  @media screen and (max-width: 600px) {\r\n    font-size: 1rem;\r\n  }\r\n`\r\nconst BoardContent = styled.div`\r\n  font-size: 1rem;\r\n  text-overflow: ellipsis;\r\n  @media screen and (max-width: 600px) {\r\n    font-size: 0.8rem;\r\n  }\r\n`\r\n","/* eslint-disable */\r\n\r\nimport BoardItem from 'components/AppWindow/windows/blog/components/BoardItem'\r\nimport AppWindow from 'components/AppWindow/AppWindow'\r\nimport styled from 'styled-components'\r\nimport { useBlogQuery } from 'utils/query/useBlogQuery'\r\nimport { Hourglass } from 'react95'\r\nimport Spinner from 'components/spinner/Spinner'\r\n\r\nconst options = ['React', 'JavaScript', 'Other'].map((label, index) => ({\r\n  value: index + 1,\r\n  label,\r\n}))\r\n\r\nexport default function BlogHome() {\r\n  const { data, isLoading, isFetching } = useBlogQuery()\r\n  if (isLoading || isFetching) {\r\n    return null\r\n  }\r\n  return (\r\n    <>\r\n      <Title>천재현의 블로그</Title>\r\n      <AppWindow.Select options={options} width=\"40%\" />\r\n      {data.map(item => (\r\n        <BoardItem dataObj={item} key={item.id} />\r\n      ))}\r\n    </>\r\n  )\r\n}\r\n\r\nconst Title = styled.div`\r\n  position: absoulte;\r\n  width: 100%;\r\n  top: 0;\r\n  left: 0;\r\n  text-align: center;\r\n  font-size: 2rem;\r\n  background: black;\r\n  color: white;\r\n  padding: 20px 0;\r\n`\r\n// ListWrapper 안에 게시물들과 카테고리 버튼 들어가도록\r\nconst ListWrapper = styled.div`\r\n  margin: 0 auto;\r\n  width: 60%;\r\n  padding: 0 30px;\r\n  background: white;\r\n  @media screen and (max-width: 600px) {\r\n    width: 100%;\r\n  }\r\n`\r\n","/* eslint-disable */\r\n\r\nimport { useQuery, useMutation } from '@tanstack/react-query'\r\nimport { db } from '../../firebase'\r\nimport { collection, doc, addDoc, getDocs, query, where, orderBy } from 'firebase/firestore'\r\nimport getCurrentDate from 'utils/getCurrentDate'\r\n\r\nexport const getAllBlogList = async () => {\r\n  const result = []\r\n  try {\r\n    const q = query(collection(db, 'blog'), orderBy('createdAt', 'desc'))\r\n    const querySnapshot = await getDocs(q)\r\n\r\n    querySnapshot.forEach(item => {\r\n      result.push({ ...item.data(), id: item.id })\r\n    })\r\n    return result\r\n  } catch (error) {\r\n    console.error('Error fetching document:', error)\r\n    throw error\r\n  }\r\n}\r\n\r\nconst postBlogItem = async data => {\r\n  await addDoc(collection(db, 'blog'), {\r\n    category: data.category,\r\n    content: data.content,\r\n    title: data.title,\r\n    summary: data.summary,\r\n    createdAt: getCurrentDate(),\r\n    id: null,\r\n  })\r\n}\r\n\r\nexport const useBlogQuery = () => {\r\n  return useQuery({\r\n    queryKey: ['blogList'],\r\n    queryFn: getAllBlogList,\r\n  })\r\n}\r\nexport const useBlogItemMutation = () => {\r\n  return useMutation({\r\n    mutationFn: postBlogItem,\r\n  })\r\n}\r\n"],"names":["getThumnailImg","htmlString","firstImage","DOMParser","parseFromString","querySelector","src","errorImg","BoardItem","_ref","dataObj","_jsxs","BoardItemWrapper","children","_jsx","ImgWrapper","ContentImg","content","width","height","TextWrapperLink","to","concat","id","state","item","BoardTitle","title","BoardContent","summary","styled","div","_templateObject","_taggedTemplateLiteral","_templateObject2","Link","_templateObject3","_templateObject4","_templateObject5","options","map","label","index","value","BlogHome","data","isLoading","isFetching","useBlogQuery","_Fragment","Title","AppWindow","Select","getAllBlogList","async","result","q","query","collection","db","orderBy","getDocs","forEach","push","error","console","postBlogItem","addDoc","category","createdAt","getCurrentDate","useQuery","queryKey","queryFn","useBlogItemMutation","useMutation","mutationFn"],"sourceRoot":""}