{"version":3,"file":"static/js/964.49703a78.chunk.js","mappings":"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qC,GAAS,GAAGF,IAAMlE,OAAO8J,OAAO,CAAC,EAAGykC,EAAOltB,GAAY,GAAGnd,MAEjEqqC,EAAOnqC,GAAS,GAAKo4C,EAKvB,OADAjO,EAAO1pC,KAAK,CAAC,OAAQ23C,EAASnN,IACvBd,CACT,GC3DO,MAAMkO,GAAiB,CAC5B,UACA,UACA,QACA,OACA,WACA,aACA,OACA,UACA,SACA,MACA,WACA,KACA,UACA,SACA,MACA,MACA,KACA,KACA,WACA,aACA,SACA,SACA,OACA,QACA,WACA,KACA,KACA,KACA,KACA,KACA,KACA,OACA,SACA,KACA,OACA,SACA,SACA,KACA,OACA,OACA,OACA,WACA,MACA,WACA,KACA,WACA,SACA,IACA,QACA,SACA,UACA,UACA,QACA,QACA,KACA,QACA,KACA,QACA,QACA,KACA,QACA,MAeWC,GAAe,CAAC,MAAO,SAAU,QAAS,YCxE1CC,GAAW,CACtBt7C,KAAM,WACN4wC,SAsCF,SAA0BP,EAASC,EAAI4C,GACrC,MAAMjC,EAAOruC,KAEb,IAAIo1C,EAEAuD,EAEAC,EAEAh9B,EAEAi9B,EACJ,OAYA,SAAerpB,GAEb,OAaF,SAAgBA,GAId,OAHAie,EAAQI,MAAM,YACdJ,EAAQI,MAAM,gBACdJ,EAAQK,QAAQte,GACTtD,CACT,CAlBSsgB,CAAOhd,EAChB,EAiCA,SAAStD,EAAKsD,GACZ,OAAa,KAATA,GACFie,EAAQK,QAAQte,GACTspB,GAEI,KAATtpB,GACFie,EAAQK,QAAQte,GAChBmpB,GAAa,EACNI,GAEI,KAATvpB,GACFie,EAAQK,QAAQte,GAChB4lB,EAAS,EAMF/G,EAAKmB,UAAY9B,EAAKsL,GAI3BvM,GAAWjd,IACbie,EAAQK,QAAQte,GAEhBopB,EAASnyC,OAAO8mC,aAAa/d,GACtBoX,GAEF0J,EAAI9gB,EACb,CAgBA,SAASspB,EAAgBtpB,GACvB,OAAa,KAATA,GACFie,EAAQK,QAAQte,GAChB4lB,EAAS,EACF6D,GAEI,KAATzpB,GACFie,EAAQK,QAAQte,GAChB4lB,EAAS,EACTx5B,EAAQ,EACDs9B,GAILzM,GAAWjd,IACbie,EAAQK,QAAQte,GAChB4lB,EAAS,EAGF/G,EAAKmB,UAAY9B,EAAKsL,GAExB1I,EAAI9gB,EACb,CAYA,SAASypB,EAAkBzpB,GACzB,OAAa,KAATA,GACFie,EAAQK,QAAQte,GAGT6e,EAAKmB,UAAY9B,EAAKsL,GAExB1I,EAAI9gB,EACb,CAYA,SAAS0pB,EAAgB1pB,GACvB,MAAMjyB,EAAQ,SACd,OAAIiyB,IAASjyB,EAAM60C,WAAWx2B,MAC5B6xB,EAAQK,QAAQte,GACFjyB,IAAVqe,EAGKyyB,EAAKmB,UAAY9B,EAAKkB,EAExBsK,GAEF5I,EAAI9gB,EACb,CAYA,SAASupB,EAAcvpB,GACrB,OAAIid,GAAWjd,IACbie,EAAQK,QAAQte,GAEhBopB,EAASnyC,OAAO8mC,aAAa/d,GACtBoX,GAEF0J,EAAI9gB,EACb,CAcA,SAASoX,EAAQpX,GACf,GACW,OAATA,GACS,KAATA,GACS,KAATA,GACA0d,GAA0B1d,GAC1B,CACA,MAAM2pB,EAAiB,KAAT3pB,EACRpyB,EAAOw7C,EAAOvlC,cACpB,OAAK8lC,GAAUR,IAAcF,GAAaj7B,SAASpgB,GAM/Co7C,GAAeh7B,SAASo7B,EAAOvlC,gBACjC+hC,EAAS,EACL+D,GACF1L,EAAQK,QAAQte,GACT4pB,GAKF/K,EAAKmB,UAAY9B,EAAGle,GAAQof,EAAapf,KAElD4lB,EAAS,EAEF/G,EAAKmB,YAAcnB,EAAK7C,OAAOqE,KAAKxB,EAAKyB,MAAMlwC,MAClD0wC,EAAI9gB,GACJmpB,EACAU,EAAwB7pB,GACxB8pB,EAA4B9pB,KAtB9B4lB,EAAS,EAGF/G,EAAKmB,UAAY9B,EAAGle,GAAQof,EAAapf,GAoBpD,CAGA,OAAa,KAATA,GAAemd,GAAkBnd,IACnCie,EAAQK,QAAQte,GAChBopB,GAAUnyC,OAAO8mC,aAAa/d,GACvBoX,GAEF0J,EAAI9gB,EACb,CAYA,SAAS4pB,EAAiB5pB,GACxB,OAAa,KAATA,GACFie,EAAQK,QAAQte,GAGT6e,EAAKmB,UAAY9B,EAAKkB,GAExB0B,EAAI9gB,EACb,CAYA,SAAS6pB,EAAwB7pB,GAC/B,OAAI2d,GAAc3d,IAChBie,EAAQK,QAAQte,GACT6pB,GAEFE,EAAY/pB,EACrB,CAyBA,SAAS8pB,EAA4B9pB,GACnC,OAAa,KAATA,GACFie,EAAQK,QAAQte,GACT+pB,GAII,KAAT/pB,GAAwB,KAATA,GAAeid,GAAWjd,IAC3Cie,EAAQK,QAAQte,GACTgqB,GAELrM,GAAc3d,IAChBie,EAAQK,QAAQte,GACT8pB,GAEFC,EAAY/pB,EACrB,CAgBA,SAASgqB,EAAsBhqB,GAE7B,OACW,KAATA,GACS,KAATA,GACS,KAATA,GACS,KAATA,GACAmd,GAAkBnd,IAElBie,EAAQK,QAAQte,GACTgqB,GAEFC,EAA2BjqB,EACpC,CAeA,SAASiqB,EAA2BjqB,GAClC,OAAa,KAATA,GACFie,EAAQK,QAAQte,GACTkqB,GAELvM,GAAc3d,IAChBie,EAAQK,QAAQte,GACTiqB,GAEFH,EAA4B9pB,EACrC,CAeA,SAASkqB,EAA6BlqB,GACpC,OACW,OAATA,GACS,KAATA,GACS,KAATA,GACS,KAATA,GACS,KAATA,EAEO8gB,EAAI9gB,GAEA,KAATA,GAAwB,KAATA,GACjBie,EAAQK,QAAQte,GAChBqpB,EAAUrpB,EACHmqB,GAELxM,GAAc3d,IAChBie,EAAQK,QAAQte,GACTkqB,GAEFE,EAA+BpqB,EACxC,CAcA,SAASmqB,EAA6BnqB,GACpC,OAAIA,IAASqpB,GACXpL,EAAQK,QAAQte,GAChBqpB,EAAU,KACHgB,GAEI,OAATrqB,GAAiByd,GAAmBzd,GAC/B8gB,EAAI9gB,IAEbie,EAAQK,QAAQte,GACTmqB,EACT,CAYA,SAASC,EAA+BpqB,GACtC,OACW,OAATA,GACS,KAATA,GACS,KAATA,GACS,KAATA,GACS,KAATA,GACS,KAATA,GACS,KAATA,GACS,KAATA,GACA0d,GAA0B1d,GAEnBiqB,EAA2BjqB,IAEpCie,EAAQK,QAAQte,GACToqB,EACT,CAaA,SAASC,EAAkCrqB,GACzC,OAAa,KAATA,GAAwB,KAATA,GAAe2d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,CAYA,SAAS8vB,EAAe9vB,GACtB,OAAa,KAATA,GACFie,EAAQK,QAAQte,GACTvvB,GAII,KAATuvB,GAAwB,KAATA,GAAeid,GAAWjd,IAC3Cie,EAAQK,QAAQte,GACT+vB,GAELtS,GAAmBzd,IACrB2kB,EAAcmL,EACPP,EAAiBvvB,IAEtB2d,GAAc3d,IAChBie,EAAQK,QAAQte,GACT8vB,GAEFr/C,EAAIuvB,EACb,CAYA,SAAS+vB,EAAqB/vB,GAE5B,OACW,KAATA,GACS,KAATA,GACS,KAATA,GACS,KAATA,GACAmd,GAAkBnd,IAElBie,EAAQK,QAAQte,GACT+vB,GAEFC,EAA0BhwB,EACnC,CAaA,SAASgwB,EAA0BhwB,GACjC,OAAa,KAATA,GACFie,EAAQK,QAAQte,GACTiwB,GAELxS,GAAmBzd,IACrB2kB,EAAcqL,EACPT,EAAiBvvB,IAEtB2d,GAAc3d,IAChBie,EAAQK,QAAQte,GACTgwB,GAEFF,EAAe9vB,EACxB,CAaA,SAASiwB,EAA4BjwB,GACnC,OACW,OAATA,GACS,KAATA,GACS,KAATA,GACS,KAATA,GACS,KAATA,EAEO8gB,EAAI9gB,GAEA,KAATA,GAAwB,KAATA,GACjBie,EAAQK,QAAQte,GAChB4lB,EAAS5lB,EACFkwB,GAELzS,GAAmBzd,IACrB2kB,EAAcsL,EACPV,EAAiBvvB,IAEtB2d,GAAc3d,IAChBie,EAAQK,QAAQte,GACTiwB,IAEThS,EAAQK,QAAQte,GACTmwB,EACT,CAYA,SAASD,EAA4BlwB,GACnC,OAAIA,IAAS4lB,GACX3H,EAAQK,QAAQte,GAChB4lB,OAAS7uC,EACFq5C,GAEI,OAATpwB,EACK8gB,EAAI9gB,GAETyd,GAAmBzd,IACrB2kB,EAAcuL,EACPX,EAAiBvvB,KAE1Bie,EAAQK,QAAQte,GACTkwB,EACT,CAYA,SAASC,EAA8BnwB,GACrC,OACW,OAATA,GACS,KAATA,GACS,KAATA,GACS,KAATA,GACS,KAATA,GACS,KAATA,EAEO8gB,EAAI9gB,GAEA,KAATA,GAAwB,KAATA,GAAe0d,GAA0B1d,GACnD8vB,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","sources":["../node_modules/extend/index.js","../node_modules/inline-style-parser/index.js","../node_modules/prop-types/factoryWithThrowingShims.js","../node_modules/prop-types/index.js","../node_modules/prop-types/lib/ReactPropTypesSecret.js","../node_modules/react-draggable/build/cjs/Draggable.js","../node_modules/react-draggable/build/cjs/DraggableCore.js","../node_modules/react-draggable/build/cjs/cjs.js","../node_modules/react-draggable/build/cjs/utils/domFns.js","../node_modules/react-draggable/build/cjs/utils/getPrefix.js","../node_modules/react-draggable/build/cjs/utils/log.js","../node_modules/react-draggable/build/cjs/utils/positionFns.js","../node_modules/react-draggable/build/cjs/utils/shims.js","../node_modules/react-draggable/node_modules/clsx/dist/clsx.m.js","../node_modules/react-type-animation/dist/esm/index.es.js","../node_modules/style-to-object/src/index.ts","../node_modules/estree-util-is-identifier-name/lib/index.js","../node_modules/hast-util-whitespace/lib/index.js","../node_modules/property-information/lib/util/schema.js","../node_modules/property-information/lib/util/merge.js","../node_modules/property-information/lib/normalize.js","../node_modules/property-information/lib/util/info.js","../node_modules/property-information/lib/util/types.js","../node_modules/property-information/lib/util/defined-info.js","../node_modules/property-information/lib/util/create.js","../node_modules/property-information/lib/xlink.js","../node_modules/property-information/lib/xml.js","../node_modules/property-information/lib/util/case-sensitive-transform.js","../node_modules/property-information/lib/util/case-insensitive-transform.js","../node_modules/property-information/lib/xmlns.js","../node_modules/property-information/lib/aria.js","../node_modules/property-information/lib/html.js","../node_modules/property-information/lib/svg.js","../node_modules/property-information/index.js","../node_modules/property-information/lib/find.js","../node_modules/property-information/lib/hast-to-react.js","../node_modules/style-to-object/esm/index.mjs","../node_modules/unist-util-position/lib/index.js","../node_modules/unist-util-stringify-position/lib/index.js","../node_modules/vfile-message/lib/index.js","../node_modules/hast-util-to-jsx-runtime/lib/index.js","../node_modules/comma-separated-tokens/index.js","../node_modules/space-separated-tokens/index.js","../node_modules/html-url-attributes/lib/index.js","../node_modules/mdast-util-to-string/lib/index.js","../node_modules/micromark-util-chunked/index.js","../node_modules/micromark-util-subtokenize/index.js","../node_modules/micromark-util-combine-extensions/index.js","../node_modules/micromark-util-character/index.js","../node_modules/micromark-factory-space/index.js","../node_modules/micromark/lib/initialize/content.js","../node_modules/micromark/lib/initialize/document.js","../node_modules/micromark-core-commonmark/lib/blank-line.js","../node_modules/micromark-core-commonmark/lib/content.js","../node_modules/micromark/lib/initialize/flow.js","../node_modules/micromark/lib/initialize/text.js","../node_modules/micromark-util-resolve-all/index.js","../node_modules/micromark/lib/create-tokenizer.js","../node_modules/micromark-core-commonmark/lib/thematic-break.js","../node_modules/micromark-core-commonmark/lib/list.js","../node_modules/micromark-core-commonmark/lib/block-quote.js","../node_modules/micromark-factory-destination/index.js","../node_modules/micromark-factory-label/index.js","../node_modules/micromark-factory-title/index.js","../node_modules/micromark-factory-whitespace/index.js","../node_modules/micromark-util-normalize-identifier/index.js","../node_modules/micromark-core-commonmark/lib/definition.js","../node_modules/micromark-core-commonmark/lib/code-indented.js","../node_modules/micromark-core-commonmark/lib/heading-atx.js","../node_modules/micromark-core-commonmark/lib/setext-underline.js","../node_modules/micromark-util-html-tag-name/index.js","../node_modules/micromark-core-commonmark/lib/html-flow.js","../node_modules/micromark-core-commonmark/lib/code-fenced.js","../node_modules/decode-named-character-reference/index.dom.js","../node_modules/micromark-core-commonmark/lib/character-reference.js","../node_modules/micromark-core-commonmark/lib/character-escape.js","../node_modules/micromark-core-commonmark/lib/line-ending.js","../node_modules/micromark-core-commonmark/lib/label-end.js","../node_modules/micromark-core-commonmark/lib/label-start-image.js","../node_modules/micromark-util-classify-character/index.js","../node_modules/micromark-core-commonmark/lib/attention.js","../node_modules/micromark-core-commonmark/lib/autolink.js","../node_modules/micromark-core-commonmark/lib/html-text.js","../node_modules/micromark-core-commonmark/lib/label-start-link.js","../node_modules/micromark-core-commonmark/lib/hard-break-escape.js","../node_modules/micromark-core-commonmark/lib/code-text.js","../node_modules/micromark/lib/constructs.js","../node_modules/micromark/lib/parse.js","../node_modules/micromark/lib/preprocess.js","../node_modules/micromark-util-decode-numeric-character-reference/index.js","../node_modules/micromark-util-decode-string/index.js","../node_modules/mdast-util-from-markdown/lib/index.js","../node_modules/micromark/lib/postprocess.js","../node_modules/remark-parse/lib/index.js","../node_modules/@ungap/structured-clone/esm/types.js","../node_modules/@ungap/structured-clone/esm/deserialize.js","../node_modules/@ungap/structured-clone/esm/serialize.js","../node_modules/@ungap/structured-clone/esm/index.js","../node_modules/micromark-util-sanitize-uri/index.js","../node_modules/mdast-util-to-hast/lib/footer.js","../node_modules/unist-util-is/lib/index.js","../node_modules/unist-util-visit-parents/lib/index.js","../node_modules/unist-util-visit/lib/index.js","../node_modules/mdast-util-to-hast/lib/revert.js","../node_modules/mdast-util-to-hast/lib/handlers/list-item.js","../node_modules/trim-lines/index.js","../node_modules/mdast-util-to-hast/lib/handlers/index.js","../node_modules/mdast-util-to-hast/lib/handlers/blockquote.js","../node_modules/mdast-util-to-hast/lib/handlers/break.js","../node_modules/mdast-util-to-hast/lib/handlers/code.js","../node_modules/mdast-util-to-hast/lib/handlers/delete.js","../node_modules/mdast-util-to-hast/lib/handlers/emphasis.js","../node_modules/mdast-util-to-hast/lib/handlers/footnote-reference.js","../node_modules/mdast-util-to-hast/lib/handlers/heading.js","../node_modules/mdast-util-to-hast/lib/handlers/html.js","../node_modules/mdast-util-to-hast/lib/handlers/image-reference.js","../node_modules/mdast-util-to-hast/lib/handlers/image.js","../node_modules/mdast-util-to-hast/lib/handlers/inline-code.js","../node_modules/mdast-util-to-hast/lib/handlers/link-reference.js","../node_modules/mdast-util-to-hast/lib/handlers/link.js","../node_modules/mdast-util-to-hast/lib/handlers/list.js","../node_modules/mdast-util-to-hast/lib/handlers/paragraph.js","../node_modules/mdast-util-to-hast/lib/handlers/root.js","../node_modules/mdast-util-to-hast/lib/handlers/strong.js","../node_modules/mdast-util-to-hast/lib/handlers/table.js","../node_modules/mdast-util-to-hast/lib/handlers/table-cell.js","../node_modules/mdast-util-to-hast/lib/handlers/table-row.js","../node_modules/mdast-util-to-hast/lib/handlers/text.js","../node_modules/mdast-util-to-hast/lib/handlers/thematic-break.js","../node_modules/mdast-util-to-hast/lib/state.js","../node_modules/mdast-util-to-hast/lib/index.js","../node_modules/remark-rehype/lib/index.js","../node_modules/bail/index.js","../node_modules/unified/node_modules/is-plain-obj/index.js","../node_modules/trough/lib/index.js","../node_modules/vfile/lib/minpath.browser.js","../node_modules/vfile/lib/minproc.browser.js","../node_modules/vfile/lib/minurl.shared.js","../node_modules/vfile/lib/minurl.browser.js","../node_modules/vfile/lib/index.js","../node_modules/unified/lib/callable-instance.js","../node_modules/unified/lib/index.js","../node_modules/react-markdown/lib/index.js"],"sourcesContent":["'use strict';\n\nvar hasOwn = Object.prototype.hasOwnProperty;\nvar toStr = Object.prototype.toString;\nvar defineProperty = Object.defineProperty;\nvar gOPD = Object.getOwnPropertyDescriptor;\n\nvar isArray = function isArray(arr) {\n\tif (typeof Array.isArray === 'function') {\n\t\treturn Array.isArray(arr);\n\t}\n\n\treturn toStr.call(arr) === '[object Array]';\n};\n\nvar isPlainObject = function isPlainObject(obj) {\n\tif (!obj || toStr.call(obj) !== '[object Object]') {\n\t\treturn false;\n\t}\n\n\tvar hasOwnConstructor = hasOwn.call(obj, 'constructor');\n\tvar hasIsPrototypeOf = obj.constructor && obj.constructor.prototype && hasOwn.call(obj.constructor.prototype, 'isPrototypeOf');\n\t// Not own constructor property must be Object\n\tif (obj.constructor && !hasOwnConstructor && !hasIsPrototypeOf) {\n\t\treturn false;\n\t}\n\n\t// Own properties are enumerated firstly, so to speed up,\n\t// if last one is own, then all properties are own.\n\tvar key;\n\tfor (key in obj) { /**/ }\n\n\treturn typeof key === 'undefined' || hasOwn.call(obj, key);\n};\n\n// If name is '__proto__', and Object.defineProperty is available, define __proto__ as an own property on target\nvar setProperty = function setProperty(target, options) {\n\tif (defineProperty && options.name === '__proto__') {\n\t\tdefineProperty(target, options.name, {\n\t\t\tenumerable: true,\n\t\t\tconfigurable: true,\n\t\t\tvalue: options.newValue,\n\t\t\twritable: true\n\t\t});\n\t} else {\n\t\ttarget[options.name] = options.newValue;\n\t}\n};\n\n// Return undefined instead of __proto__ if '__proto__' is not an own property\nvar getProperty = function getProperty(obj, name) {\n\tif (name === '__proto__') {\n\t\tif (!hasOwn.call(obj, name)) {\n\t\t\treturn void 0;\n\t\t} else if (gOPD) {\n\t\t\t// In early versions of node, obj['__proto__'] is buggy when obj has\n\t\t\t// __proto__ as an own property. Object.getOwnPropertyDescriptor() works.\n\t\t\treturn gOPD(obj, name).value;\n\t\t}\n\t}\n\n\treturn obj[name];\n};\n\nmodule.exports = function extend() {\n\tvar options, name, src, copy, copyIsArray, clone;\n\tvar target = arguments[0];\n\tvar i = 1;\n\tvar length = arguments.length;\n\tvar deep = false;\n\n\t// Handle a deep copy situation\n\tif (typeof target === 'boolean') {\n\t\tdeep = target;\n\t\ttarget = arguments[1] || {};\n\t\t// skip the boolean and the target\n\t\ti = 2;\n\t}\n\tif (target == null || (typeof target !== 'object' && typeof target !== 'function')) {\n\t\ttarget = {};\n\t}\n\n\tfor (; i < length; ++i) {\n\t\toptions = arguments[i];\n\t\t// Only deal with non-null/undefined values\n\t\tif (options != null) {\n\t\t\t// Extend the base object\n\t\t\tfor (name in options) {\n\t\t\t\tsrc = getProperty(target, name);\n\t\t\t\tcopy = getProperty(options, name);\n\n\t\t\t\t// Prevent never-ending loop\n\t\t\t\tif (target !== copy) {\n\t\t\t\t\t// Recurse if we're merging plain objects or arrays\n\t\t\t\t\tif (deep && copy && (isPlainObject(copy) || (copyIsArray = isArray(copy)))) {\n\t\t\t\t\t\tif (copyIsArray) {\n\t\t\t\t\t\t\tcopyIsArray = false;\n\t\t\t\t\t\t\tclone = src && isArray(src) ? src : [];\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tclone = src && isPlainObject(src) ? src : {};\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// Never move original objects, clone them\n\t\t\t\t\t\tsetProperty(target, { name: name, newValue: extend(deep, clone, copy) });\n\n\t\t\t\t\t// Don't bring in undefined values\n\t\t\t\t\t} else if (typeof copy !== 'undefined') {\n\t\t\t\t\t\tsetProperty(target, { name: name, newValue: copy });\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t// Return the modified object\n\treturn target;\n};\n","// http://www.w3.org/TR/CSS21/grammar.html\n// https://github.com/visionmedia/css-parse/pull/49#issuecomment-30088027\nvar COMMENT_REGEX = /\\/\\*[^*]*\\*+([^/*][^*]*\\*+)*\\//g;\n\nvar NEWLINE_REGEX = /\\n/g;\nvar WHITESPACE_REGEX = /^\\s*/;\n\n// declaration\nvar PROPERTY_REGEX = /^(\\*?[-#/*\\\\\\w]+(\\[[0-9a-z_-]+\\])?)\\s*/;\nvar COLON_REGEX = /^:\\s*/;\nvar VALUE_REGEX = /^((?:'(?:\\\\'|.)*?'|\"(?:\\\\\"|.)*?\"|\\([^)]*?\\)|[^};])+)/;\nvar SEMICOLON_REGEX = /^[;\\s]*/;\n\n// https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/String/Trim#Polyfill\nvar TRIM_REGEX = /^\\s+|\\s+$/g;\n\n// strings\nvar NEWLINE = '\\n';\nvar FORWARD_SLASH = '/';\nvar ASTERISK = '*';\nvar EMPTY_STRING = '';\n\n// types\nvar TYPE_COMMENT = 'comment';\nvar TYPE_DECLARATION = 'declaration';\n\n/**\n * @param {String} style\n * @param {Object} [options]\n * @return {Object[]}\n * @throws {TypeError}\n * @throws {Error}\n */\nmodule.exports = function (style, options) {\n  if (typeof style !== 'string') {\n    throw new TypeError('First argument must be a string');\n  }\n\n  if (!style) return [];\n\n  options = options || {};\n\n  /**\n   * Positional.\n   */\n  var lineno = 1;\n  var column = 1;\n\n  /**\n   * Update lineno and column based on `str`.\n   *\n   * @param {String} str\n   */\n  function updatePosition(str) {\n    var lines = str.match(NEWLINE_REGEX);\n    if (lines) lineno += lines.length;\n    var i = str.lastIndexOf(NEWLINE);\n    column = ~i ? str.length - i : column + str.length;\n  }\n\n  /**\n   * Mark position and patch `node.position`.\n   *\n   * @return {Function}\n   */\n  function position() {\n    var start = { line: lineno, column: column };\n    return function (node) {\n      node.position = new Position(start);\n      whitespace();\n      return node;\n    };\n  }\n\n  /**\n   * Store position information for a node.\n   *\n   * @constructor\n   * @property {Object} start\n   * @property {Object} end\n   * @property {undefined|String} source\n   */\n  function Position(start) {\n    this.start = start;\n    this.end = { line: lineno, column: column };\n    this.source = options.source;\n  }\n\n  /**\n   * Non-enumerable source string.\n   */\n  Position.prototype.content = style;\n\n  var errorsList = [];\n\n  /**\n   * Error `msg`.\n   *\n   * @param {String} msg\n   * @throws {Error}\n   */\n  function error(msg) {\n    var err = new Error(\n      options.source + ':' + lineno + ':' + column + ': ' + msg\n    );\n    err.reason = msg;\n    err.filename = options.source;\n    err.line = lineno;\n    err.column = column;\n    err.source = style;\n\n    if (options.silent) {\n      errorsList.push(err);\n    } else {\n      throw err;\n    }\n  }\n\n  /**\n   * Match `re` and return captures.\n   *\n   * @param {RegExp} re\n   * @return {undefined|Array}\n   */\n  function match(re) {\n    var m = re.exec(style);\n    if (!m) return;\n    var str = m[0];\n    updatePosition(str);\n    style = style.slice(str.length);\n    return m;\n  }\n\n  /**\n   * Parse whitespace.\n   */\n  function whitespace() {\n    match(WHITESPACE_REGEX);\n  }\n\n  /**\n   * Parse comments.\n   *\n   * @param {Object[]} [rules]\n   * @return {Object[]}\n   */\n  function comments(rules) {\n    var c;\n    rules = rules || [];\n    while ((c = comment())) {\n      if (c !== false) {\n        rules.push(c);\n      }\n    }\n    return rules;\n  }\n\n  /**\n   * Parse comment.\n   *\n   * @return {Object}\n   * @throws {Error}\n   */\n  function comment() {\n    var pos = position();\n    if (FORWARD_SLASH != style.charAt(0) || ASTERISK != style.charAt(1)) return;\n\n    var i = 2;\n    while (\n      EMPTY_STRING != style.charAt(i) &&\n      (ASTERISK != style.charAt(i) || FORWARD_SLASH != style.charAt(i + 1))\n    ) {\n      ++i;\n    }\n    i += 2;\n\n    if (EMPTY_STRING === style.charAt(i - 1)) {\n      return error('End of comment missing');\n    }\n\n    var str = style.slice(2, i - 2);\n    column += 2;\n    updatePosition(str);\n    style = style.slice(i);\n    column += 2;\n\n    return pos({\n      type: TYPE_COMMENT,\n      comment: str\n    });\n  }\n\n  /**\n   * Parse declaration.\n   *\n   * @return {Object}\n   * @throws {Error}\n   */\n  function declaration() {\n    var pos = position();\n\n    // prop\n    var prop = match(PROPERTY_REGEX);\n    if (!prop) return;\n    comment();\n\n    // :\n    if (!match(COLON_REGEX)) return error(\"property missing ':'\");\n\n    // val\n    var val = match(VALUE_REGEX);\n\n    var ret = pos({\n      type: TYPE_DECLARATION,\n      property: trim(prop[0].replace(COMMENT_REGEX, EMPTY_STRING)),\n      value: val\n        ? trim(val[0].replace(COMMENT_REGEX, EMPTY_STRING))\n        : EMPTY_STRING\n    });\n\n    // ;\n    match(SEMICOLON_REGEX);\n\n    return ret;\n  }\n\n  /**\n   * Parse declarations.\n   *\n   * @return {Object[]}\n   */\n  function declarations() {\n    var decls = [];\n\n    comments(decls);\n\n    // declarations\n    var decl;\n    while ((decl = declaration())) {\n      if (decl !== false) {\n        decls.push(decl);\n        comments(decls);\n      }\n    }\n\n    return decls;\n  }\n\n  whitespace();\n  return declarations();\n};\n\n/**\n * Trim `str`.\n *\n * @param {String} str\n * @return {String}\n */\nfunction trim(str) {\n  return str ? str.replace(TRIM_REGEX, EMPTY_STRING) : EMPTY_STRING;\n}\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\nvar ReactPropTypesSecret = require('./lib/ReactPropTypesSecret');\n\nfunction emptyFunction() {}\nfunction emptyFunctionWithReset() {}\nemptyFunctionWithReset.resetWarningCache = emptyFunction;\n\nmodule.exports = function() {\n  function shim(props, propName, componentName, location, propFullName, secret) {\n    if (secret === ReactPropTypesSecret) {\n      // It is still safe when called from React.\n      return;\n    }\n    var err = new Error(\n      'Calling PropTypes validators directly is not supported by the `prop-types` package. ' +\n      'Use PropTypes.checkPropTypes() to call them. ' +\n      'Read more at http://fb.me/use-check-prop-types'\n    );\n    err.name = 'Invariant Violation';\n    throw err;\n  };\n  shim.isRequired = shim;\n  function getShim() {\n    return shim;\n  };\n  // Important!\n  // Keep this list in sync with production version in `./factoryWithTypeCheckers.js`.\n  var ReactPropTypes = {\n    array: shim,\n    bigint: shim,\n    bool: shim,\n    func: shim,\n    number: shim,\n    object: shim,\n    string: shim,\n    symbol: shim,\n\n    any: shim,\n    arrayOf: getShim,\n    element: shim,\n    elementType: shim,\n    instanceOf: getShim,\n    node: shim,\n    objectOf: getShim,\n    oneOf: getShim,\n    oneOfType: getShim,\n    shape: getShim,\n    exact: getShim,\n\n    checkPropTypes: emptyFunctionWithReset,\n    resetWarningCache: emptyFunction\n  };\n\n  ReactPropTypes.PropTypes = ReactPropTypes;\n\n  return ReactPropTypes;\n};\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nif (process.env.NODE_ENV !== 'production') {\n  var ReactIs = require('react-is');\n\n  // By explicitly using `prop-types` you are opting into new development behavior.\n  // http://fb.me/prop-types-in-prod\n  var throwOnDirectAccess = true;\n  module.exports = require('./factoryWithTypeCheckers')(ReactIs.isElement, throwOnDirectAccess);\n} else {\n  // By explicitly using `prop-types` you are opting into new production behavior.\n  // http://fb.me/prop-types-in-prod\n  module.exports = require('./factoryWithThrowingShims')();\n}\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\nvar ReactPropTypesSecret = 'SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED';\n\nmodule.exports = ReactPropTypesSecret;\n","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nObject.defineProperty(exports, \"DraggableCore\", {\n  enumerable: true,\n  get: function () {\n    return _DraggableCore.default;\n  }\n});\nexports.default = void 0;\nvar React = _interopRequireWildcard(require(\"react\"));\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\nvar _reactDom = _interopRequireDefault(require(\"react-dom\"));\nvar _clsx = _interopRequireDefault(require(\"clsx\"));\nvar _domFns = require(\"./utils/domFns\");\nvar _positionFns = require(\"./utils/positionFns\");\nvar _shims = require(\"./utils/shims\");\nvar _DraggableCore = _interopRequireDefault(require(\"./DraggableCore\"));\nvar _log = _interopRequireDefault(require(\"./utils/log\"));\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\nfunction _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== \"function\") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function (nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }\nfunction _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction _defineProperty(obj, key, value) { key = _toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\nfunction _toPropertyKey(arg) { var key = _toPrimitive(arg, \"string\"); return typeof key === \"symbol\" ? key : String(key); }\nfunction _toPrimitive(input, hint) { if (typeof input !== \"object\" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || \"default\"); if (typeof res !== \"object\") return res; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (hint === \"string\" ? String : Number)(input); } /*:: import type {ControlPosition, PositionOffsetControlPosition, DraggableCoreProps, DraggableCoreDefaultProps} from './DraggableCore';*/\n/*:: import type {Bounds, DraggableEventHandler} from './utils/types';*/\n/*:: import type {Element as ReactElement} from 'react';*/\n/*:: type DraggableState = {\n  dragging: boolean,\n  dragged: boolean,\n  x: number, y: number,\n  slackX: number, slackY: number,\n  isElementSVG: boolean,\n  prevPropsPosition: ?ControlPosition,\n};*/\n/*:: export type DraggableDefaultProps = {\n  ...DraggableCoreDefaultProps,\n  axis: 'both' | 'x' | 'y' | 'none',\n  bounds: Bounds | string | false,\n  defaultClassName: string,\n  defaultClassNameDragging: string,\n  defaultClassNameDragged: string,\n  defaultPosition: ControlPosition,\n  scale: number,\n};*/\n/*:: export type DraggableProps = {\n  ...DraggableCoreProps,\n  ...DraggableDefaultProps,\n  positionOffset: PositionOffsetControlPosition,\n  position: ControlPosition,\n};*/\n//\n// Define <Draggable>\n//\nclass Draggable extends React.Component /*:: <DraggableProps, DraggableState>*/{\n  // React 16.3+\n  // Arity (props, state)\n  static getDerivedStateFromProps(_ref /*:: */, _ref2 /*:: */) /*: ?Partial<DraggableState>*/{\n    let {\n      position\n    } /*: DraggableProps*/ = _ref /*: DraggableProps*/;\n    let {\n      prevPropsPosition\n    } /*: DraggableState*/ = _ref2 /*: DraggableState*/;\n    // Set x/y if a new position is provided in props that is different than the previous.\n    if (position && (!prevPropsPosition || position.x !== prevPropsPosition.x || position.y !== prevPropsPosition.y)) {\n      (0, _log.default)('Draggable: getDerivedStateFromProps %j', {\n        position,\n        prevPropsPosition\n      });\n      return {\n        x: position.x,\n        y: position.y,\n        prevPropsPosition: {\n          ...position\n        }\n      };\n    }\n    return null;\n  }\n  constructor(props /*: DraggableProps*/) {\n    super(props);\n    _defineProperty(this, \"onDragStart\", (e, coreData) => {\n      (0, _log.default)('Draggable: onDragStart: %j', coreData);\n\n      // Short-circuit if user's callback killed it.\n      const shouldStart = this.props.onStart(e, (0, _positionFns.createDraggableData)(this, coreData));\n      // Kills start event on core as well, so move handlers are never bound.\n      if (shouldStart === false) return false;\n      this.setState({\n        dragging: true,\n        dragged: true\n      });\n    });\n    _defineProperty(this, \"onDrag\", (e, coreData) => {\n      if (!this.state.dragging) return false;\n      (0, _log.default)('Draggable: onDrag: %j', coreData);\n      const uiData = (0, _positionFns.createDraggableData)(this, coreData);\n      const newState = {\n        x: uiData.x,\n        y: uiData.y,\n        slackX: 0,\n        slackY: 0\n      };\n\n      // Keep within bounds.\n      if (this.props.bounds) {\n        // Save original x and y.\n        const {\n          x,\n          y\n        } = newState;\n\n        // Add slack to the values used to calculate bound position. This will ensure that if\n        // we start removing slack, the element won't react to it right away until it's been\n        // completely removed.\n        newState.x += this.state.slackX;\n        newState.y += this.state.slackY;\n\n        // Get bound position. This will ceil/floor the x and y within the boundaries.\n        const [newStateX, newStateY] = (0, _positionFns.getBoundPosition)(this, newState.x, newState.y);\n        newState.x = newStateX;\n        newState.y = newStateY;\n\n        // Recalculate slack by noting how much was shaved by the boundPosition handler.\n        newState.slackX = this.state.slackX + (x - newState.x);\n        newState.slackY = this.state.slackY + (y - newState.y);\n\n        // Update the event we fire to reflect what really happened after bounds took effect.\n        uiData.x = newState.x;\n        uiData.y = newState.y;\n        uiData.deltaX = newState.x - this.state.x;\n        uiData.deltaY = newState.y - this.state.y;\n      }\n\n      // Short-circuit if user's callback killed it.\n      const shouldUpdate = this.props.onDrag(e, uiData);\n      if (shouldUpdate === false) return false;\n      this.setState(newState);\n    });\n    _defineProperty(this, \"onDragStop\", (e, coreData) => {\n      if (!this.state.dragging) return false;\n\n      // Short-circuit if user's callback killed it.\n      const shouldContinue = this.props.onStop(e, (0, _positionFns.createDraggableData)(this, coreData));\n      if (shouldContinue === false) return false;\n      (0, _log.default)('Draggable: onDragStop: %j', coreData);\n      const newState /*: Partial<DraggableState>*/ = {\n        dragging: false,\n        slackX: 0,\n        slackY: 0\n      };\n\n      // If this is a controlled component, the result of this operation will be to\n      // revert back to the old position. We expect a handler on `onDragStop`, at the least.\n      const controlled = Boolean(this.props.position);\n      if (controlled) {\n        const {\n          x,\n          y\n        } = this.props.position;\n        newState.x = x;\n        newState.y = y;\n      }\n      this.setState(newState);\n    });\n    this.state = {\n      // Whether or not we are currently dragging.\n      dragging: false,\n      // Whether or not we have been dragged before.\n      dragged: false,\n      // Current transform x and y.\n      x: props.position ? props.position.x : props.defaultPosition.x,\n      y: props.position ? props.position.y : props.defaultPosition.y,\n      prevPropsPosition: {\n        ...props.position\n      },\n      // Used for compensating for out-of-bounds drags\n      slackX: 0,\n      slackY: 0,\n      // Can only determine if SVG after mounting\n      isElementSVG: false\n    };\n    if (props.position && !(props.onDrag || props.onStop)) {\n      // eslint-disable-next-line no-console\n      console.warn('A `position` was applied to this <Draggable>, without drag handlers. This will make this ' + 'component effectively undraggable. Please attach `onDrag` or `onStop` handlers so you can adjust the ' + '`position` of this element.');\n    }\n  }\n  componentDidMount() {\n    // Check to see if the element passed is an instanceof SVGElement\n    if (typeof window.SVGElement !== 'undefined' && this.findDOMNode() instanceof window.SVGElement) {\n      this.setState({\n        isElementSVG: true\n      });\n    }\n  }\n  componentWillUnmount() {\n    this.setState({\n      dragging: false\n    }); // prevents invariant if unmounted while dragging\n  }\n\n  // React Strict Mode compatibility: if `nodeRef` is passed, we will use it instead of trying to find\n  // the underlying DOM node ourselves. See the README for more information.\n  findDOMNode() /*: ?HTMLElement*/{\n    var _this$props$nodeRef$c, _this$props;\n    return (_this$props$nodeRef$c = (_this$props = this.props) === null || _this$props === void 0 || (_this$props = _this$props.nodeRef) === null || _this$props === void 0 ? void 0 : _this$props.current) !== null && _this$props$nodeRef$c !== void 0 ? _this$props$nodeRef$c : _reactDom.default.findDOMNode(this);\n  }\n  render() /*: ReactElement<any>*/{\n    const {\n      axis,\n      bounds,\n      children,\n      defaultPosition,\n      defaultClassName,\n      defaultClassNameDragging,\n      defaultClassNameDragged,\n      position,\n      positionOffset,\n      scale,\n      ...draggableCoreProps\n    } = this.props;\n    let style = {};\n    let svgTransform = null;\n\n    // If this is controlled, we don't want to move it - unless it's dragging.\n    const controlled = Boolean(position);\n    const draggable = !controlled || this.state.dragging;\n    const validPosition = position || defaultPosition;\n    const transformOpts = {\n      // Set left if horizontal drag is enabled\n      x: (0, _positionFns.canDragX)(this) && draggable ? this.state.x : validPosition.x,\n      // Set top if vertical drag is enabled\n      y: (0, _positionFns.canDragY)(this) && draggable ? this.state.y : validPosition.y\n    };\n\n    // If this element was SVG, we use the `transform` attribute.\n    if (this.state.isElementSVG) {\n      svgTransform = (0, _domFns.createSVGTransform)(transformOpts, positionOffset);\n    } else {\n      // Add a CSS transform to move the element around. This allows us to move the element around\n      // without worrying about whether or not it is relatively or absolutely positioned.\n      // If the item you are dragging already has a transform set, wrap it in a <span> so <Draggable>\n      // has a clean slate.\n      style = (0, _domFns.createCSSTransform)(transformOpts, positionOffset);\n    }\n\n    // Mark with class while dragging\n    const className = (0, _clsx.default)(children.props.className || '', defaultClassName, {\n      [defaultClassNameDragging]: this.state.dragging,\n      [defaultClassNameDragged]: this.state.dragged\n    });\n\n    // Reuse the child provided\n    // This makes it flexible to use whatever element is wanted (div, ul, etc)\n    return /*#__PURE__*/React.createElement(_DraggableCore.default, _extends({}, draggableCoreProps, {\n      onStart: this.onDragStart,\n      onDrag: this.onDrag,\n      onStop: this.onDragStop\n    }), /*#__PURE__*/React.cloneElement(React.Children.only(children), {\n      className: className,\n      style: {\n        ...children.props.style,\n        ...style\n      },\n      transform: svgTransform\n    }));\n  }\n}\nexports.default = Draggable;\n_defineProperty(Draggable, \"displayName\", 'Draggable');\n_defineProperty(Draggable, \"propTypes\", {\n  // Accepts all props <DraggableCore> accepts.\n  ..._DraggableCore.default.propTypes,\n  /**\n   * `axis` determines which axis the draggable can move.\n   *\n   *  Note that all callbacks will still return data as normal. This only\n   *  controls flushing to the DOM.\n   *\n   * 'both' allows movement horizontally and vertically.\n   * 'x' limits movement to horizontal axis.\n   * 'y' limits movement to vertical axis.\n   * 'none' limits all movement.\n   *\n   * Defaults to 'both'.\n   */\n  axis: _propTypes.default.oneOf(['both', 'x', 'y', 'none']),\n  /**\n   * `bounds` determines the range of movement available to the element.\n   * Available values are:\n   *\n   * 'parent' restricts movement within the Draggable's parent node.\n   *\n   * Alternatively, pass an object with the following properties, all of which are optional:\n   *\n   * {left: LEFT_BOUND, right: RIGHT_BOUND, bottom: BOTTOM_BOUND, top: TOP_BOUND}\n   *\n   * All values are in px.\n   *\n   * Example:\n   *\n   * ```jsx\n   *   let App = React.createClass({\n   *       render: function () {\n   *         return (\n   *            <Draggable bounds={{right: 300, bottom: 300}}>\n   *              <div>Content</div>\n   *           </Draggable>\n   *         );\n   *       }\n   *   });\n   * ```\n   */\n  bounds: _propTypes.default.oneOfType([_propTypes.default.shape({\n    left: _propTypes.default.number,\n    right: _propTypes.default.number,\n    top: _propTypes.default.number,\n    bottom: _propTypes.default.number\n  }), _propTypes.default.string, _propTypes.default.oneOf([false])]),\n  defaultClassName: _propTypes.default.string,\n  defaultClassNameDragging: _propTypes.default.string,\n  defaultClassNameDragged: _propTypes.default.string,\n  /**\n   * `defaultPosition` specifies the x and y that the dragged item should start at\n   *\n   * Example:\n   *\n   * ```jsx\n   *      let App = React.createClass({\n   *          render: function () {\n   *              return (\n   *                  <Draggable defaultPosition={{x: 25, y: 25}}>\n   *                      <div>I start with transformX: 25px and transformY: 25px;</div>\n   *                  </Draggable>\n   *              );\n   *          }\n   *      });\n   * ```\n   */\n  defaultPosition: _propTypes.default.shape({\n    x: _propTypes.default.number,\n    y: _propTypes.default.number\n  }),\n  positionOffset: _propTypes.default.shape({\n    x: _propTypes.default.oneOfType([_propTypes.default.number, _propTypes.default.string]),\n    y: _propTypes.default.oneOfType([_propTypes.default.number, _propTypes.default.string])\n  }),\n  /**\n   * `position`, if present, defines the current position of the element.\n   *\n   *  This is similar to how form elements in React work - if no `position` is supplied, the component\n   *  is uncontrolled.\n   *\n   * Example:\n   *\n   * ```jsx\n   *      let App = React.createClass({\n   *          render: function () {\n   *              return (\n   *                  <Draggable position={{x: 25, y: 25}}>\n   *                      <div>I start with transformX: 25px and transformY: 25px;</div>\n   *                  </Draggable>\n   *              );\n   *          }\n   *      });\n   * ```\n   */\n  position: _propTypes.default.shape({\n    x: _propTypes.default.number,\n    y: _propTypes.default.number\n  }),\n  /**\n   * These properties should be defined on the child, not here.\n   */\n  className: _shims.dontSetMe,\n  style: _shims.dontSetMe,\n  transform: _shims.dontSetMe\n});\n_defineProperty(Draggable, \"defaultProps\", {\n  ..._DraggableCore.default.defaultProps,\n  axis: 'both',\n  bounds: false,\n  defaultClassName: 'react-draggable',\n  defaultClassNameDragging: 'react-draggable-dragging',\n  defaultClassNameDragged: 'react-draggable-dragged',\n  defaultPosition: {\n    x: 0,\n    y: 0\n  },\n  scale: 1\n});","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar React = _interopRequireWildcard(require(\"react\"));\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\nvar _reactDom = _interopRequireDefault(require(\"react-dom\"));\nvar _domFns = require(\"./utils/domFns\");\nvar _positionFns = require(\"./utils/positionFns\");\nvar _shims = require(\"./utils/shims\");\nvar _log = _interopRequireDefault(require(\"./utils/log\"));\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\nfunction _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== \"function\") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function (nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }\nfunction _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\nfunction _defineProperty(obj, key, value) { key = _toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\nfunction _toPropertyKey(arg) { var key = _toPrimitive(arg, \"string\"); return typeof key === \"symbol\" ? key : String(key); }\nfunction _toPrimitive(input, hint) { if (typeof input !== \"object\" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || \"default\"); if (typeof res !== \"object\") return res; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (hint === \"string\" ? String : Number)(input); }\n/*:: import type {EventHandler, MouseTouchEvent} from './utils/types';*/\n/*:: import type {Element as ReactElement} from 'react';*/\n// Simple abstraction for dragging events names.\nconst eventsFor = {\n  touch: {\n    start: 'touchstart',\n    move: 'touchmove',\n    stop: 'touchend'\n  },\n  mouse: {\n    start: 'mousedown',\n    move: 'mousemove',\n    stop: 'mouseup'\n  }\n};\n\n// Default to mouse events.\nlet dragEventFor = eventsFor.mouse;\n/*:: export type DraggableData = {\n  node: HTMLElement,\n  x: number, y: number,\n  deltaX: number, deltaY: number,\n  lastX: number, lastY: number,\n};*/\n/*:: export type DraggableEventHandler = (e: MouseEvent, data: DraggableData) => void | false;*/\n/*:: export type ControlPosition = {x: number, y: number};*/\n/*:: export type PositionOffsetControlPosition = {x: number|string, y: number|string};*/\n/*:: export type DraggableCoreDefaultProps = {\n  allowAnyClick: boolean,\n  disabled: boolean,\n  enableUserSelectHack: boolean,\n  onStart: DraggableEventHandler,\n  onDrag: DraggableEventHandler,\n  onStop: DraggableEventHandler,\n  onMouseDown: (e: MouseEvent) => void,\n  scale: number,\n};*/\n/*:: export type DraggableCoreProps = {\n  ...DraggableCoreDefaultProps,\n  cancel: string,\n  children: ReactElement<any>,\n  offsetParent: HTMLElement,\n  grid: [number, number],\n  handle: string,\n  nodeRef?: ?React.ElementRef<any>,\n};*/\n//\n// Define <DraggableCore>.\n//\n// <DraggableCore> is for advanced usage of <Draggable>. It maintains minimal internal state so it can\n// work well with libraries that require more control over the element.\n//\n\nclass DraggableCore extends React.Component /*:: <DraggableCoreProps>*/{\n  constructor() {\n    super(...arguments);\n    _defineProperty(this, \"dragging\", false);\n    // Used while dragging to determine deltas.\n    _defineProperty(this, \"lastX\", NaN);\n    _defineProperty(this, \"lastY\", NaN);\n    _defineProperty(this, \"touchIdentifier\", null);\n    _defineProperty(this, \"mounted\", false);\n    _defineProperty(this, \"handleDragStart\", e => {\n      // Make it possible to attach event handlers on top of this one.\n      this.props.onMouseDown(e);\n\n      // Only accept left-clicks.\n      if (!this.props.allowAnyClick && typeof e.button === 'number' && e.button !== 0) return false;\n\n      // Get nodes. Be sure to grab relative document (could be iframed)\n      const thisNode = this.findDOMNode();\n      if (!thisNode || !thisNode.ownerDocument || !thisNode.ownerDocument.body) {\n        throw new Error('<DraggableCore> not mounted on DragStart!');\n      }\n      const {\n        ownerDocument\n      } = thisNode;\n\n      // Short circuit if handle or cancel prop was provided and selector doesn't match.\n      if (this.props.disabled || !(e.target instanceof ownerDocument.defaultView.Node) || this.props.handle && !(0, _domFns.matchesSelectorAndParentsTo)(e.target, this.props.handle, thisNode) || this.props.cancel && (0, _domFns.matchesSelectorAndParentsTo)(e.target, this.props.cancel, thisNode)) {\n        return;\n      }\n\n      // Prevent scrolling on mobile devices, like ipad/iphone.\n      // Important that this is after handle/cancel.\n      if (e.type === 'touchstart') e.preventDefault();\n\n      // Set touch identifier in component state if this is a touch event. This allows us to\n      // distinguish between individual touches on multitouch screens by identifying which\n      // touchpoint was set to this element.\n      const touchIdentifier = (0, _domFns.getTouchIdentifier)(e);\n      this.touchIdentifier = touchIdentifier;\n\n      // Get the current drag point from the event. This is used as the offset.\n      const position = (0, _positionFns.getControlPosition)(e, touchIdentifier, this);\n      if (position == null) return; // not possible but satisfies flow\n      const {\n        x,\n        y\n      } = position;\n\n      // Create an event object with all the data parents need to make a decision here.\n      const coreEvent = (0, _positionFns.createCoreData)(this, x, y);\n      (0, _log.default)('DraggableCore: handleDragStart: %j', coreEvent);\n\n      // Call event handler. If it returns explicit false, cancel.\n      (0, _log.default)('calling', this.props.onStart);\n      const shouldUpdate = this.props.onStart(e, coreEvent);\n      if (shouldUpdate === false || this.mounted === false) return;\n\n      // Add a style to the body to disable user-select. This prevents text from\n      // being selected all over the page.\n      if (this.props.enableUserSelectHack) (0, _domFns.addUserSelectStyles)(ownerDocument);\n\n      // Initiate dragging. Set the current x and y as offsets\n      // so we know how much we've moved during the drag. This allows us\n      // to drag elements around even if they have been moved, without issue.\n      this.dragging = true;\n      this.lastX = x;\n      this.lastY = y;\n\n      // Add events to the document directly so we catch when the user's mouse/touch moves outside of\n      // this element. We use different events depending on whether or not we have detected that this\n      // is a touch-capable device.\n      (0, _domFns.addEvent)(ownerDocument, dragEventFor.move, this.handleDrag);\n      (0, _domFns.addEvent)(ownerDocument, dragEventFor.stop, this.handleDragStop);\n    });\n    _defineProperty(this, \"handleDrag\", e => {\n      // Get the current drag point from the event. This is used as the offset.\n      const position = (0, _positionFns.getControlPosition)(e, this.touchIdentifier, this);\n      if (position == null) return;\n      let {\n        x,\n        y\n      } = position;\n\n      // Snap to grid if prop has been provided\n      if (Array.isArray(this.props.grid)) {\n        let deltaX = x - this.lastX,\n          deltaY = y - this.lastY;\n        [deltaX, deltaY] = (0, _positionFns.snapToGrid)(this.props.grid, deltaX, deltaY);\n        if (!deltaX && !deltaY) return; // skip useless drag\n        x = this.lastX + deltaX, y = this.lastY + deltaY;\n      }\n      const coreEvent = (0, _positionFns.createCoreData)(this, x, y);\n      (0, _log.default)('DraggableCore: handleDrag: %j', coreEvent);\n\n      // Call event handler. If it returns explicit false, trigger end.\n      const shouldUpdate = this.props.onDrag(e, coreEvent);\n      if (shouldUpdate === false || this.mounted === false) {\n        try {\n          // $FlowIgnore\n          this.handleDragStop(new MouseEvent('mouseup'));\n        } catch (err) {\n          // Old browsers\n          const event = ((document.createEvent('MouseEvents') /*: any*/) /*: MouseTouchEvent*/);\n          // I see why this insanity was deprecated\n          // $FlowIgnore\n          event.initMouseEvent('mouseup', true, true, window, 0, 0, 0, 0, 0, false, false, false, false, 0, null);\n          this.handleDragStop(event);\n        }\n        return;\n      }\n      this.lastX = x;\n      this.lastY = y;\n    });\n    _defineProperty(this, \"handleDragStop\", e => {\n      if (!this.dragging) return;\n      const position = (0, _positionFns.getControlPosition)(e, this.touchIdentifier, this);\n      if (position == null) return;\n      let {\n        x,\n        y\n      } = position;\n\n      // Snap to grid if prop has been provided\n      if (Array.isArray(this.props.grid)) {\n        let deltaX = x - this.lastX || 0;\n        let deltaY = y - this.lastY || 0;\n        [deltaX, deltaY] = (0, _positionFns.snapToGrid)(this.props.grid, deltaX, deltaY);\n        x = this.lastX + deltaX, y = this.lastY + deltaY;\n      }\n      const coreEvent = (0, _positionFns.createCoreData)(this, x, y);\n\n      // Call event handler\n      const shouldContinue = this.props.onStop(e, coreEvent);\n      if (shouldContinue === false || this.mounted === false) return false;\n      const thisNode = this.findDOMNode();\n      if (thisNode) {\n        // Remove user-select hack\n        if (this.props.enableUserSelectHack) (0, _domFns.removeUserSelectStyles)(thisNode.ownerDocument);\n      }\n      (0, _log.default)('DraggableCore: handleDragStop: %j', coreEvent);\n\n      // Reset the el.\n      this.dragging = false;\n      this.lastX = NaN;\n      this.lastY = NaN;\n      if (thisNode) {\n        // Remove event handlers\n        (0, _log.default)('DraggableCore: Removing handlers');\n        (0, _domFns.removeEvent)(thisNode.ownerDocument, dragEventFor.move, this.handleDrag);\n        (0, _domFns.removeEvent)(thisNode.ownerDocument, dragEventFor.stop, this.handleDragStop);\n      }\n    });\n    _defineProperty(this, \"onMouseDown\", e => {\n      dragEventFor = eventsFor.mouse; // on touchscreen laptops we could switch back to mouse\n\n      return this.handleDragStart(e);\n    });\n    _defineProperty(this, \"onMouseUp\", e => {\n      dragEventFor = eventsFor.mouse;\n      return this.handleDragStop(e);\n    });\n    // Same as onMouseDown (start drag), but now consider this a touch device.\n    _defineProperty(this, \"onTouchStart\", e => {\n      // We're on a touch device now, so change the event handlers\n      dragEventFor = eventsFor.touch;\n      return this.handleDragStart(e);\n    });\n    _defineProperty(this, \"onTouchEnd\", e => {\n      // We're on a touch device now, so change the event handlers\n      dragEventFor = eventsFor.touch;\n      return this.handleDragStop(e);\n    });\n  }\n  componentDidMount() {\n    this.mounted = true;\n    // Touch handlers must be added with {passive: false} to be cancelable.\n    // https://developers.google.com/web/updates/2017/01/scrolling-intervention\n    const thisNode = this.findDOMNode();\n    if (thisNode) {\n      (0, _domFns.addEvent)(thisNode, eventsFor.touch.start, this.onTouchStart, {\n        passive: false\n      });\n    }\n  }\n  componentWillUnmount() {\n    this.mounted = false;\n    // Remove any leftover event handlers. Remove both touch and mouse handlers in case\n    // some browser quirk caused a touch event to fire during a mouse move, or vice versa.\n    const thisNode = this.findDOMNode();\n    if (thisNode) {\n      const {\n        ownerDocument\n      } = thisNode;\n      (0, _domFns.removeEvent)(ownerDocument, eventsFor.mouse.move, this.handleDrag);\n      (0, _domFns.removeEvent)(ownerDocument, eventsFor.touch.move, this.handleDrag);\n      (0, _domFns.removeEvent)(ownerDocument, eventsFor.mouse.stop, this.handleDragStop);\n      (0, _domFns.removeEvent)(ownerDocument, eventsFor.touch.stop, this.handleDragStop);\n      (0, _domFns.removeEvent)(thisNode, eventsFor.touch.start, this.onTouchStart, {\n        passive: false\n      });\n      if (this.props.enableUserSelectHack) (0, _domFns.removeUserSelectStyles)(ownerDocument);\n    }\n  }\n\n  // React Strict Mode compatibility: if `nodeRef` is passed, we will use it instead of trying to find\n  // the underlying DOM node ourselves. See the README for more information.\n  findDOMNode() /*: ?HTMLElement*/{\n    var _this$props, _this$props2;\n    return (_this$props = this.props) !== null && _this$props !== void 0 && _this$props.nodeRef ? (_this$props2 = this.props) === null || _this$props2 === void 0 || (_this$props2 = _this$props2.nodeRef) === null || _this$props2 === void 0 ? void 0 : _this$props2.current : _reactDom.default.findDOMNode(this);\n  }\n  render() /*: React.Element<any>*/{\n    // Reuse the child provided\n    // This makes it flexible to use whatever element is wanted (div, ul, etc)\n    return /*#__PURE__*/React.cloneElement(React.Children.only(this.props.children), {\n      // Note: mouseMove handler is attached to document so it will still function\n      // when the user drags quickly and leaves the bounds of the element.\n      onMouseDown: this.onMouseDown,\n      onMouseUp: this.onMouseUp,\n      // onTouchStart is added on `componentDidMount` so they can be added with\n      // {passive: false}, which allows it to cancel. See\n      // https://developers.google.com/web/updates/2017/01/scrolling-intervention\n      onTouchEnd: this.onTouchEnd\n    });\n  }\n}\nexports.default = DraggableCore;\n_defineProperty(DraggableCore, \"displayName\", 'DraggableCore');\n_defineProperty(DraggableCore, \"propTypes\", {\n  /**\n   * `allowAnyClick` allows dragging using any mouse button.\n   * By default, we only accept the left button.\n   *\n   * Defaults to `false`.\n   */\n  allowAnyClick: _propTypes.default.bool,\n  children: _propTypes.default.node.isRequired,\n  /**\n   * `disabled`, if true, stops the <Draggable> from dragging. All handlers,\n   * with the exception of `onMouseDown`, will not fire.\n   */\n  disabled: _propTypes.default.bool,\n  /**\n   * By default, we add 'user-select:none' attributes to the document body\n   * to prevent ugly text selection during drag. If this is causing problems\n   * for your app, set this to `false`.\n   */\n  enableUserSelectHack: _propTypes.default.bool,\n  /**\n   * `offsetParent`, if set, uses the passed DOM node to compute drag offsets\n   * instead of using the parent node.\n   */\n  offsetParent: function (props /*: DraggableCoreProps*/, propName /*: $Keys<DraggableCoreProps>*/) {\n    if (props[propName] && props[propName].nodeType !== 1) {\n      throw new Error('Draggable\\'s offsetParent must be a DOM Node.');\n    }\n  },\n  /**\n   * `grid` specifies the x and y that dragging should snap to.\n   */\n  grid: _propTypes.default.arrayOf(_propTypes.default.number),\n  /**\n   * `handle` specifies a selector to be used as the handle that initiates drag.\n   *\n   * Example:\n   *\n   * ```jsx\n   *   let App = React.createClass({\n   *       render: function () {\n   *         return (\n   *            <Draggable handle=\".handle\">\n   *              <div>\n   *                  <div className=\"handle\">Click me to drag</div>\n   *                  <div>This is some other content</div>\n   *              </div>\n   *           </Draggable>\n   *         );\n   *       }\n   *   });\n   * ```\n   */\n  handle: _propTypes.default.string,\n  /**\n   * `cancel` specifies a selector to be used to prevent drag initialization.\n   *\n   * Example:\n   *\n   * ```jsx\n   *   let App = React.createClass({\n   *       render: function () {\n   *           return(\n   *               <Draggable cancel=\".cancel\">\n   *                   <div>\n   *                     <div className=\"cancel\">You can't drag from here</div>\n   *                     <div>Dragging here works fine</div>\n   *                   </div>\n   *               </Draggable>\n   *           );\n   *       }\n   *   });\n   * ```\n   */\n  cancel: _propTypes.default.string,\n  /* If running in React Strict mode, ReactDOM.findDOMNode() is deprecated.\n   * Unfortunately, in order for <Draggable> to work properly, we need raw access\n   * to the underlying DOM node. If you want to avoid the warning, pass a `nodeRef`\n   * as in this example:\n   *\n   * function MyComponent() {\n   *   const nodeRef = React.useRef(null);\n   *   return (\n   *     <Draggable nodeRef={nodeRef}>\n   *       <div ref={nodeRef}>Example Target</div>\n   *     </Draggable>\n   *   );\n   * }\n   *\n   * This can be used for arbitrarily nested components, so long as the ref ends up\n   * pointing to the actual child DOM node and not a custom component.\n   */\n  nodeRef: _propTypes.default.object,\n  /**\n   * Called when dragging starts.\n   * If this function returns the boolean false, dragging will be canceled.\n   */\n  onStart: _propTypes.default.func,\n  /**\n   * Called while dragging.\n   * If this function returns the boolean false, dragging will be canceled.\n   */\n  onDrag: _propTypes.default.func,\n  /**\n   * Called when dragging stops.\n   * If this function returns the boolean false, the drag will remain active.\n   */\n  onStop: _propTypes.default.func,\n  /**\n   * A workaround option which can be passed if onMouseDown needs to be accessed,\n   * since it'll always be blocked (as there is internal use of onMouseDown)\n   */\n  onMouseDown: _propTypes.default.func,\n  /**\n   * `scale`, if set, applies scaling while dragging an element\n   */\n  scale: _propTypes.default.number,\n  /**\n   * These properties should be defined on the child, not here.\n   */\n  className: _shims.dontSetMe,\n  style: _shims.dontSetMe,\n  transform: _shims.dontSetMe\n});\n_defineProperty(DraggableCore, \"defaultProps\", {\n  allowAnyClick: false,\n  // by default only accept left click\n  disabled: false,\n  enableUserSelectHack: true,\n  onStart: function () {},\n  onDrag: function () {},\n  onStop: function () {},\n  onMouseDown: function () {},\n  scale: 1\n});","\"use strict\";\n\nconst {\n  default: Draggable,\n  DraggableCore\n} = require('./Draggable');\n\n// Previous versions of this lib exported <Draggable> as the root export. As to no-// them, or TypeScript, we export *both* as the root and as 'default'.\n// See https://github.com/mzabriskie/react-draggable/pull/254\n// and https://github.com/mzabriskie/react-draggable/issues/266\nmodule.exports = Draggable;\nmodule.exports.default = Draggable;\nmodule.exports.DraggableCore = DraggableCore;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.addClassName = addClassName;\nexports.addEvent = addEvent;\nexports.addUserSelectStyles = addUserSelectStyles;\nexports.createCSSTransform = createCSSTransform;\nexports.createSVGTransform = createSVGTransform;\nexports.getTouch = getTouch;\nexports.getTouchIdentifier = getTouchIdentifier;\nexports.getTranslation = getTranslation;\nexports.innerHeight = innerHeight;\nexports.innerWidth = innerWidth;\nexports.matchesSelector = matchesSelector;\nexports.matchesSelectorAndParentsTo = matchesSelectorAndParentsTo;\nexports.offsetXYFromParent = offsetXYFromParent;\nexports.outerHeight = outerHeight;\nexports.outerWidth = outerWidth;\nexports.removeClassName = removeClassName;\nexports.removeEvent = removeEvent;\nexports.removeUserSelectStyles = removeUserSelectStyles;\nvar _shims = require(\"./shims\");\nvar _getPrefix = _interopRequireWildcard(require(\"./getPrefix\"));\nfunction _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== \"function\") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function (nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }\nfunction _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n/*:: import type {ControlPosition, PositionOffsetControlPosition, MouseTouchEvent} from './types';*/\nlet matchesSelectorFunc = '';\nfunction matchesSelector(el /*: Node*/, selector /*: string*/) /*: boolean*/{\n  if (!matchesSelectorFunc) {\n    matchesSelectorFunc = (0, _shims.findInArray)(['matches', 'webkitMatchesSelector', 'mozMatchesSelector', 'msMatchesSelector', 'oMatchesSelector'], function (method) {\n      // $FlowIgnore: Doesn't think elements are indexable\n      return (0, _shims.isFunction)(el[method]);\n    });\n  }\n\n  // Might not be found entirely (not an Element?) - in that case, bail\n  // $FlowIgnore: Doesn't think elements are indexable\n  if (!(0, _shims.isFunction)(el[matchesSelectorFunc])) return false;\n\n  // $FlowIgnore: Doesn't think elements are indexable\n  return el[matchesSelectorFunc](selector);\n}\n\n// Works up the tree to the draggable itself attempting to match selector.\nfunction matchesSelectorAndParentsTo(el /*: Node*/, selector /*: string*/, baseNode /*: Node*/) /*: boolean*/{\n  let node = el;\n  do {\n    if (matchesSelector(node, selector)) return true;\n    if (node === baseNode) return false;\n    // $FlowIgnore[incompatible-type]\n    node = node.parentNode;\n  } while (node);\n  return false;\n}\nfunction addEvent(el /*: ?Node*/, event /*: string*/, handler /*: Function*/, inputOptions /*: Object*/) /*: void*/{\n  if (!el) return;\n  const options = {\n    capture: true,\n    ...inputOptions\n  };\n  // $FlowIgnore[method-unbinding]\n  if (el.addEventListener) {\n    el.addEventListener(event, handler, options);\n  } else if (el.attachEvent) {\n    el.attachEvent('on' + event, handler);\n  } else {\n    // $FlowIgnore: Doesn't think elements are indexable\n    el['on' + event] = handler;\n  }\n}\nfunction removeEvent(el /*: ?Node*/, event /*: string*/, handler /*: Function*/, inputOptions /*: Object*/) /*: void*/{\n  if (!el) return;\n  const options = {\n    capture: true,\n    ...inputOptions\n  };\n  // $FlowIgnore[method-unbinding]\n  if (el.removeEventListener) {\n    el.removeEventListener(event, handler, options);\n  } else if (el.detachEvent) {\n    el.detachEvent('on' + event, handler);\n  } else {\n    // $FlowIgnore: Doesn't think elements are indexable\n    el['on' + event] = null;\n  }\n}\nfunction outerHeight(node /*: HTMLElement*/) /*: number*/{\n  // This is deliberately excluding margin for our calculations, since we are using\n  // offsetTop which is including margin. See getBoundPosition\n  let height = node.clientHeight;\n  const computedStyle = node.ownerDocument.defaultView.getComputedStyle(node);\n  height += (0, _shims.int)(computedStyle.borderTopWidth);\n  height += (0, _shims.int)(computedStyle.borderBottomWidth);\n  return height;\n}\nfunction outerWidth(node /*: HTMLElement*/) /*: number*/{\n  // This is deliberately excluding margin for our calculations, since we are using\n  // offsetLeft which is including margin. See getBoundPosition\n  let width = node.clientWidth;\n  const computedStyle = node.ownerDocument.defaultView.getComputedStyle(node);\n  width += (0, _shims.int)(computedStyle.borderLeftWidth);\n  width += (0, _shims.int)(computedStyle.borderRightWidth);\n  return width;\n}\nfunction innerHeight(node /*: HTMLElement*/) /*: number*/{\n  let height = node.clientHeight;\n  const computedStyle = node.ownerDocument.defaultView.getComputedStyle(node);\n  height -= (0, _shims.int)(computedStyle.paddingTop);\n  height -= (0, _shims.int)(computedStyle.paddingBottom);\n  return height;\n}\nfunction innerWidth(node /*: HTMLElement*/) /*: number*/{\n  let width = node.clientWidth;\n  const computedStyle = node.ownerDocument.defaultView.getComputedStyle(node);\n  width -= (0, _shims.int)(computedStyle.paddingLeft);\n  width -= (0, _shims.int)(computedStyle.paddingRight);\n  return width;\n}\n/*:: interface EventWithOffset {\n  clientX: number, clientY: number\n}*/\n// Get from offsetParent\nfunction offsetXYFromParent(evt /*: EventWithOffset*/, offsetParent /*: HTMLElement*/, scale /*: number*/) /*: ControlPosition*/{\n  const isBody = offsetParent === offsetParent.ownerDocument.body;\n  const offsetParentRect = isBody ? {\n    left: 0,\n    top: 0\n  } : offsetParent.getBoundingClientRect();\n  const x = (evt.clientX + offsetParent.scrollLeft - offsetParentRect.left) / scale;\n  const y = (evt.clientY + offsetParent.scrollTop - offsetParentRect.top) / scale;\n  return {\n    x,\n    y\n  };\n}\nfunction createCSSTransform(controlPos /*: ControlPosition*/, positionOffset /*: PositionOffsetControlPosition*/) /*: Object*/{\n  const translation = getTranslation(controlPos, positionOffset, 'px');\n  return {\n    [(0, _getPrefix.browserPrefixToKey)('transform', _getPrefix.default)]: translation\n  };\n}\nfunction createSVGTransform(controlPos /*: ControlPosition*/, positionOffset /*: PositionOffsetControlPosition*/) /*: string*/{\n  const translation = getTranslation(controlPos, positionOffset, '');\n  return translation;\n}\nfunction getTranslation(_ref /*:: */, positionOffset /*: PositionOffsetControlPosition*/, unitSuffix /*: string*/) /*: string*/{\n  let {\n    x,\n    y\n  } /*: ControlPosition*/ = _ref /*: ControlPosition*/;\n  let translation = \"translate(\".concat(x).concat(unitSuffix, \",\").concat(y).concat(unitSuffix, \")\");\n  if (positionOffset) {\n    const defaultX = \"\".concat(typeof positionOffset.x === 'string' ? positionOffset.x : positionOffset.x + unitSuffix);\n    const defaultY = \"\".concat(typeof positionOffset.y === 'string' ? positionOffset.y : positionOffset.y + unitSuffix);\n    translation = \"translate(\".concat(defaultX, \", \").concat(defaultY, \")\") + translation;\n  }\n  return translation;\n}\nfunction getTouch(e /*: MouseTouchEvent*/, identifier /*: number*/) /*: ?{clientX: number, clientY: number}*/{\n  return e.targetTouches && (0, _shims.findInArray)(e.targetTouches, t => identifier === t.identifier) || e.changedTouches && (0, _shims.findInArray)(e.changedTouches, t => identifier === t.identifier);\n}\nfunction getTouchIdentifier(e /*: MouseTouchEvent*/) /*: ?number*/{\n  if (e.targetTouches && e.targetTouches[0]) return e.targetTouches[0].identifier;\n  if (e.changedTouches && e.changedTouches[0]) return e.changedTouches[0].identifier;\n}\n\n// User-select Hacks:\n//\n// Useful for preventing blue highlights all over everything when dragging.\n\n// Note we're passing `document` b/c we could be iframed\nfunction addUserSelectStyles(doc /*: ?Document*/) {\n  if (!doc) return;\n  let styleEl = doc.getElementById('react-draggable-style-el');\n  if (!styleEl) {\n    styleEl = doc.createElement('style');\n    styleEl.type = 'text/css';\n    styleEl.id = 'react-draggable-style-el';\n    styleEl.innerHTML = '.react-draggable-transparent-selection *::-moz-selection {all: inherit;}\\n';\n    styleEl.innerHTML += '.react-draggable-transparent-selection *::selection {all: inherit;}\\n';\n    doc.getElementsByTagName('head')[0].appendChild(styleEl);\n  }\n  if (doc.body) addClassName(doc.body, 'react-draggable-transparent-selection');\n}\nfunction removeUserSelectStyles(doc /*: ?Document*/) {\n  if (!doc) return;\n  try {\n    if (doc.body) removeClassName(doc.body, 'react-draggable-transparent-selection');\n    // $FlowIgnore: IE\n    if (doc.selection) {\n      // $FlowIgnore: IE\n      doc.selection.empty();\n    } else {\n      // Remove selection caused by scroll, unless it's a focused input\n      // (we use doc.defaultView in case we're in an iframe)\n      const selection = (doc.defaultView || window).getSelection();\n      if (selection && selection.type !== 'Caret') {\n        selection.removeAllRanges();\n      }\n    }\n  } catch (e) {\n    // probably IE\n  }\n}\nfunction addClassName(el /*: HTMLElement*/, className /*: string*/) {\n  if (el.classList) {\n    el.classList.add(className);\n  } else {\n    if (!el.className.match(new RegExp(\"(?:^|\\\\s)\".concat(className, \"(?!\\\\S)\")))) {\n      el.className += \" \".concat(className);\n    }\n  }\n}\nfunction removeClassName(el /*: HTMLElement*/, className /*: string*/) {\n  if (el.classList) {\n    el.classList.remove(className);\n  } else {\n    el.className = el.className.replace(new RegExp(\"(?:^|\\\\s)\".concat(className, \"(?!\\\\S)\"), 'g'), '');\n  }\n}","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.browserPrefixToKey = browserPrefixToKey;\nexports.browserPrefixToStyle = browserPrefixToStyle;\nexports.default = void 0;\nexports.getPrefix = getPrefix;\nconst prefixes = ['Moz', 'Webkit', 'O', 'ms'];\nfunction getPrefix() /*: string*/{\n  var _window$document;\n  let prop /*: string*/ = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 'transform';\n  // Ensure we're running in an environment where there is actually a global\n  // `window` obj\n  if (typeof window === 'undefined') return '';\n\n  // If we're in a pseudo-browser server-side environment, this access\n  // path may not exist, so bail out if it doesn't.\n  const style = (_window$document = window.document) === null || _window$document === void 0 || (_window$document = _window$document.documentElement) === null || _window$document === void 0 ? void 0 : _window$document.style;\n  if (!style) return '';\n  if (prop in style) return '';\n  for (let i = 0; i < prefixes.length; i++) {\n    if (browserPrefixToKey(prop, prefixes[i]) in style) return prefixes[i];\n  }\n  return '';\n}\nfunction browserPrefixToKey(prop /*: string*/, prefix /*: string*/) /*: string*/{\n  return prefix ? \"\".concat(prefix).concat(kebabToTitleCase(prop)) : prop;\n}\nfunction browserPrefixToStyle(prop /*: string*/, prefix /*: string*/) /*: string*/{\n  return prefix ? \"-\".concat(prefix.toLowerCase(), \"-\").concat(prop) : prop;\n}\nfunction kebabToTitleCase(str /*: string*/) /*: string*/{\n  let out = '';\n  let shouldCapitalize = true;\n  for (let i = 0; i < str.length; i++) {\n    if (shouldCapitalize) {\n      out += str[i].toUpperCase();\n      shouldCapitalize = false;\n    } else if (str[i] === '-') {\n      shouldCapitalize = true;\n    } else {\n      out += str[i];\n    }\n  }\n  return out;\n}\n\n// Default export is the prefix itself, like 'Moz', 'Webkit', etc\n// Note that you may have to re-test for certain things; for instance, Chrome 50\n// can handle unprefixed `transform`, but not unprefixed `user-select`\nvar _default = exports.default = (getPrefix() /*: string*/);","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = log;\n/*eslint no-console:0*/\nfunction log() {\n  if (undefined) console.log(...arguments);\n}","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.canDragX = canDragX;\nexports.canDragY = canDragY;\nexports.createCoreData = createCoreData;\nexports.createDraggableData = createDraggableData;\nexports.getBoundPosition = getBoundPosition;\nexports.getControlPosition = getControlPosition;\nexports.snapToGrid = snapToGrid;\nvar _shims = require(\"./shims\");\nvar _domFns = require(\"./domFns\");\n/*:: import type Draggable from '../Draggable';*/\n/*:: import type {Bounds, ControlPosition, DraggableData, MouseTouchEvent} from './types';*/\n/*:: import type DraggableCore from '../DraggableCore';*/\nfunction getBoundPosition(draggable /*: Draggable*/, x /*: number*/, y /*: number*/) /*: [number, number]*/{\n  // If no bounds, short-circuit and move on\n  if (!draggable.props.bounds) return [x, y];\n\n  // Clone new bounds\n  let {\n    bounds\n  } = draggable.props;\n  bounds = typeof bounds === 'string' ? bounds : cloneBounds(bounds);\n  const node = findDOMNode(draggable);\n  if (typeof bounds === 'string') {\n    const {\n      ownerDocument\n    } = node;\n    const ownerWindow = ownerDocument.defaultView;\n    let boundNode;\n    if (bounds === 'parent') {\n      boundNode = node.parentNode;\n    } else {\n      boundNode = ownerDocument.querySelector(bounds);\n    }\n    if (!(boundNode instanceof ownerWindow.HTMLElement)) {\n      throw new Error('Bounds selector \"' + bounds + '\" could not find an element.');\n    }\n    const boundNodeEl /*: HTMLElement*/ = boundNode; // for Flow, can't seem to refine correctly\n    const nodeStyle = ownerWindow.getComputedStyle(node);\n    const boundNodeStyle = ownerWindow.getComputedStyle(boundNodeEl);\n    // Compute bounds. This is a pain with padding and offsets but this gets it exactly right.\n    bounds = {\n      left: -node.offsetLeft + (0, _shims.int)(boundNodeStyle.paddingLeft) + (0, _shims.int)(nodeStyle.marginLeft),\n      top: -node.offsetTop + (0, _shims.int)(boundNodeStyle.paddingTop) + (0, _shims.int)(nodeStyle.marginTop),\n      right: (0, _domFns.innerWidth)(boundNodeEl) - (0, _domFns.outerWidth)(node) - node.offsetLeft + (0, _shims.int)(boundNodeStyle.paddingRight) - (0, _shims.int)(nodeStyle.marginRight),\n      bottom: (0, _domFns.innerHeight)(boundNodeEl) - (0, _domFns.outerHeight)(node) - node.offsetTop + (0, _shims.int)(boundNodeStyle.paddingBottom) - (0, _shims.int)(nodeStyle.marginBottom)\n    };\n  }\n\n  // Keep x and y below right and bottom limits...\n  if ((0, _shims.isNum)(bounds.right)) x = Math.min(x, bounds.right);\n  if ((0, _shims.isNum)(bounds.bottom)) y = Math.min(y, bounds.bottom);\n\n  // But above left and top limits.\n  if ((0, _shims.isNum)(bounds.left)) x = Math.max(x, bounds.left);\n  if ((0, _shims.isNum)(bounds.top)) y = Math.max(y, bounds.top);\n  return [x, y];\n}\nfunction snapToGrid(grid /*: [number, number]*/, pendingX /*: number*/, pendingY /*: number*/) /*: [number, number]*/{\n  const x = Math.round(pendingX / grid[0]) * grid[0];\n  const y = Math.round(pendingY / grid[1]) * grid[1];\n  return [x, y];\n}\nfunction canDragX(draggable /*: Draggable*/) /*: boolean*/{\n  return draggable.props.axis === 'both' || draggable.props.axis === 'x';\n}\nfunction canDragY(draggable /*: Draggable*/) /*: boolean*/{\n  return draggable.props.axis === 'both' || draggable.props.axis === 'y';\n}\n\n// Get {x, y} positions from event.\nfunction getControlPosition(e /*: MouseTouchEvent*/, touchIdentifier /*: ?number*/, draggableCore /*: DraggableCore*/) /*: ?ControlPosition*/{\n  const touchObj = typeof touchIdentifier === 'number' ? (0, _domFns.getTouch)(e, touchIdentifier) : null;\n  if (typeof touchIdentifier === 'number' && !touchObj) return null; // not the right touch\n  const node = findDOMNode(draggableCore);\n  // User can provide an offsetParent if desired.\n  const offsetParent = draggableCore.props.offsetParent || node.offsetParent || node.ownerDocument.body;\n  return (0, _domFns.offsetXYFromParent)(touchObj || e, offsetParent, draggableCore.props.scale);\n}\n\n// Create an data object exposed by <DraggableCore>'s events\nfunction createCoreData(draggable /*: DraggableCore*/, x /*: number*/, y /*: number*/) /*: DraggableData*/{\n  const isStart = !(0, _shims.isNum)(draggable.lastX);\n  const node = findDOMNode(draggable);\n  if (isStart) {\n    // If this is our first move, use the x and y as last coords.\n    return {\n      node,\n      deltaX: 0,\n      deltaY: 0,\n      lastX: x,\n      lastY: y,\n      x,\n      y\n    };\n  } else {\n    // Otherwise calculate proper values.\n    return {\n      node,\n      deltaX: x - draggable.lastX,\n      deltaY: y - draggable.lastY,\n      lastX: draggable.lastX,\n      lastY: draggable.lastY,\n      x,\n      y\n    };\n  }\n}\n\n// Create an data exposed by <Draggable>'s events\nfunction createDraggableData(draggable /*: Draggable*/, coreData /*: DraggableData*/) /*: DraggableData*/{\n  const scale = draggable.props.scale;\n  return {\n    node: coreData.node,\n    x: draggable.state.x + coreData.deltaX / scale,\n    y: draggable.state.y + coreData.deltaY / scale,\n    deltaX: coreData.deltaX / scale,\n    deltaY: coreData.deltaY / scale,\n    lastX: draggable.state.x,\n    lastY: draggable.state.y\n  };\n}\n\n// A lot faster than stringify/parse\nfunction cloneBounds(bounds /*: Bounds*/) /*: Bounds*/{\n  return {\n    left: bounds.left,\n    top: bounds.top,\n    right: bounds.right,\n    bottom: bounds.bottom\n  };\n}\nfunction findDOMNode(draggable /*: Draggable | DraggableCore*/) /*: HTMLElement*/{\n  const node = draggable.findDOMNode();\n  if (!node) {\n    throw new Error('<DraggableCore>: Unmounted during event!');\n  }\n  // $FlowIgnore we can't assert on HTMLElement due to tests... FIXME\n  return node;\n}","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.dontSetMe = dontSetMe;\nexports.findInArray = findInArray;\nexports.int = int;\nexports.isFunction = isFunction;\nexports.isNum = isNum;\n// @credits https://gist.github.com/rogozhnikoff/a43cfed27c41e4e68cdc\nfunction findInArray(array /*: Array<any> | TouchList*/, callback /*: Function*/) /*: any*/{\n  for (let i = 0, length = array.length; i < length; i++) {\n    if (callback.apply(callback, [array[i], i, array])) return array[i];\n  }\n}\nfunction isFunction(func /*: any*/) /*: boolean %checks*/{\n  // $FlowIgnore[method-unbinding]\n  return typeof func === 'function' || Object.prototype.toString.call(func) === '[object Function]';\n}\nfunction isNum(num /*: any*/) /*: boolean %checks*/{\n  return typeof num === 'number' && !isNaN(num);\n}\nfunction int(a /*: string*/) /*: number*/{\n  return parseInt(a, 10);\n}\nfunction dontSetMe(props /*: Object*/, propName /*: string*/, componentName /*: string*/) /*: ?Error*/{\n  if (props[propName]) {\n    return new Error(\"Invalid prop \".concat(propName, \" passed to \").concat(componentName, \" - do not set this, set it on the child.\"));\n  }\n}","function r(e){var t,f,n=\"\";if(\"string\"==typeof e||\"number\"==typeof e)n+=e;else if(\"object\"==typeof e)if(Array.isArray(e))for(t=0;t<e.length;t++)e[t]&&(f=r(e[t]))&&(n&&(n+=\" \"),n+=f);else for(t in e)e[t]&&(n&&(n+=\" \"),n+=t);return n}export function clsx(){for(var e,t,f=0,n=\"\";f<arguments.length;)(e=arguments[f++])&&(t=r(e))&&(n&&(n+=\" \"),n+=t);return n}export default clsx;","import e,{useRef as t,useState as r,useEffect as n,forwardRef as o,memo as a}from\"react\";function i(e,t,r,n){return new(r||(r=Promise))((function(o,a){function i(e){try{c(n.next(e))}catch(e){a(e)}}function u(e){try{c(n.throw(e))}catch(e){a(e)}}function c(e){var t;e.done?o(e.value):(t=e.value,t instanceof r?t:new r((function(e){e(t)}))).then(i,u)}c((n=n.apply(e,t||[])).next())}))}function u(e,t){var r,n,o,a,i={label:0,sent:function(){if(1&o[0])throw o[1];return o[1]},trys:[],ops:[]};return a={next:u(0),throw:u(1),return:u(2)},\"function\"==typeof Symbol&&(a[Symbol.iterator]=function(){return this}),a;function u(a){return function(u){return function(a){if(r)throw new TypeError(\"Generator is already executing.\");for(;i;)try{if(r=1,n&&(o=2&a[0]?n.return:a[0]?n.throw||((o=n.return)&&o.call(n),0):n.next)&&!(o=o.call(n,a[1])).done)return o;switch(n=0,o&&(a=[2&a[0],o.value]),a[0]){case 0:case 1:o=a;break;case 4:return i.label++,{value:a[1],done:!1};case 5:i.label++,n=a[1],a=[0];continue;case 7:a=i.ops.pop(),i.trys.pop();continue;default:if(!(o=i.trys,(o=o.length>0&&o[o.length-1])||6!==a[0]&&2!==a[0])){i=0;continue}if(3===a[0]&&(!o||a[1]>o[0]&&a[1]<o[3])){i.label=a[1];break}if(6===a[0]&&i.label<o[1]){i.label=o[1],o=a;break}if(o&&i.label<o[2]){i.label=o[2],i.ops.push(a);break}o[2]&&i.ops.pop(),i.trys.pop();continue}a=t.call(e,i)}catch(e){a=[6,e],n=0}finally{r=o=0}if(5&a[0])throw a[1];return{value:a[0]?a[1]:void 0,done:!0}}([a,u])}}}function c(e){var t=\"function\"==typeof Symbol&&Symbol.iterator,r=t&&e[t],n=0;if(r)return r.call(e);if(e&&\"number\"==typeof e.length)return{next:function(){return e&&n>=e.length&&(e=void 0),{value:e&&e[n++],done:!e}}};throw new TypeError(t?\"Object is not iterable.\":\"Symbol.iterator is not defined.\")}function l(e,t){var r=\"function\"==typeof Symbol&&e[Symbol.iterator];if(!r)return e;var n,o,a=r.call(e),i=[];try{for(;(void 0===t||t-- >0)&&!(n=a.next()).done;)i.push(n.value)}catch(e){o={error:e}}finally{try{n&&!n.done&&(r=a.return)&&r.call(a)}finally{if(o)throw o.error}}return i}function s(e,t,r){if(r||2===arguments.length)for(var n,o=0,a=t.length;o<a;o++)!n&&o in t||(n||(n=Array.prototype.slice.call(t,0,o)),n[o]=t[o]);return e.concat(n||Array.prototype.slice.call(t))}function f(e,t,r,n,o){for(var a=[],f=5;f<arguments.length;f++)a[f-5]=arguments[f];return i(this,void 0,void 0,(function(){var i,f,h,y,v,b;return u(this,(function(u){switch(u.label){case 0:u.trys.push([0,12,13,14]),i=c(a),f=i.next(),u.label=1;case 1:if(f.done)return[3,11];switch(h=f.value,typeof h){case\"string\":return[3,2];case\"number\":return[3,4];case\"function\":return[3,6]}return[3,8];case 2:return[4,d(e,t,h,r,n,o)];case 3:return u.sent(),[3,10];case 4:return[4,p(h)];case 5:return u.sent(),[3,10];case 6:return[4,h.apply(void 0,s([e,t,r,n,o],l(a),!1))];case 7:return u.sent(),[3,10];case 8:return[4,h];case 9:u.sent(),u.label=10;case 10:return f=i.next(),[3,1];case 11:return[3,14];case 12:return y=u.sent(),v={error:y},[3,14];case 13:try{f&&!f.done&&(b=i.return)&&b.call(i)}finally{if(v)throw v.error}return[7];case 14:return[2]}}))}))}function d(e,t,r,n,o,a){return i(this,void 0,void 0,(function(){var i,c;return u(this,(function(u){switch(u.label){case 0:return i=e.textContent||\"\",c=function(e,t){var r=l(t).slice(0);return s(s([],l(e),!1),[NaN],!1).findIndex((function(e,t){return r[t]!==e}))}(i,r),[4,h(e,s(s([],l(v(i,t,c)),!1),l(y(r,t,c)),!1),n,o,a)];case 1:return u.sent(),[2]}}))}))}function p(e){return i(this,void 0,void 0,(function(){return u(this,(function(t){switch(t.label){case 0:return[4,new Promise((function(t){return setTimeout(t,e)}))];case 1:return t.sent(),[2]}}))}))}function h(e,t,r,n,o){return i(this,void 0,void 0,(function(){var a,i,s,f,d,h,y,v,b,m,w,g,x;return u(this,(function(S){switch(S.label){case 0:if(a=t,o){for(i=0,s=1;s<t.length;s++)if(f=l([t[s-1],t[s]],2),d=f[0],(h=f[1]).length>d.length||\"\"===h){i=s;break}a=t.slice(i,t.length)}S.label=1;case 1:S.trys.push([1,6,7,8]),y=c(function(e){var t,r,n,o,a,i,l;return u(this,(function(s){switch(s.label){case 0:t=function(e){return u(this,(function(t){switch(t.label){case 0:return[4,{op:function(t){return requestAnimationFrame((function(){return t.textContent=e}))},opCode:function(t){var r=t.textContent||\"\";return\"\"===e||r.length>e.length?\"DELETE\":\"WRITING\"}}];case 1:return t.sent(),[2]}}))},s.label=1;case 1:s.trys.push([1,6,7,8]),r=c(e),n=r.next(),s.label=2;case 2:return n.done?[3,5]:(o=n.value,[5,t(o)]);case 3:s.sent(),s.label=4;case 4:return n=r.next(),[3,2];case 5:return[3,8];case 6:return a=s.sent(),i={error:a},[3,8];case 7:try{n&&!n.done&&(l=r.return)&&l.call(r)}finally{if(i)throw i.error}return[7];case 8:return[2]}}))}(a)),v=y.next(),S.label=2;case 2:return v.done?[3,5]:(b=v.value,m=\"WRITING\"===b.opCode(e)?r+r*(Math.random()-.5):n+n*(Math.random()-.5),b.op(e),[4,p(m)]);case 3:S.sent(),S.label=4;case 4:return v=y.next(),[3,2];case 5:return[3,8];case 6:return w=S.sent(),g={error:w},[3,8];case 7:try{v&&!v.done&&(x=y.return)&&x.call(y)}finally{if(g)throw g.error}return[7];case 8:return[2]}}))}))}function y(e,t,r){var n,o;return void 0===r&&(r=0),u(this,(function(a){switch(a.label){case 0:n=t(e),o=n.length,a.label=1;case 1:return r<o?[4,n.slice(0,++r).join(\"\")]:[3,3];case 2:return a.sent(),[3,1];case 3:return[2]}}))}function v(e,t,r){var n,o;return void 0===r&&(r=0),u(this,(function(a){switch(a.label){case 0:n=t(e),o=n.length,a.label=1;case 1:return o>r?[4,n.slice(0,--o).join(\"\")]:[3,3];case 2:return a.sent(),[3,1];case 3:return[2]}}))}var b=\"index-module_type__E-SaG\";!function(e,t){void 0===t&&(t={});var r=t.insertAt;if(e&&\"undefined\"!=typeof document){var n=document.head||document.getElementsByTagName(\"head\")[0],o=document.createElement(\"style\");o.type=\"text/css\",\"top\"===r&&n.firstChild?n.insertBefore(o,n.firstChild):n.appendChild(o),o.styleSheet?o.styleSheet.cssText=e:o.appendChild(document.createTextNode(e))}}(\".index-module_type__E-SaG::after {\\n  content: '|';\\n  animation: index-module_cursor__PQg0P 1.1s infinite step-start;\\n}\\n\\n@keyframes index-module_cursor__PQg0P {\\n  50% {\\n    opacity: 0;\\n  }\\n}\\n\");var m=a(o((function(o,a){var i=o.sequence,u=o.repeat,c=o.className,d=o.speed,p=void 0===d?40:d,h=o.deletionSpeed,y=o.omitDeletionAnimation,v=void 0!==y&&y,m=o.preRenderFirstString,w=void 0!==m&&m,g=o.wrapper,x=void 0===g?\"span\":g,S=o.splitter,E=void 0===S?function(e){return s([],l(e),!1)}:S,_=o.cursor,k=void 0===_||_,O=o.style,T=function(e,t){var r={};for(var n in e)Object.prototype.hasOwnProperty.call(e,n)&&t.indexOf(n)<0&&(r[n]=e[n]);if(null!=e&&\"function\"==typeof Object.getOwnPropertySymbols){var o=0;for(n=Object.getOwnPropertySymbols(e);o<n.length;o++)t.indexOf(n[o])<0&&Object.prototype.propertyIsEnumerable.call(e,n[o])&&(r[n[o]]=e[n[o]])}return r}(o,[\"sequence\",\"repeat\",\"className\",\"speed\",\"deletionSpeed\",\"omitDeletionAnimation\",\"preRenderFirstString\",\"wrapper\",\"splitter\",\"cursor\",\"style\"]),A=T[\"aria-label\"],C=T[\"aria-hidden\"],N=T.role;h||(h=p);var P=new Array(2).fill(40);[p,h].forEach((function(e,t){switch(typeof e){case\"number\":P[t]=Math.abs(e-100);break;case\"object\":var r=e.type,n=e.value;if(\"number\"!=typeof n)break;if(\"keyStrokeDelayInMs\"===r)P[t]=n}}));var j,I,G,D,M,R,q=P[0],F=P[1],B=function(e,r){void 0===r&&(r=null);var o=t(r);return n((function(){e&&(\"function\"==typeof e?e(o.current):e.current=o.current)}),[e]),o}(a),Q=b;j=c?\"\".concat(k?Q+\" \":\"\").concat(c):k?Q:\"\",I=t((function(){var e,t=i;u===1/0?e=f:\"number\"==typeof u&&(t=Array(1+u).fill(i).flat());var r=e?s(s([],l(t),!1),[e],!1):s([],l(t),!1);return f.apply(void 0,s([B.current,E,q,F,v],l(r),!1)),function(){B.current}})),G=t(),D=t(!1),M=t(!1),R=l(r(0),2)[1],D.current&&(M.current=!0),n((function(){return D.current||(G.current=I.current(),D.current=!0),R((function(e){return e+1})),function(){M.current&&G.current&&G.current()}}),[]);var W=x,L=w?i.find((function(e){return\"string\"==typeof e}))||\"\":null;return e.createElement(W,{\"aria-hidden\":C,\"aria-label\":A,role:N,style:O,className:j,children:A?e.createElement(\"span\",{\"aria-hidden\":\"true\",ref:B,children:L}):L,ref:A?void 0:B})})),(function(e,t){return!0}));export{m as TypeAnimation};\n","import parse from 'inline-style-parser';\nimport type { Declaration } from 'inline-style-parser';\n\nexport { Declaration };\n\ninterface StyleObject {\n  [name: string]: string;\n}\n\ntype Iterator = (\n  property: string,\n  value: string,\n  declaration: Declaration,\n) => void;\n\n/**\n * Parses inline style to object.\n *\n * @param style - Inline style.\n * @param iterator - Iterator.\n * @returns - Style object or null.\n *\n * @example Parsing inline style to object:\n *\n * ```js\n * import parse from 'style-to-object';\n * parse('line-height: 42;'); // { 'line-height': '42' }\n * ```\n */\nexport default function StyleToObject(\n  style: string,\n  iterator?: Iterator,\n): StyleObject | null {\n  let styleObject: StyleObject | null = null;\n\n  if (!style || typeof style !== 'string') {\n    return styleObject;\n  }\n\n  const declarations = parse(style);\n  const hasIterator = typeof iterator === 'function';\n\n  declarations.forEach((declaration) => {\n    if (declaration.type !== 'declaration') {\n      return;\n    }\n\n    const { property, value } = declaration;\n\n    if (hasIterator) {\n      iterator(property, value, declaration);\n    } else if (value) {\n      styleObject = styleObject || {};\n      styleObject[property] = value;\n    }\n  });\n\n  return styleObject;\n}\n","/**\n * @typedef Options\n *   Configuration.\n * @property {boolean | null | undefined} [jsx=false]\n *   Support JSX identifiers (default: `false`).\n */\n\nconst startRe = /[$_\\p{ID_Start}]/u\nconst contRe = /[$_\\u{200C}\\u{200D}\\p{ID_Continue}]/u\nconst contReJsx = /[-$_\\u{200C}\\u{200D}\\p{ID_Continue}]/u\nconst nameRe = /^[$_\\p{ID_Start}][$_\\u{200C}\\u{200D}\\p{ID_Continue}]*$/u\nconst nameReJsx = /^[$_\\p{ID_Start}][-$_\\u{200C}\\u{200D}\\p{ID_Continue}]*$/u\n\n/** @type {Options} */\nconst emptyOptions = {}\n\n/**\n * Checks if the given code point can start an identifier.\n *\n * @param {number | undefined} code\n *   Code point to check.\n * @returns {boolean}\n *   Whether `code` can start an identifier.\n */\n// Note: `undefined` is supported so you can pass the result from `''.codePointAt`.\nexport function start(code) {\n  return code ? startRe.test(String.fromCodePoint(code)) : false\n}\n\n/**\n * Checks if the given code point can continue an identifier.\n *\n * @param {number | undefined} code\n *   Code point to check.\n * @param {Options | null | undefined} [options]\n *   Configuration (optional).\n * @returns {boolean}\n *   Whether `code` can continue an identifier.\n */\n// Note: `undefined` is supported so you can pass the result from `''.codePointAt`.\nexport function cont(code, options) {\n  const settings = options || emptyOptions\n  const re = settings.jsx ? contReJsx : contRe\n  return code ? re.test(String.fromCodePoint(code)) : false\n}\n\n/**\n * Checks if the given value is a valid identifier name.\n *\n * @param {string} name\n *   Identifier to check.\n * @param {Options | null | undefined} [options]\n *   Configuration (optional).\n * @returns {boolean}\n *   Whether `name` can be an identifier.\n */\nexport function name(name, options) {\n  const settings = options || emptyOptions\n  const re = settings.jsx ? nameReJsx : nameRe\n  return re.test(name)\n}\n","/**\n * @typedef {import('hast').Nodes} Nodes\n */\n\n// HTML whitespace expression.\n// See <https://infra.spec.whatwg.org/#ascii-whitespace>.\nconst re = /[ \\t\\n\\f\\r]/g\n\n/**\n * Check if the given value is *inter-element whitespace*.\n *\n * @param {Nodes | string} thing\n *   Thing to check (`Node` or `string`).\n * @returns {boolean}\n *   Whether the `value` is inter-element whitespace (`boolean`): consisting of\n *   zero or more of space, tab (`\\t`), line feed (`\\n`), carriage return\n *   (`\\r`), or form feed (`\\f`); if a node is passed it must be a `Text` node,\n *   whose `value` field is checked.\n */\nexport function whitespace(thing) {\n  return typeof thing === 'object'\n    ? thing.type === 'text'\n      ? empty(thing.value)\n      : false\n    : empty(thing)\n}\n\n/**\n * @param {string} value\n * @returns {boolean}\n */\nfunction empty(value) {\n  return value.replace(re, '') === ''\n}\n","/**\n * @typedef {import('./info.js').Info} Info\n * @typedef {Record<string, Info>} Properties\n * @typedef {Record<string, string>} Normal\n */\n\nexport class Schema {\n  /**\n   * @constructor\n   * @param {Properties} property\n   * @param {Normal} normal\n   * @param {string} [space]\n   */\n  constructor(property, normal, space) {\n    this.property = property\n    this.normal = normal\n    if (space) {\n      this.space = space\n    }\n  }\n}\n\n/** @type {Properties} */\nSchema.prototype.property = {}\n/** @type {Normal} */\nSchema.prototype.normal = {}\n/** @type {string|null} */\nSchema.prototype.space = null\n","/**\n * @typedef {import('./schema.js').Properties} Properties\n * @typedef {import('./schema.js').Normal} Normal\n */\n\nimport {Schema} from './schema.js'\n\n/**\n * @param {Schema[]} definitions\n * @param {string} [space]\n * @returns {Schema}\n */\nexport function merge(definitions, space) {\n  /** @type {Properties} */\n  const property = {}\n  /** @type {Normal} */\n  const normal = {}\n  let index = -1\n\n  while (++index < definitions.length) {\n    Object.assign(property, definitions[index].property)\n    Object.assign(normal, definitions[index].normal)\n  }\n\n  return new Schema(property, normal, space)\n}\n","/**\n * @param {string} value\n * @returns {string}\n */\nexport function normalize(value) {\n  return value.toLowerCase()\n}\n","export class Info {\n  /**\n   * @constructor\n   * @param {string} property\n   * @param {string} attribute\n   */\n  constructor(property, attribute) {\n    /** @type {string} */\n    this.property = property\n    /** @type {string} */\n    this.attribute = attribute\n  }\n}\n\n/** @type {string|null} */\nInfo.prototype.space = null\nInfo.prototype.boolean = false\nInfo.prototype.booleanish = false\nInfo.prototype.overloadedBoolean = false\nInfo.prototype.number = false\nInfo.prototype.commaSeparated = false\nInfo.prototype.spaceSeparated = false\nInfo.prototype.commaOrSpaceSeparated = false\nInfo.prototype.mustUseProperty = false\nInfo.prototype.defined = false\n","let powers = 0\n\nexport const boolean = increment()\nexport const booleanish = increment()\nexport const overloadedBoolean = increment()\nexport const number = increment()\nexport const spaceSeparated = increment()\nexport const commaSeparated = increment()\nexport const commaOrSpaceSeparated = increment()\n\nfunction increment() {\n  return 2 ** ++powers\n}\n","import {Info} from './info.js'\nimport * as types from './types.js'\n\n/** @type {Array<keyof types>} */\n// @ts-expect-error: hush.\nconst checks = Object.keys(types)\n\nexport class DefinedInfo extends Info {\n  /**\n   * @constructor\n   * @param {string} property\n   * @param {string} attribute\n   * @param {number|null} [mask]\n   * @param {string} [space]\n   */\n  constructor(property, attribute, mask, space) {\n    let index = -1\n\n    super(property, attribute)\n\n    mark(this, 'space', space)\n\n    if (typeof mask === 'number') {\n      while (++index < checks.length) {\n        const check = checks[index]\n        mark(this, checks[index], (mask & types[check]) === types[check])\n      }\n    }\n  }\n}\n\nDefinedInfo.prototype.defined = true\n\n/**\n * @param {DefinedInfo} values\n * @param {string} key\n * @param {unknown} value\n */\nfunction mark(values, key, value) {\n  if (value) {\n    // @ts-expect-error: assume `value` matches the expected value of `key`.\n    values[key] = value\n  }\n}\n","/**\n * @typedef {import('./schema.js').Properties} Properties\n * @typedef {import('./schema.js').Normal} Normal\n *\n * @typedef {Record<string, string>} Attributes\n *\n * @typedef {Object} Definition\n * @property {Record<string, number|null>} properties\n * @property {(attributes: Attributes, property: string) => string} transform\n * @property {string} [space]\n * @property {Attributes} [attributes]\n * @property {Array<string>} [mustUseProperty]\n */\n\nimport {normalize} from '../normalize.js'\nimport {Schema} from './schema.js'\nimport {DefinedInfo} from './defined-info.js'\n\nconst own = {}.hasOwnProperty\n\n/**\n * @param {Definition} definition\n * @returns {Schema}\n */\nexport function create(definition) {\n  /** @type {Properties} */\n  const property = {}\n  /** @type {Normal} */\n  const normal = {}\n  /** @type {string} */\n  let prop\n\n  for (prop in definition.properties) {\n    if (own.call(definition.properties, prop)) {\n      const value = definition.properties[prop]\n      const info = new DefinedInfo(\n        prop,\n        definition.transform(definition.attributes || {}, prop),\n        value,\n        definition.space\n      )\n\n      if (\n        definition.mustUseProperty &&\n        definition.mustUseProperty.includes(prop)\n      ) {\n        info.mustUseProperty = true\n      }\n\n      property[prop] = info\n\n      normal[normalize(prop)] = prop\n      normal[normalize(info.attribute)] = prop\n    }\n  }\n\n  return new Schema(property, normal, definition.space)\n}\n","import {create} from './util/create.js'\n\nexport const xlink = create({\n  space: 'xlink',\n  transform(_, prop) {\n    return 'xlink:' + prop.slice(5).toLowerCase()\n  },\n  properties: {\n    xLinkActuate: null,\n    xLinkArcRole: null,\n    xLinkHref: null,\n    xLinkRole: null,\n    xLinkShow: null,\n    xLinkTitle: null,\n    xLinkType: null\n  }\n})\n","import {create} from './util/create.js'\n\nexport const xml = create({\n  space: 'xml',\n  transform(_, prop) {\n    return 'xml:' + prop.slice(3).toLowerCase()\n  },\n  properties: {xmlLang: null, xmlBase: null, xmlSpace: null}\n})\n","/**\n * @param {Record<string, string>} attributes\n * @param {string} attribute\n * @returns {string}\n */\nexport function caseSensitiveTransform(attributes, attribute) {\n  return attribute in attributes ? attributes[attribute] : attribute\n}\n","import {caseSensitiveTransform} from './case-sensitive-transform.js'\n\n/**\n * @param {Record<string, string>} attributes\n * @param {string} property\n * @returns {string}\n */\nexport function caseInsensitiveTransform(attributes, property) {\n  return caseSensitiveTransform(attributes, property.toLowerCase())\n}\n","import {create} from './util/create.js'\nimport {caseInsensitiveTransform} from './util/case-insensitive-transform.js'\n\nexport const xmlns = create({\n  space: 'xmlns',\n  attributes: {xmlnsxlink: 'xmlns:xlink'},\n  transform: caseInsensitiveTransform,\n  properties: {xmlns: null, xmlnsXLink: null}\n})\n","import {booleanish, number, spaceSeparated} from './util/types.js'\nimport {create} from './util/create.js'\n\nexport const aria = create({\n  transform(_, prop) {\n    return prop === 'role' ? prop : 'aria-' + prop.slice(4).toLowerCase()\n  },\n  properties: {\n    ariaActiveDescendant: null,\n    ariaAtomic: booleanish,\n    ariaAutoComplete: null,\n    ariaBusy: booleanish,\n    ariaChecked: booleanish,\n    ariaColCount: number,\n    ariaColIndex: number,\n    ariaColSpan: number,\n    ariaControls: spaceSeparated,\n    ariaCurrent: null,\n    ariaDescribedBy: spaceSeparated,\n    ariaDetails: null,\n    ariaDisabled: booleanish,\n    ariaDropEffect: spaceSeparated,\n    ariaErrorMessage: null,\n    ariaExpanded: booleanish,\n    ariaFlowTo: spaceSeparated,\n    ariaGrabbed: booleanish,\n    ariaHasPopup: null,\n    ariaHidden: booleanish,\n    ariaInvalid: null,\n    ariaKeyShortcuts: null,\n    ariaLabel: null,\n    ariaLabelledBy: spaceSeparated,\n    ariaLevel: number,\n    ariaLive: null,\n    ariaModal: booleanish,\n    ariaMultiLine: booleanish,\n    ariaMultiSelectable: booleanish,\n    ariaOrientation: null,\n    ariaOwns: spaceSeparated,\n    ariaPlaceholder: null,\n    ariaPosInSet: number,\n    ariaPressed: booleanish,\n    ariaReadOnly: booleanish,\n    ariaRelevant: null,\n    ariaRequired: booleanish,\n    ariaRoleDescription: spaceSeparated,\n    ariaRowCount: number,\n    ariaRowIndex: number,\n    ariaRowSpan: number,\n    ariaSelected: booleanish,\n    ariaSetSize: number,\n    ariaSort: null,\n    ariaValueMax: number,\n    ariaValueMin: number,\n    ariaValueNow: number,\n    ariaValueText: null,\n    role: null\n  }\n})\n","import {\n  boolean,\n  overloadedBoolean,\n  booleanish,\n  number,\n  spaceSeparated,\n  commaSeparated\n} from './util/types.js'\nimport {create} from './util/create.js'\nimport {caseInsensitiveTransform} from './util/case-insensitive-transform.js'\n\nexport const html = create({\n  space: 'html',\n  attributes: {\n    acceptcharset: 'accept-charset',\n    classname: 'class',\n    htmlfor: 'for',\n    httpequiv: 'http-equiv'\n  },\n  transform: caseInsensitiveTransform,\n  mustUseProperty: ['checked', 'multiple', 'muted', 'selected'],\n  properties: {\n    // Standard Properties.\n    abbr: null,\n    accept: commaSeparated,\n    acceptCharset: spaceSeparated,\n    accessKey: spaceSeparated,\n    action: null,\n    allow: null,\n    allowFullScreen: boolean,\n    allowPaymentRequest: boolean,\n    allowUserMedia: boolean,\n    alt: null,\n    as: null,\n    async: boolean,\n    autoCapitalize: null,\n    autoComplete: spaceSeparated,\n    autoFocus: boolean,\n    autoPlay: boolean,\n    blocking: spaceSeparated,\n    capture: null,\n    charSet: null,\n    checked: boolean,\n    cite: null,\n    className: spaceSeparated,\n    cols: number,\n    colSpan: null,\n    content: null,\n    contentEditable: booleanish,\n    controls: boolean,\n    controlsList: spaceSeparated,\n    coords: number | commaSeparated,\n    crossOrigin: null,\n    data: null,\n    dateTime: null,\n    decoding: null,\n    default: boolean,\n    defer: boolean,\n    dir: null,\n    dirName: null,\n    disabled: boolean,\n    download: overloadedBoolean,\n    draggable: booleanish,\n    encType: null,\n    enterKeyHint: null,\n    fetchPriority: null,\n    form: null,\n    formAction: null,\n    formEncType: null,\n    formMethod: null,\n    formNoValidate: boolean,\n    formTarget: null,\n    headers: spaceSeparated,\n    height: number,\n    hidden: boolean,\n    high: number,\n    href: null,\n    hrefLang: null,\n    htmlFor: spaceSeparated,\n    httpEquiv: spaceSeparated,\n    id: null,\n    imageSizes: null,\n    imageSrcSet: null,\n    inert: boolean,\n    inputMode: null,\n    integrity: null,\n    is: null,\n    isMap: boolean,\n    itemId: null,\n    itemProp: spaceSeparated,\n    itemRef: spaceSeparated,\n    itemScope: boolean,\n    itemType: spaceSeparated,\n    kind: null,\n    label: null,\n    lang: null,\n    language: null,\n    list: null,\n    loading: null,\n    loop: boolean,\n    low: number,\n    manifest: null,\n    max: null,\n    maxLength: number,\n    media: null,\n    method: null,\n    min: null,\n    minLength: number,\n    multiple: boolean,\n    muted: boolean,\n    name: null,\n    nonce: null,\n    noModule: boolean,\n    noValidate: boolean,\n    onAbort: null,\n    onAfterPrint: null,\n    onAuxClick: null,\n    onBeforeMatch: null,\n    onBeforePrint: null,\n    onBeforeToggle: null,\n    onBeforeUnload: null,\n    onBlur: null,\n    onCancel: null,\n    onCanPlay: null,\n    onCanPlayThrough: null,\n    onChange: null,\n    onClick: null,\n    onClose: null,\n    onContextLost: null,\n    onContextMenu: null,\n    onContextRestored: null,\n    onCopy: null,\n    onCueChange: null,\n    onCut: null,\n    onDblClick: null,\n    onDrag: null,\n    onDragEnd: null,\n    onDragEnter: null,\n    onDragExit: null,\n    onDragLeave: null,\n    onDragOver: null,\n    onDragStart: null,\n    onDrop: null,\n    onDurationChange: null,\n    onEmptied: null,\n    onEnded: null,\n    onError: null,\n    onFocus: null,\n    onFormData: null,\n    onHashChange: null,\n    onInput: null,\n    onInvalid: null,\n    onKeyDown: null,\n    onKeyPress: null,\n    onKeyUp: null,\n    onLanguageChange: null,\n    onLoad: null,\n    onLoadedData: null,\n    onLoadedMetadata: null,\n    onLoadEnd: null,\n    onLoadStart: null,\n    onMessage: null,\n    onMessageError: null,\n    onMouseDown: null,\n    onMouseEnter: null,\n    onMouseLeave: null,\n    onMouseMove: null,\n    onMouseOut: null,\n    onMouseOver: null,\n    onMouseUp: null,\n    onOffline: null,\n    onOnline: null,\n    onPageHide: null,\n    onPageShow: null,\n    onPaste: null,\n    onPause: null,\n    onPlay: null,\n    onPlaying: null,\n    onPopState: null,\n    onProgress: null,\n    onRateChange: null,\n    onRejectionHandled: null,\n    onReset: null,\n    onResize: null,\n    onScroll: null,\n    onScrollEnd: null,\n    onSecurityPolicyViolation: null,\n    onSeeked: null,\n    onSeeking: null,\n    onSelect: null,\n    onSlotChange: null,\n    onStalled: null,\n    onStorage: null,\n    onSubmit: null,\n    onSuspend: null,\n    onTimeUpdate: null,\n    onToggle: null,\n    onUnhandledRejection: null,\n    onUnload: null,\n    onVolumeChange: null,\n    onWaiting: null,\n    onWheel: null,\n    open: boolean,\n    optimum: number,\n    pattern: null,\n    ping: spaceSeparated,\n    placeholder: null,\n    playsInline: boolean,\n    popover: null,\n    popoverTarget: null,\n    popoverTargetAction: null,\n    poster: null,\n    preload: null,\n    readOnly: boolean,\n    referrerPolicy: null,\n    rel: spaceSeparated,\n    required: boolean,\n    reversed: boolean,\n    rows: number,\n    rowSpan: number,\n    sandbox: spaceSeparated,\n    scope: null,\n    scoped: boolean,\n    seamless: boolean,\n    selected: boolean,\n    shadowRootDelegatesFocus: boolean,\n    shadowRootMode: null,\n    shape: null,\n    size: number,\n    sizes: null,\n    slot: null,\n    span: number,\n    spellCheck: booleanish,\n    src: null,\n    srcDoc: null,\n    srcLang: null,\n    srcSet: null,\n    start: number,\n    step: null,\n    style: null,\n    tabIndex: number,\n    target: null,\n    title: null,\n    translate: null,\n    type: null,\n    typeMustMatch: boolean,\n    useMap: null,\n    value: booleanish,\n    width: number,\n    wrap: null,\n\n    // Legacy.\n    // See: https://html.spec.whatwg.org/#other-elements,-attributes-and-apis\n    align: null, // Several. Use CSS `text-align` instead,\n    aLink: null, // `<body>`. Use CSS `a:active {color}` instead\n    archive: spaceSeparated, // `<object>`. List of URIs to archives\n    axis: null, // `<td>` and `<th>`. Use `scope` on `<th>`\n    background: null, // `<body>`. Use CSS `background-image` instead\n    bgColor: null, // `<body>` and table elements. Use CSS `background-color` instead\n    border: number, // `<table>`. Use CSS `border-width` instead,\n    borderColor: null, // `<table>`. Use CSS `border-color` instead,\n    bottomMargin: number, // `<body>`\n    cellPadding: null, // `<table>`\n    cellSpacing: null, // `<table>`\n    char: null, // Several table elements. When `align=char`, sets the character to align on\n    charOff: null, // Several table elements. When `char`, offsets the alignment\n    classId: null, // `<object>`\n    clear: null, // `<br>`. Use CSS `clear` instead\n    code: null, // `<object>`\n    codeBase: null, // `<object>`\n    codeType: null, // `<object>`\n    color: null, // `<font>` and `<hr>`. Use CSS instead\n    compact: boolean, // Lists. Use CSS to reduce space between items instead\n    declare: boolean, // `<object>`\n    event: null, // `<script>`\n    face: null, // `<font>`. Use CSS instead\n    frame: null, // `<table>`\n    frameBorder: null, // `<iframe>`. Use CSS `border` instead\n    hSpace: number, // `<img>` and `<object>`\n    leftMargin: number, // `<body>`\n    link: null, // `<body>`. Use CSS `a:link {color: *}` instead\n    longDesc: null, // `<frame>`, `<iframe>`, and `<img>`. Use an `<a>`\n    lowSrc: null, // `<img>`. Use a `<picture>`\n    marginHeight: number, // `<body>`\n    marginWidth: number, // `<body>`\n    noResize: boolean, // `<frame>`\n    noHref: boolean, // `<area>`. Use no href instead of an explicit `nohref`\n    noShade: boolean, // `<hr>`. Use background-color and height instead of borders\n    noWrap: boolean, // `<td>` and `<th>`\n    object: null, // `<applet>`\n    profile: null, // `<head>`\n    prompt: null, // `<isindex>`\n    rev: null, // `<link>`\n    rightMargin: number, // `<body>`\n    rules: null, // `<table>`\n    scheme: null, // `<meta>`\n    scrolling: booleanish, // `<frame>`. Use overflow in the child context\n    standby: null, // `<object>`\n    summary: null, // `<table>`\n    text: null, // `<body>`. Use CSS `color` instead\n    topMargin: number, // `<body>`\n    valueType: null, // `<param>`\n    version: null, // `<html>`. Use a doctype.\n    vAlign: null, // Several. Use CSS `vertical-align` instead\n    vLink: null, // `<body>`. Use CSS `a:visited {color}` instead\n    vSpace: number, // `<img>` and `<object>`\n\n    // Non-standard Properties.\n    allowTransparency: null,\n    autoCorrect: null,\n    autoSave: null,\n    disablePictureInPicture: boolean,\n    disableRemotePlayback: boolean,\n    prefix: null,\n    property: null,\n    results: number,\n    security: null,\n    unselectable: null\n  }\n})\n","import {\n  boolean,\n  number,\n  spaceSeparated,\n  commaSeparated,\n  commaOrSpaceSeparated\n} from './util/types.js'\nimport {create} from './util/create.js'\nimport {caseSensitiveTransform} from './util/case-sensitive-transform.js'\n\nexport const svg = create({\n  space: 'svg',\n  attributes: {\n    accentHeight: 'accent-height',\n    alignmentBaseline: 'alignment-baseline',\n    arabicForm: 'arabic-form',\n    baselineShift: 'baseline-shift',\n    capHeight: 'cap-height',\n    className: 'class',\n    clipPath: 'clip-path',\n    clipRule: 'clip-rule',\n    colorInterpolation: 'color-interpolation',\n    colorInterpolationFilters: 'color-interpolation-filters',\n    colorProfile: 'color-profile',\n    colorRendering: 'color-rendering',\n    crossOrigin: 'crossorigin',\n    dataType: 'datatype',\n    dominantBaseline: 'dominant-baseline',\n    enableBackground: 'enable-background',\n    fillOpacity: 'fill-opacity',\n    fillRule: 'fill-rule',\n    floodColor: 'flood-color',\n    floodOpacity: 'flood-opacity',\n    fontFamily: 'font-family',\n    fontSize: 'font-size',\n    fontSizeAdjust: 'font-size-adjust',\n    fontStretch: 'font-stretch',\n    fontStyle: 'font-style',\n    fontVariant: 'font-variant',\n    fontWeight: 'font-weight',\n    glyphName: 'glyph-name',\n    glyphOrientationHorizontal: 'glyph-orientation-horizontal',\n    glyphOrientationVertical: 'glyph-orientation-vertical',\n    hrefLang: 'hreflang',\n    horizAdvX: 'horiz-adv-x',\n    horizOriginX: 'horiz-origin-x',\n    horizOriginY: 'horiz-origin-y',\n    imageRendering: 'image-rendering',\n    letterSpacing: 'letter-spacing',\n    lightingColor: 'lighting-color',\n    markerEnd: 'marker-end',\n    markerMid: 'marker-mid',\n    markerStart: 'marker-start',\n    navDown: 'nav-down',\n    navDownLeft: 'nav-down-left',\n    navDownRight: 'nav-down-right',\n    navLeft: 'nav-left',\n    navNext: 'nav-next',\n    navPrev: 'nav-prev',\n    navRight: 'nav-right',\n    navUp: 'nav-up',\n    navUpLeft: 'nav-up-left',\n    navUpRight: 'nav-up-right',\n    onAbort: 'onabort',\n    onActivate: 'onactivate',\n    onAfterPrint: 'onafterprint',\n    onBeforePrint: 'onbeforeprint',\n    onBegin: 'onbegin',\n    onCancel: 'oncancel',\n    onCanPlay: 'oncanplay',\n    onCanPlayThrough: 'oncanplaythrough',\n    onChange: 'onchange',\n    onClick: 'onclick',\n    onClose: 'onclose',\n    onCopy: 'oncopy',\n    onCueChange: 'oncuechange',\n    onCut: 'oncut',\n    onDblClick: 'ondblclick',\n    onDrag: 'ondrag',\n    onDragEnd: 'ondragend',\n    onDragEnter: 'ondragenter',\n    onDragExit: 'ondragexit',\n    onDragLeave: 'ondragleave',\n    onDragOver: 'ondragover',\n    onDragStart: 'ondragstart',\n    onDrop: 'ondrop',\n    onDurationChange: 'ondurationchange',\n    onEmptied: 'onemptied',\n    onEnd: 'onend',\n    onEnded: 'onended',\n    onError: 'onerror',\n    onFocus: 'onfocus',\n    onFocusIn: 'onfocusin',\n    onFocusOut: 'onfocusout',\n    onHashChange: 'onhashchange',\n    onInput: 'oninput',\n    onInvalid: 'oninvalid',\n    onKeyDown: 'onkeydown',\n    onKeyPress: 'onkeypress',\n    onKeyUp: 'onkeyup',\n    onLoad: 'onload',\n    onLoadedData: 'onloadeddata',\n    onLoadedMetadata: 'onloadedmetadata',\n    onLoadStart: 'onloadstart',\n    onMessage: 'onmessage',\n    onMouseDown: 'onmousedown',\n    onMouseEnter: 'onmouseenter',\n    onMouseLeave: 'onmouseleave',\n    onMouseMove: 'onmousemove',\n    onMouseOut: 'onmouseout',\n    onMouseOver: 'onmouseover',\n    onMouseUp: 'onmouseup',\n    onMouseWheel: 'onmousewheel',\n    onOffline: 'onoffline',\n    onOnline: 'ononline',\n    onPageHide: 'onpagehide',\n    onPageShow: 'onpageshow',\n    onPaste: 'onpaste',\n    onPause: 'onpause',\n    onPlay: 'onplay',\n    onPlaying: 'onplaying',\n    onPopState: 'onpopstate',\n    onProgress: 'onprogress',\n    onRateChange: 'onratechange',\n    onRepeat: 'onrepeat',\n    onReset: 'onreset',\n    onResize: 'onresize',\n    onScroll: 'onscroll',\n    onSeeked: 'onseeked',\n    onSeeking: 'onseeking',\n    onSelect: 'onselect',\n    onShow: 'onshow',\n    onStalled: 'onstalled',\n    onStorage: 'onstorage',\n    onSubmit: 'onsubmit',\n    onSuspend: 'onsuspend',\n    onTimeUpdate: 'ontimeupdate',\n    onToggle: 'ontoggle',\n    onUnload: 'onunload',\n    onVolumeChange: 'onvolumechange',\n    onWaiting: 'onwaiting',\n    onZoom: 'onzoom',\n    overlinePosition: 'overline-position',\n    overlineThickness: 'overline-thickness',\n    paintOrder: 'paint-order',\n    panose1: 'panose-1',\n    pointerEvents: 'pointer-events',\n    referrerPolicy: 'referrerpolicy',\n    renderingIntent: 'rendering-intent',\n    shapeRendering: 'shape-rendering',\n    stopColor: 'stop-color',\n    stopOpacity: 'stop-opacity',\n    strikethroughPosition: 'strikethrough-position',\n    strikethroughThickness: 'strikethrough-thickness',\n    strokeDashArray: 'stroke-dasharray',\n    strokeDashOffset: 'stroke-dashoffset',\n    strokeLineCap: 'stroke-linecap',\n    strokeLineJoin: 'stroke-linejoin',\n    strokeMiterLimit: 'stroke-miterlimit',\n    strokeOpacity: 'stroke-opacity',\n    strokeWidth: 'stroke-width',\n    tabIndex: 'tabindex',\n    textAnchor: 'text-anchor',\n    textDecoration: 'text-decoration',\n    textRendering: 'text-rendering',\n    transformOrigin: 'transform-origin',\n    typeOf: 'typeof',\n    underlinePosition: 'underline-position',\n    underlineThickness: 'underline-thickness',\n    unicodeBidi: 'unicode-bidi',\n    unicodeRange: 'unicode-range',\n    unitsPerEm: 'units-per-em',\n    vAlphabetic: 'v-alphabetic',\n    vHanging: 'v-hanging',\n    vIdeographic: 'v-ideographic',\n    vMathematical: 'v-mathematical',\n    vectorEffect: 'vector-effect',\n    vertAdvY: 'vert-adv-y',\n    vertOriginX: 'vert-origin-x',\n    vertOriginY: 'vert-origin-y',\n    wordSpacing: 'word-spacing',\n    writingMode: 'writing-mode',\n    xHeight: 'x-height',\n    // These were camelcased in Tiny. Now lowercased in SVG 2\n    playbackOrder: 'playbackorder',\n    timelineBegin: 'timelinebegin'\n  },\n  transform: caseSensitiveTransform,\n  properties: {\n    about: commaOrSpaceSeparated,\n    accentHeight: number,\n    accumulate: null,\n    additive: null,\n    alignmentBaseline: null,\n    alphabetic: number,\n    amplitude: number,\n    arabicForm: null,\n    ascent: number,\n    attributeName: null,\n    attributeType: null,\n    azimuth: number,\n    bandwidth: null,\n    baselineShift: null,\n    baseFrequency: null,\n    baseProfile: null,\n    bbox: null,\n    begin: null,\n    bias: number,\n    by: null,\n    calcMode: null,\n    capHeight: number,\n    className: spaceSeparated,\n    clip: null,\n    clipPath: null,\n    clipPathUnits: null,\n    clipRule: null,\n    color: null,\n    colorInterpolation: null,\n    colorInterpolationFilters: null,\n    colorProfile: null,\n    colorRendering: null,\n    content: null,\n    contentScriptType: null,\n    contentStyleType: null,\n    crossOrigin: null,\n    cursor: null,\n    cx: null,\n    cy: null,\n    d: null,\n    dataType: null,\n    defaultAction: null,\n    descent: number,\n    diffuseConstant: number,\n    direction: null,\n    display: null,\n    dur: null,\n    divisor: number,\n    dominantBaseline: null,\n    download: boolean,\n    dx: null,\n    dy: null,\n    edgeMode: null,\n    editable: null,\n    elevation: number,\n    enableBackground: null,\n    end: null,\n    event: null,\n    exponent: number,\n    externalResourcesRequired: null,\n    fill: null,\n    fillOpacity: number,\n    fillRule: null,\n    filter: null,\n    filterRes: null,\n    filterUnits: null,\n    floodColor: null,\n    floodOpacity: null,\n    focusable: null,\n    focusHighlight: null,\n    fontFamily: null,\n    fontSize: null,\n    fontSizeAdjust: null,\n    fontStretch: null,\n    fontStyle: null,\n    fontVariant: null,\n    fontWeight: null,\n    format: null,\n    fr: null,\n    from: null,\n    fx: null,\n    fy: null,\n    g1: commaSeparated,\n    g2: commaSeparated,\n    glyphName: commaSeparated,\n    glyphOrientationHorizontal: null,\n    glyphOrientationVertical: null,\n    glyphRef: null,\n    gradientTransform: null,\n    gradientUnits: null,\n    handler: null,\n    hanging: number,\n    hatchContentUnits: null,\n    hatchUnits: null,\n    height: null,\n    href: null,\n    hrefLang: null,\n    horizAdvX: number,\n    horizOriginX: number,\n    horizOriginY: number,\n    id: null,\n    ideographic: number,\n    imageRendering: null,\n    initialVisibility: null,\n    in: null,\n    in2: null,\n    intercept: number,\n    k: number,\n    k1: number,\n    k2: number,\n    k3: number,\n    k4: number,\n    kernelMatrix: commaOrSpaceSeparated,\n    kernelUnitLength: null,\n    keyPoints: null, // SEMI_COLON_SEPARATED\n    keySplines: null, // SEMI_COLON_SEPARATED\n    keyTimes: null, // SEMI_COLON_SEPARATED\n    kerning: null,\n    lang: null,\n    lengthAdjust: null,\n    letterSpacing: null,\n    lightingColor: null,\n    limitingConeAngle: number,\n    local: null,\n    markerEnd: null,\n    markerMid: null,\n    markerStart: null,\n    markerHeight: null,\n    markerUnits: null,\n    markerWidth: null,\n    mask: null,\n    maskContentUnits: null,\n    maskUnits: null,\n    mathematical: null,\n    max: null,\n    media: null,\n    mediaCharacterEncoding: null,\n    mediaContentEncodings: null,\n    mediaSize: number,\n    mediaTime: null,\n    method: null,\n    min: null,\n    mode: null,\n    name: null,\n    navDown: null,\n    navDownLeft: null,\n    navDownRight: null,\n    navLeft: null,\n    navNext: null,\n    navPrev: null,\n    navRight: null,\n    navUp: null,\n    navUpLeft: null,\n    navUpRight: null,\n    numOctaves: null,\n    observer: null,\n    offset: null,\n    onAbort: null,\n    onActivate: null,\n    onAfterPrint: null,\n    onBeforePrint: null,\n    onBegin: null,\n    onCancel: null,\n    onCanPlay: null,\n    onCanPlayThrough: null,\n    onChange: null,\n    onClick: null,\n    onClose: null,\n    onCopy: null,\n    onCueChange: null,\n    onCut: null,\n    onDblClick: null,\n    onDrag: null,\n    onDragEnd: null,\n    onDragEnter: null,\n    onDragExit: null,\n    onDragLeave: null,\n    onDragOver: null,\n    onDragStart: null,\n    onDrop: null,\n    onDurationChange: null,\n    onEmptied: null,\n    onEnd: null,\n    onEnded: null,\n    onError: null,\n    onFocus: null,\n    onFocusIn: null,\n    onFocusOut: null,\n    onHashChange: null,\n    onInput: null,\n    onInvalid: null,\n    onKeyDown: null,\n    onKeyPress: null,\n    onKeyUp: null,\n    onLoad: null,\n    onLoadedData: null,\n    onLoadedMetadata: null,\n    onLoadStart: null,\n    onMessage: null,\n    onMouseDown: null,\n    onMouseEnter: null,\n    onMouseLeave: null,\n    onMouseMove: null,\n    onMouseOut: null,\n    onMouseOver: null,\n    onMouseUp: null,\n    onMouseWheel: null,\n    onOffline: null,\n    onOnline: null,\n    onPageHide: null,\n    onPageShow: null,\n    onPaste: null,\n    onPause: null,\n    onPlay: null,\n    onPlaying: null,\n    onPopState: null,\n    onProgress: null,\n    onRateChange: null,\n    onRepeat: null,\n    onReset: null,\n    onResize: null,\n    onScroll: null,\n    onSeeked: null,\n    onSeeking: null,\n    onSelect: null,\n    onShow: null,\n    onStalled: null,\n    onStorage: null,\n    onSubmit: null,\n    onSuspend: null,\n    onTimeUpdate: null,\n    onToggle: null,\n    onUnload: null,\n    onVolumeChange: null,\n    onWaiting: null,\n    onZoom: null,\n    opacity: null,\n    operator: null,\n    order: null,\n    orient: null,\n    orientation: null,\n    origin: null,\n    overflow: null,\n    overlay: null,\n    overlinePosition: number,\n    overlineThickness: number,\n    paintOrder: null,\n    panose1: null,\n    path: null,\n    pathLength: number,\n    patternContentUnits: null,\n    patternTransform: null,\n    patternUnits: null,\n    phase: null,\n    ping: spaceSeparated,\n    pitch: null,\n    playbackOrder: null,\n    pointerEvents: null,\n    points: null,\n    pointsAtX: number,\n    pointsAtY: number,\n    pointsAtZ: number,\n    preserveAlpha: null,\n    preserveAspectRatio: null,\n    primitiveUnits: null,\n    propagate: null,\n    property: commaOrSpaceSeparated,\n    r: null,\n    radius: null,\n    referrerPolicy: null,\n    refX: null,\n    refY: null,\n    rel: commaOrSpaceSeparated,\n    rev: commaOrSpaceSeparated,\n    renderingIntent: null,\n    repeatCount: null,\n    repeatDur: null,\n    requiredExtensions: commaOrSpaceSeparated,\n    requiredFeatures: commaOrSpaceSeparated,\n    requiredFonts: commaOrSpaceSeparated,\n    requiredFormats: commaOrSpaceSeparated,\n    resource: null,\n    restart: null,\n    result: null,\n    rotate: null,\n    rx: null,\n    ry: null,\n    scale: null,\n    seed: null,\n    shapeRendering: null,\n    side: null,\n    slope: null,\n    snapshotTime: null,\n    specularConstant: number,\n    specularExponent: number,\n    spreadMethod: null,\n    spacing: null,\n    startOffset: null,\n    stdDeviation: null,\n    stemh: null,\n    stemv: null,\n    stitchTiles: null,\n    stopColor: null,\n    stopOpacity: null,\n    strikethroughPosition: number,\n    strikethroughThickness: number,\n    string: null,\n    stroke: null,\n    strokeDashArray: commaOrSpaceSeparated,\n    strokeDashOffset: null,\n    strokeLineCap: null,\n    strokeLineJoin: null,\n    strokeMiterLimit: number,\n    strokeOpacity: number,\n    strokeWidth: null,\n    style: null,\n    surfaceScale: number,\n    syncBehavior: null,\n    syncBehaviorDefault: null,\n    syncMaster: null,\n    syncTolerance: null,\n    syncToleranceDefault: null,\n    systemLanguage: commaOrSpaceSeparated,\n    tabIndex: number,\n    tableValues: null,\n    target: null,\n    targetX: number,\n    targetY: number,\n    textAnchor: null,\n    textDecoration: null,\n    textRendering: null,\n    textLength: null,\n    timelineBegin: null,\n    title: null,\n    transformBehavior: null,\n    type: null,\n    typeOf: commaOrSpaceSeparated,\n    to: null,\n    transform: null,\n    transformOrigin: null,\n    u1: null,\n    u2: null,\n    underlinePosition: number,\n    underlineThickness: number,\n    unicode: null,\n    unicodeBidi: null,\n    unicodeRange: null,\n    unitsPerEm: number,\n    values: null,\n    vAlphabetic: number,\n    vMathematical: number,\n    vectorEffect: null,\n    vHanging: number,\n    vIdeographic: number,\n    version: null,\n    vertAdvY: number,\n    vertOriginX: number,\n    vertOriginY: number,\n    viewBox: null,\n    viewTarget: null,\n    visibility: null,\n    width: null,\n    widths: null,\n    wordSpacing: null,\n    writingMode: null,\n    x: null,\n    x1: null,\n    x2: null,\n    xChannelSelector: null,\n    xHeight: number,\n    y: null,\n    y1: null,\n    y2: null,\n    yChannelSelector: null,\n    z: null,\n    zoomAndPan: null\n  }\n})\n","/**\n * @typedef {import('./lib/util/info.js').Info} Info\n * @typedef {import('./lib/util/schema.js').Schema} Schema\n */\n\nimport {merge} from './lib/util/merge.js'\nimport {xlink} from './lib/xlink.js'\nimport {xml} from './lib/xml.js'\nimport {xmlns} from './lib/xmlns.js'\nimport {aria} from './lib/aria.js'\nimport {html as htmlBase} from './lib/html.js'\nimport {svg as svgBase} from './lib/svg.js'\n\nexport {find} from './lib/find.js'\nexport {hastToReact} from './lib/hast-to-react.js'\nexport {normalize} from './lib/normalize.js'\nexport const html = merge([xml, xlink, xmlns, aria, htmlBase], 'html')\nexport const svg = merge([xml, xlink, xmlns, aria, svgBase], 'svg')\n","/**\n * @typedef {import('./util/schema.js').Schema} Schema\n */\n\nimport {normalize} from './normalize.js'\nimport {DefinedInfo} from './util/defined-info.js'\nimport {Info} from './util/info.js'\n\nconst valid = /^data[-\\w.:]+$/i\nconst dash = /-[a-z]/g\nconst cap = /[A-Z]/g\n\n/**\n * @param {Schema} schema\n * @param {string} value\n * @returns {Info}\n */\nexport function find(schema, value) {\n  const normal = normalize(value)\n  let prop = value\n  let Type = Info\n\n  if (normal in schema.normal) {\n    return schema.property[schema.normal[normal]]\n  }\n\n  if (normal.length > 4 && normal.slice(0, 4) === 'data' && valid.test(value)) {\n    // Attribute or property.\n    if (value.charAt(4) === '-') {\n      // Turn it into a property.\n      const rest = value.slice(5).replace(dash, camelcase)\n      prop = 'data' + rest.charAt(0).toUpperCase() + rest.slice(1)\n    } else {\n      // Turn it into an attribute.\n      const rest = value.slice(4)\n\n      if (!dash.test(rest)) {\n        let dashes = rest.replace(cap, kebab)\n\n        if (dashes.charAt(0) !== '-') {\n          dashes = '-' + dashes\n        }\n\n        value = 'data' + dashes\n      }\n    }\n\n    Type = DefinedInfo\n  }\n\n  return new Type(prop, value)\n}\n\n/**\n * @param {string} $0\n * @returns {string}\n */\nfunction kebab($0) {\n  return '-' + $0.toLowerCase()\n}\n\n/**\n * @param {string} $0\n * @returns {string}\n */\nfunction camelcase($0) {\n  return $0.charAt(1).toUpperCase()\n}\n","/**\n * `hast` is close to `React`, but differs in a couple of cases.\n *\n * To get a React property from a hast property, check if it is in\n * `hastToReact`, if it is, then use the corresponding value,\n * otherwise, use the hast property.\n *\n * @type {Record<string, string>}\n */\nexport const hastToReact = {\n  classId: 'classID',\n  dataType: 'datatype',\n  itemId: 'itemID',\n  strokeDashArray: 'strokeDasharray',\n  strokeDashOffset: 'strokeDashoffset',\n  strokeLineCap: 'strokeLinecap',\n  strokeLineJoin: 'strokeLinejoin',\n  strokeMiterLimit: 'strokeMiterlimit',\n  typeOf: 'typeof',\n  xLinkActuate: 'xlinkActuate',\n  xLinkArcRole: 'xlinkArcrole',\n  xLinkHref: 'xlinkHref',\n  xLinkRole: 'xlinkRole',\n  xLinkShow: 'xlinkShow',\n  xLinkTitle: 'xlinkTitle',\n  xLinkType: 'xlinkType',\n  xmlnsXLink: 'xmlnsXlink'\n}\n","import StyleToObject from '../cjs/index.js';\n\n// ensure compatibility with rollup umd build\nexport default StyleToObject.default || StyleToObject;\n","/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Point} Point\n * @typedef {import('unist').Position} Position\n */\n\n/**\n * @typedef NodeLike\n * @property {string} type\n * @property {PositionLike | null | undefined} [position]\n *\n * @typedef PositionLike\n * @property {PointLike | null | undefined} [start]\n * @property {PointLike | null | undefined} [end]\n *\n * @typedef PointLike\n * @property {number | null | undefined} [line]\n * @property {number | null | undefined} [column]\n * @property {number | null | undefined} [offset]\n */\n\n/**\n * Get the ending point of `node`.\n *\n * @param node\n *   Node.\n * @returns\n *   Point.\n */\nexport const pointEnd = point('end')\n\n/**\n * Get the starting point of `node`.\n *\n * @param node\n *   Node.\n * @returns\n *   Point.\n */\nexport const pointStart = point('start')\n\n/**\n * Get the positional info of `node`.\n *\n * @param {'end' | 'start'} type\n *   Side.\n * @returns\n *   Getter.\n */\nfunction point(type) {\n  return point\n\n  /**\n   * Get the point info of `node` at a bound side.\n   *\n   * @param {Node | NodeLike | null | undefined} [node]\n   * @returns {Point | undefined}\n   */\n  function point(node) {\n    const point = (node && node.position && node.position[type]) || {}\n\n    if (\n      typeof point.line === 'number' &&\n      point.line > 0 &&\n      typeof point.column === 'number' &&\n      point.column > 0\n    ) {\n      return {\n        line: point.line,\n        column: point.column,\n        offset:\n          typeof point.offset === 'number' && point.offset > -1\n            ? point.offset\n            : undefined\n      }\n    }\n  }\n}\n\n/**\n * Get the positional info of `node`.\n *\n * @param {Node | NodeLike | null | undefined} [node]\n *   Node.\n * @returns {Position | undefined}\n *   Position.\n */\nexport function position(node) {\n  const start = pointStart(node)\n  const end = pointEnd(node)\n\n  if (start && end) {\n    return {start, end}\n  }\n}\n","/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Point} Point\n * @typedef {import('unist').Position} Position\n */\n\n/**\n * @typedef NodeLike\n * @property {string} type\n * @property {PositionLike | null | undefined} [position]\n *\n * @typedef PointLike\n * @property {number | null | undefined} [line]\n * @property {number | null | undefined} [column]\n * @property {number | null | undefined} [offset]\n *\n * @typedef PositionLike\n * @property {PointLike | null | undefined} [start]\n * @property {PointLike | null | undefined} [end]\n */\n\n/**\n * Serialize the positional info of a point, position (start and end points),\n * or node.\n *\n * @param {Node | NodeLike | Point | PointLike | Position | PositionLike | null | undefined} [value]\n *   Node, position, or point.\n * @returns {string}\n *   Pretty printed positional info of a node (`string`).\n *\n *   In the format of a range `ls:cs-le:ce` (when given `node` or `position`)\n *   or a point `l:c` (when given `point`), where `l` stands for line, `c` for\n *   column, `s` for `start`, and `e` for end.\n *   An empty string (`''`) is returned if the given value is neither `node`,\n *   `position`, nor `point`.\n */\nexport function stringifyPosition(value) {\n  // Nothing.\n  if (!value || typeof value !== 'object') {\n    return ''\n  }\n\n  // Node.\n  if ('position' in value || 'type' in value) {\n    return position(value.position)\n  }\n\n  // Position.\n  if ('start' in value || 'end' in value) {\n    return position(value)\n  }\n\n  // Point.\n  if ('line' in value || 'column' in value) {\n    return point(value)\n  }\n\n  // ?\n  return ''\n}\n\n/**\n * @param {Point | PointLike | null | undefined} point\n * @returns {string}\n */\nfunction point(point) {\n  return index(point && point.line) + ':' + index(point && point.column)\n}\n\n/**\n * @param {Position | PositionLike | null | undefined} pos\n * @returns {string}\n */\nfunction position(pos) {\n  return point(pos && pos.start) + '-' + point(pos && pos.end)\n}\n\n/**\n * @param {number | null | undefined} value\n * @returns {number}\n */\nfunction index(value) {\n  return value && typeof value === 'number' ? value : 1\n}\n","/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Point} Point\n * @typedef {import('unist').Position} Position\n */\n\n/**\n * @typedef {object & {type: string, position?: Position | undefined}} NodeLike\n *\n * @typedef Options\n *   Configuration.\n * @property {Array<Node> | null | undefined} [ancestors]\n *   Stack of (inclusive) ancestor nodes surrounding the message (optional).\n * @property {Error | null | undefined} [cause]\n *   Original error cause of the message (optional).\n * @property {Point | Position | null | undefined} [place]\n *   Place of message (optional).\n * @property {string | null | undefined} [ruleId]\n *   Category of message (optional, example: `'my-rule'`).\n * @property {string | null | undefined} [source]\n *   Namespace of who sent the message (optional, example: `'my-package'`).\n */\n\nimport {stringifyPosition} from 'unist-util-stringify-position'\n\n/**\n * Message.\n */\nexport class VFileMessage extends Error {\n  /**\n   * Create a message for `reason`.\n   *\n   * > 🪦 **Note**: also has obsolete signatures.\n   *\n   * @overload\n   * @param {string} reason\n   * @param {Options | null | undefined} [options]\n   * @returns\n   *\n   * @overload\n   * @param {string} reason\n   * @param {Node | NodeLike | null | undefined} parent\n   * @param {string | null | undefined} [origin]\n   * @returns\n   *\n   * @overload\n   * @param {string} reason\n   * @param {Point | Position | null | undefined} place\n   * @param {string | null | undefined} [origin]\n   * @returns\n   *\n   * @overload\n   * @param {string} reason\n   * @param {string | null | undefined} [origin]\n   * @returns\n   *\n   * @overload\n   * @param {Error | VFileMessage} cause\n   * @param {Node | NodeLike | null | undefined} parent\n   * @param {string | null | undefined} [origin]\n   * @returns\n   *\n   * @overload\n   * @param {Error | VFileMessage} cause\n   * @param {Point | Position | null | undefined} place\n   * @param {string | null | undefined} [origin]\n   * @returns\n   *\n   * @overload\n   * @param {Error | VFileMessage} cause\n   * @param {string | null | undefined} [origin]\n   * @returns\n   *\n   * @param {Error | VFileMessage | string} causeOrReason\n   *   Reason for message, should use markdown.\n   * @param {Node | NodeLike | Options | Point | Position | string | null | undefined} [optionsOrParentOrPlace]\n   *   Configuration (optional).\n   * @param {string | null | undefined} [origin]\n   *   Place in code where the message originates (example:\n   *   `'my-package:my-rule'` or `'my-rule'`).\n   * @returns\n   *   Instance of `VFileMessage`.\n   */\n  // eslint-disable-next-line complexity\n  constructor(causeOrReason, optionsOrParentOrPlace, origin) {\n    super()\n\n    if (typeof optionsOrParentOrPlace === 'string') {\n      origin = optionsOrParentOrPlace\n      optionsOrParentOrPlace = undefined\n    }\n\n    /** @type {string} */\n    let reason = ''\n    /** @type {Options} */\n    let options = {}\n    let legacyCause = false\n\n    if (optionsOrParentOrPlace) {\n      // Point.\n      if (\n        'line' in optionsOrParentOrPlace &&\n        'column' in optionsOrParentOrPlace\n      ) {\n        options = {place: optionsOrParentOrPlace}\n      }\n      // Position.\n      else if (\n        'start' in optionsOrParentOrPlace &&\n        'end' in optionsOrParentOrPlace\n      ) {\n        options = {place: optionsOrParentOrPlace}\n      }\n      // Node.\n      else if ('type' in optionsOrParentOrPlace) {\n        options = {\n          ancestors: [optionsOrParentOrPlace],\n          place: optionsOrParentOrPlace.position\n        }\n      }\n      // Options.\n      else {\n        options = {...optionsOrParentOrPlace}\n      }\n    }\n\n    if (typeof causeOrReason === 'string') {\n      reason = causeOrReason\n    }\n    // Error.\n    else if (!options.cause && causeOrReason) {\n      legacyCause = true\n      reason = causeOrReason.message\n      options.cause = causeOrReason\n    }\n\n    if (!options.ruleId && !options.source && typeof origin === 'string') {\n      const index = origin.indexOf(':')\n\n      if (index === -1) {\n        options.ruleId = origin\n      } else {\n        options.source = origin.slice(0, index)\n        options.ruleId = origin.slice(index + 1)\n      }\n    }\n\n    if (!options.place && options.ancestors && options.ancestors) {\n      const parent = options.ancestors[options.ancestors.length - 1]\n\n      if (parent) {\n        options.place = parent.position\n      }\n    }\n\n    const start =\n      options.place && 'start' in options.place\n        ? options.place.start\n        : options.place\n\n    /* eslint-disable no-unused-expressions */\n    /**\n     * Stack of ancestor nodes surrounding the message.\n     *\n     * @type {Array<Node> | undefined}\n     */\n    this.ancestors = options.ancestors || undefined\n\n    /**\n     * Original error cause of the message.\n     *\n     * @type {Error | undefined}\n     */\n    this.cause = options.cause || undefined\n\n    /**\n     * Starting column of message.\n     *\n     * @type {number | undefined}\n     */\n    this.column = start ? start.column : undefined\n\n    /**\n     * State of problem.\n     *\n     * * `true` — error, file not usable\n     * * `false` — warning, change may be needed\n     * * `undefined` — change likely not needed\n     *\n     * @type {boolean | null | undefined}\n     */\n    this.fatal = undefined\n\n    /**\n     * Path of a file (used throughout the `VFile` ecosystem).\n     *\n     * @type {string | undefined}\n     */\n    this.file\n\n    // Field from `Error`.\n    /**\n     * Reason for message.\n     *\n     * @type {string}\n     */\n    this.message = reason\n\n    /**\n     * Starting line of error.\n     *\n     * @type {number | undefined}\n     */\n    this.line = start ? start.line : undefined\n\n    // Field from `Error`.\n    /**\n     * Serialized positional info of message.\n     *\n     * On normal errors, this would be something like `ParseError`, buit in\n     * `VFile` messages we use this space to show where an error happened.\n     */\n    this.name = stringifyPosition(options.place) || '1:1'\n\n    /**\n     * Place of message.\n     *\n     * @type {Point | Position | undefined}\n     */\n    this.place = options.place || undefined\n\n    /**\n     * Reason for message, should use markdown.\n     *\n     * @type {string}\n     */\n    this.reason = this.message\n\n    /**\n     * Category of message (example: `'my-rule'`).\n     *\n     * @type {string | undefined}\n     */\n    this.ruleId = options.ruleId || undefined\n\n    /**\n     * Namespace of message (example: `'my-package'`).\n     *\n     * @type {string | undefined}\n     */\n    this.source = options.source || undefined\n\n    // Field from `Error`.\n    /**\n     * Stack of message.\n     *\n     * This is used by normal errors to show where something happened in\n     * programming code, irrelevant for `VFile` messages,\n     *\n     * @type {string}\n     */\n    this.stack =\n      legacyCause && options.cause && typeof options.cause.stack === 'string'\n        ? options.cause.stack\n        : ''\n\n    // The following fields are “well known”.\n    // Not standard.\n    // Feel free to add other non-standard fields to your messages.\n\n    /**\n     * Specify the source value that’s being reported, which is deemed\n     * incorrect.\n     *\n     * @type {string | undefined}\n     */\n    this.actual\n\n    /**\n     * Suggest acceptable values that can be used instead of `actual`.\n     *\n     * @type {Array<string> | undefined}\n     */\n    this.expected\n\n    /**\n     * Long form description of the message (you should use markdown).\n     *\n     * @type {string | undefined}\n     */\n    this.note\n\n    /**\n     * Link to docs for the message.\n     *\n     * > 👉 **Note**: this must be an absolute URL that can be passed as `x`\n     * > to `new URL(x)`.\n     *\n     * @type {string | undefined}\n     */\n    this.url\n    /* eslint-enable no-unused-expressions */\n  }\n}\n\nVFileMessage.prototype.file = ''\nVFileMessage.prototype.name = ''\nVFileMessage.prototype.reason = ''\nVFileMessage.prototype.message = ''\nVFileMessage.prototype.stack = ''\nVFileMessage.prototype.column = undefined\nVFileMessage.prototype.line = undefined\nVFileMessage.prototype.ancestors = undefined\nVFileMessage.prototype.cause = undefined\nVFileMessage.prototype.fatal = undefined\nVFileMessage.prototype.place = undefined\nVFileMessage.prototype.ruleId = undefined\nVFileMessage.prototype.source = undefined\n","// Register MDX nodes in mdast:\n/// <reference types=\"mdast-util-mdx-expression\" />\n/// <reference types=\"mdast-util-mdx-jsx\" />\n/// <reference types=\"mdast-util-mdxjs-esm\" />\n\n/**\n * @typedef {import('estree').Identifier} Identifier\n * @typedef {import('estree').Literal} Literal\n * @typedef {import('estree').MemberExpression} MemberExpression\n * @typedef {import('estree').Expression} Expression\n * @typedef {import('estree').Program} Program\n *\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').Nodes} Nodes\n * @typedef {import('hast').Parents} Parents\n * @typedef {import('hast').Root} Root\n * @typedef {import('hast').Text} Text\n *\n * @typedef {import('mdast-util-mdx-expression').MdxFlowExpressionHast} MdxFlowExpression\n * @typedef {import('mdast-util-mdx-expression').MdxTextExpressionHast} MdxTextExpression\n *\n * @typedef {import('mdast-util-mdx-jsx').MdxJsxFlowElementHast} MdxJsxFlowElement\n * @typedef {import('mdast-util-mdx-jsx').MdxJsxTextElementHast} MdxJsxTextElement\n *\n * @typedef {import('mdast-util-mdxjs-esm').MdxjsEsmHast} MdxjsEsm\n *\n * @typedef {import('property-information').Schema} Schema\n *\n * @typedef {import('unist').Position} Position\n *\n * @typedef {import('./components.js').Components} Components\n */\n\n/**\n * @typedef {JSX.Element | string | null | undefined} Child\n *   Child.\n *\n * @callback Create\n *   Create something in development or production.\n * @param {Nodes} node\n *   hast node.\n * @param {unknown} type\n *   Fragment symbol or tag name.\n * @param {Props} props\n *   Properties and children.\n * @param {string | undefined} key\n *   Key.\n * @returns {JSX.Element}\n *   Result.\n *\n * @callback CreateEvaluater\n *   Create an evaluator that turns ESTree ASTs from embedded MDX into values.\n * @returns {Evaluater}\n *   Evaluater.\n *\n * @typedef {'html' | 'react'} ElementAttributeNameCase\n *   Casing to use for attribute names.\n *\n *   HTML casing is for example `class`, `stroke-linecap`, `xml:lang`.\n *   React casing is for example `className`, `strokeLinecap`, `xmlLang`.\n *\n * @callback EvaluateExpression\n *   Turn an MDX expression into a value.\n * @param {Expression} expression\n *   ESTree expression.\n * @returns {unknown}\n *   Result of expression.\n *\n * @callback EvaluateProgram\n *   Turn an MDX program (export/import statements) into a value.\n * @param {Program} expression\n *   ESTree program.\n * @returns {unknown}\n *   Result of program;\n *   should likely be `undefined` as ESM changes the scope but doesn’t yield\n *   something.\n *\n * @typedef Evaluater\n *   Evaluator that turns ESTree ASTs from embedded MDX into values.\n * @property {EvaluateExpression} evaluateExpression\n *   Evaluate an expression.\n * @property {EvaluateProgram} evaluateProgram\n *   Evaluate a program.\n *\n * @typedef {[string, Value]} Field\n *   Property field.\n *\n * @typedef {unknown} Fragment\n *   Represent the children, typically a symbol.\n *\n * @callback Jsx\n *   Create a production element.\n * @param {unknown} type\n *   Element type: `Fragment` symbol, tag name (`string`), component.\n * @param {Props} props\n *   Element props, `children`, and maybe `node`.\n * @param {string | undefined} [key]\n *   Dynamicly generated key to use.\n * @returns {JSX.Element}\n *   Element from your framework.\n *\n * @callback JsxDev\n *   Create a development element.\n * @param {unknown} type\n *   Element type: `Fragment` symbol, tag name (`string`), component.\n * @param {Props} props\n *   Element props, `children`, and maybe `node`.\n * @param {string | undefined} key\n *   Dynamicly generated key to use.\n * @param {boolean} isStaticChildren\n *   Whether two or more children are passed (in an array), which is whether\n *   `jsxs` or `jsx` would be used.\n * @param {Source} source\n *   Info about source.\n * @param {undefined} self\n *   Nothing (this is used by frameworks that have components, we don’t).\n * @returns {JSX.Element}\n *   Element from your framework.\n *\n * @typedef {{children?: Array<Child> | Child, node?: Element | MdxJsxFlowElement | MdxJsxTextElement | undefined, [prop: string]: Array<Child> | Child | Element | MdxJsxFlowElement | MdxJsxTextElement | Value | undefined}} Props\n *   Properties and children.\n *\n * @typedef RegularFields\n *   Configuration.\n * @property {Partial<Components> | null | undefined} [components]\n *   Components to use (optional).\n * @property {CreateEvaluater | null | undefined} [createEvaluater]\n *   Create an evaluator that turns ESTree ASTs into values (optional).\n * @property {ElementAttributeNameCase | null | undefined} [elementAttributeNameCase='react']\n *   Specify casing to use for attribute names (default: `'react'`).\n * @property {string | null | undefined} [filePath]\n *   File path to the original source file (optional).\n *\n *   Passed in source info to `jsxDEV` when using the automatic runtime with\n *   `development: true`.\n * @property {boolean | null | undefined} [ignoreInvalidStyle=false]\n *   Ignore invalid CSS in `style` props (default: `false`);\n *   the default behavior is to throw an error.\n * @property {boolean | null | undefined} [passKeys=true]\n *   Generate keys to optimize frameworks that support them (default: `true`).\n *\n *   > 👉 **Note**: Solid currently fails if keys are passed.\n * @property {boolean | null | undefined} [passNode=false]\n *   Pass the hast element node to components (default: `false`).\n * @property {Space | null | undefined} [space='html']\n *   Whether `tree` is in the `'html'` or `'svg'` space (default: `'html'`).\n *\n *   When an `<svg>` element is found in the HTML space, this package already\n *   automatically switches to and from the SVG space when entering and exiting\n *   it.\n * @property {StylePropertyNameCase | null | undefined} [stylePropertyNameCase='dom']\n *   Specify casing to use for property names in `style` objects (default:\n *   `'dom'`).\n * @property {boolean | null | undefined} [tableCellAlignToStyle=true]\n *   Turn obsolete `align` props on `td` and `th` into CSS `style` props\n *   (default: `true`).\n *\n * @typedef RuntimeDevelopment\n *   Runtime fields when development is on.\n * @property {Fragment} Fragment\n *   Fragment.\n * @property {true} development\n *   Whether to use `jsxDEV` (when on) or `jsx` and `jsxs` (when off).\n * @property {Jsx | null | undefined} [jsx]\n *   Dynamic JSX (optional).\n * @property {JsxDev} jsxDEV\n *   Development JSX.\n * @property {Jsx | null | undefined} [jsxs]\n *   Static JSX (optional).\n *\n * @typedef RuntimeProduction\n *   Runtime fields when development is off.\n * @property {Fragment} Fragment\n *   Fragment.\n * @property {false | null | undefined} [development]\n *   Whether to use `jsxDEV` (when on) or `jsx` and `jsxs` (when off) (optional).\n * @property {Jsx} jsx\n *   Dynamic JSX.\n * @property {JsxDev | null | undefined} [jsxDEV]\n *   Development JSX (optional).\n * @property {Jsx} jsxs\n *   Static JSX.\n *\n * @typedef RuntimeUnknown\n *   Runtime fields when development might be on or off.\n * @property {Fragment} Fragment\n *   Fragment.\n * @property {boolean} development\n *   Whether to use `jsxDEV` (when on) or `jsx` and `jsxs` (when off).\n * @property {Jsx | null | undefined} [jsx]\n *   Dynamic JSX (optional).\n * @property {JsxDev | null | undefined} [jsxDEV]\n *   Development JSX (optional).\n * @property {Jsx | null | undefined} [jsxs]\n *   Static JSX (optional).\n *\n * @typedef Source\n *   Info about source.\n * @property {number | undefined} columnNumber\n *   Column where thing starts (0-indexed).\n * @property {string | undefined} fileName\n *   Name of source file.\n * @property {number | undefined} lineNumber\n *   Line where thing starts (1-indexed).\n *\n * @typedef {'html' | 'svg'} Space\n *   Namespace.\n *\n *   > 👉 **Note**: hast is not XML.\n *   > It supports SVG as embedded in HTML.\n *   > It does not support the features available in XML.\n *   > Passing SVG might break but fragments of modern SVG should be fine.\n *   > Use `xast` if you need to support SVG as XML.\n *\n * @typedef State\n *   Info passed around.\n * @property {unknown} Fragment\n *   Fragment symbol.\n * @property {Array<Parents>} ancestors\n *   Stack of parents.\n * @property {Partial<Components>} components\n *   Components to swap.\n * @property {Create} create\n *   Create something in development or production.\n * @property {ElementAttributeNameCase} elementAttributeNameCase\n *   Casing to use for attribute names.\n * @property {Evaluater | undefined} evaluater\n *   Evaluator that turns ESTree ASTs into values.\n * @property {string | undefined} filePath\n *   File path.\n * @property {boolean} ignoreInvalidStyle\n *   Ignore invalid CSS in `style` props.\n * @property {boolean} passKeys\n *   Generate keys to optimize frameworks that support them.\n * @property {boolean} passNode\n *   Pass `node` to components.\n * @property {Schema} schema\n *   Current schema.\n * @property {StylePropertyNameCase} stylePropertyNameCase\n *   Casing to use for property names in `style` objects.\n * @property {boolean} tableCellAlignToStyle\n *   Turn obsolete `align` props on `td` and `th` into CSS `style` props.\n *\n * @typedef {Record<string, string>} Style\n *   Style map.\n *\n * @typedef {'css' | 'dom'} StylePropertyNameCase\n *   Casing to use for property names in `style` objects.\n *\n *   CSS casing is for example `background-color` and `-webkit-line-clamp`.\n *   DOM casing is for example `backgroundColor` and `WebkitLineClamp`.\n *\n * @typedef {Style | boolean | number | string} Value\n *   Primitive property value and `Style` map.\n */\n\n/**\n * @typedef {RuntimeDevelopment & RegularFields} Development\n *   Configuration (development).\n * @typedef {Development | Production | Unknown} Options\n *   Configuration.\n * @typedef {RegularFields & RuntimeProduction} Production\n *   Configuration (production).\n * @typedef {RegularFields & RuntimeUnknown} Unknown\n *   Configuration (production or development).\n */\n\nimport {stringify as commas} from 'comma-separated-tokens'\nimport {ok as assert} from 'devlop'\nimport {name as isIdentifierName} from 'estree-util-is-identifier-name'\nimport {whitespace} from 'hast-util-whitespace'\nimport {find, hastToReact, html, svg} from 'property-information'\nimport {stringify as spaces} from 'space-separated-tokens'\nimport styleToObject from 'style-to-object'\nimport {pointStart} from 'unist-util-position'\nimport {VFileMessage} from 'vfile-message'\n\nconst own = {}.hasOwnProperty\n\n/** @type {Map<string, number>} */\nconst emptyMap = new Map()\n\nconst cap = /[A-Z]/g\nconst dashSomething = /-([a-z])/g\n\n// `react-dom` triggers a warning for *any* white space in tables.\n// To follow GFM, `mdast-util-to-hast` injects line endings between elements.\n// Other tools might do so too, but they don’t do here, so we remove all of\n// that.\n\n// See: <https://github.com/facebook/react/pull/7081>.\n// See: <https://github.com/facebook/react/pull/7515>.\n// See: <https://github.com/remarkjs/remark-react/issues/64>.\n// See: <https://github.com/rehypejs/rehype-react/pull/29>.\n// See: <https://github.com/rehypejs/rehype-react/pull/32>.\n// See: <https://github.com/rehypejs/rehype-react/pull/45>.\nconst tableElements = new Set(['table', 'tbody', 'thead', 'tfoot', 'tr'])\n\nconst tableCellElement = new Set(['td', 'th'])\n\nconst docs = 'https://github.com/syntax-tree/hast-util-to-jsx-runtime'\n\n/**\n * Transform a hast tree to preact, react, solid, svelte, vue, etc.,\n * with an automatic JSX runtime.\n *\n * @param {Nodes} tree\n *   Tree to transform.\n * @param {Options} options\n *   Configuration (required).\n * @returns {JSX.Element}\n *   JSX element.\n */\n\nexport function toJsxRuntime(tree, options) {\n  if (!options || options.Fragment === undefined) {\n    throw new TypeError('Expected `Fragment` in options')\n  }\n\n  const filePath = options.filePath || undefined\n  /** @type {Create} */\n  let create\n\n  if (options.development) {\n    if (typeof options.jsxDEV !== 'function') {\n      throw new TypeError(\n        'Expected `jsxDEV` in options when `development: true`'\n      )\n    }\n\n    create = developmentCreate(filePath, options.jsxDEV)\n  } else {\n    if (typeof options.jsx !== 'function') {\n      throw new TypeError('Expected `jsx` in production options')\n    }\n\n    if (typeof options.jsxs !== 'function') {\n      throw new TypeError('Expected `jsxs` in production options')\n    }\n\n    create = productionCreate(filePath, options.jsx, options.jsxs)\n  }\n\n  /** @type {State} */\n  const state = {\n    Fragment: options.Fragment,\n    ancestors: [],\n    components: options.components || {},\n    create,\n    elementAttributeNameCase: options.elementAttributeNameCase || 'react',\n    evaluater: options.createEvaluater ? options.createEvaluater() : undefined,\n    filePath,\n    ignoreInvalidStyle: options.ignoreInvalidStyle || false,\n    passKeys: options.passKeys !== false,\n    passNode: options.passNode || false,\n    schema: options.space === 'svg' ? svg : html,\n    stylePropertyNameCase: options.stylePropertyNameCase || 'dom',\n    tableCellAlignToStyle: options.tableCellAlignToStyle !== false\n  }\n\n  const result = one(state, tree, undefined)\n\n  // JSX element.\n  if (result && typeof result !== 'string') {\n    return result\n  }\n\n  // Text node or something that turned into nothing.\n  return state.create(\n    tree,\n    state.Fragment,\n    {children: result || undefined},\n    undefined\n  )\n}\n\n/**\n * Transform a node.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Nodes} node\n *   Current node.\n * @param {string | undefined} key\n *   Key.\n * @returns {Child | undefined}\n *   Child, optional.\n */\nfunction one(state, node, key) {\n  if (node.type === 'element') {\n    return element(state, node, key)\n  }\n\n  if (node.type === 'mdxFlowExpression' || node.type === 'mdxTextExpression') {\n    return mdxExpression(state, node)\n  }\n\n  if (node.type === 'mdxJsxFlowElement' || node.type === 'mdxJsxTextElement') {\n    return mdxJsxElement(state, node, key)\n  }\n\n  if (node.type === 'mdxjsEsm') {\n    return mdxEsm(state, node)\n  }\n\n  if (node.type === 'root') {\n    return root(state, node, key)\n  }\n\n  if (node.type === 'text') {\n    return text(state, node)\n  }\n}\n\n/**\n * Handle element.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Element} node\n *   Current node.\n * @param {string | undefined} key\n *   Key.\n * @returns {Child | undefined}\n *   Child, optional.\n */\nfunction element(state, node, key) {\n  const parentSchema = state.schema\n  let schema = parentSchema\n\n  if (node.tagName.toLowerCase() === 'svg' && parentSchema.space === 'html') {\n    schema = svg\n    state.schema = schema\n  }\n\n  state.ancestors.push(node)\n\n  const type = findComponentFromName(state, node.tagName, false)\n  const props = createElementProps(state, node)\n  let children = createChildren(state, node)\n\n  if (tableElements.has(node.tagName)) {\n    children = children.filter(function (child) {\n      return typeof child === 'string' ? !whitespace(child) : true\n    })\n  }\n\n  addNode(state, props, type, node)\n  addChildren(props, children)\n\n  // Restore.\n  state.ancestors.pop()\n  state.schema = parentSchema\n\n  return state.create(node, type, props, key)\n}\n\n/**\n * Handle MDX expression.\n *\n * @param {State} state\n *   Info passed around.\n * @param {MdxFlowExpression | MdxTextExpression} node\n *   Current node.\n * @returns {Child | undefined}\n *   Child, optional.\n */\nfunction mdxExpression(state, node) {\n  if (node.data && node.data.estree && state.evaluater) {\n    const program = node.data.estree\n    const expression = program.body[0]\n    assert(expression.type === 'ExpressionStatement')\n\n    // Assume result is a child.\n    return /** @type {Child | undefined} */ (\n      state.evaluater.evaluateExpression(expression.expression)\n    )\n  }\n\n  crashEstree(state, node.position)\n}\n\n/**\n * Handle MDX ESM.\n *\n * @param {State} state\n *   Info passed around.\n * @param {MdxjsEsm} node\n *   Current node.\n * @returns {Child | undefined}\n *   Child, optional.\n */\nfunction mdxEsm(state, node) {\n  if (node.data && node.data.estree && state.evaluater) {\n    // Assume result is a child.\n    return /** @type {Child | undefined} */ (\n      state.evaluater.evaluateProgram(node.data.estree)\n    )\n  }\n\n  crashEstree(state, node.position)\n}\n\n/**\n * Handle MDX JSX.\n *\n * @param {State} state\n *   Info passed around.\n * @param {MdxJsxFlowElement | MdxJsxTextElement} node\n *   Current node.\n * @param {string | undefined} key\n *   Key.\n * @returns {Child | undefined}\n *   Child, optional.\n */\nfunction mdxJsxElement(state, node, key) {\n  const parentSchema = state.schema\n  let schema = parentSchema\n\n  if (node.name === 'svg' && parentSchema.space === 'html') {\n    schema = svg\n    state.schema = schema\n  }\n\n  state.ancestors.push(node)\n\n  const type =\n    node.name === null\n      ? state.Fragment\n      : findComponentFromName(state, node.name, true)\n  const props = createJsxElementProps(state, node)\n  const children = createChildren(state, node)\n\n  addNode(state, props, type, node)\n  addChildren(props, children)\n\n  // Restore.\n  state.ancestors.pop()\n  state.schema = parentSchema\n\n  return state.create(node, type, props, key)\n}\n\n/**\n * Handle root.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Root} node\n *   Current node.\n * @param {string | undefined} key\n *   Key.\n * @returns {Child | undefined}\n *   Child, optional.\n */\nfunction root(state, node, key) {\n  /** @type {Props} */\n  const props = {}\n\n  addChildren(props, createChildren(state, node))\n\n  return state.create(node, state.Fragment, props, key)\n}\n\n/**\n * Handle text.\n *\n * @param {State} _\n *   Info passed around.\n * @param {Text} node\n *   Current node.\n * @returns {Child | undefined}\n *   Child, optional.\n */\nfunction text(_, node) {\n  return node.value\n}\n\n/**\n * Add `node` to props.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Props} props\n *   Props.\n * @param {unknown} type\n *   Type.\n * @param {Element | MdxJsxFlowElement | MdxJsxTextElement} node\n *   Node.\n * @returns {undefined}\n *   Nothing.\n */\nfunction addNode(state, props, type, node) {\n  // If this is swapped out for a component:\n  if (typeof type !== 'string' && type !== state.Fragment && state.passNode) {\n    props.node = node\n  }\n}\n\n/**\n * Add children to props.\n *\n * @param {Props} props\n *   Props.\n * @param {Array<Child>} children\n *   Children.\n * @returns {undefined}\n *   Nothing.\n */\nfunction addChildren(props, children) {\n  if (children.length > 0) {\n    const value = children.length > 1 ? children : children[0]\n\n    if (value) {\n      props.children = value\n    }\n  }\n}\n\n/**\n * @param {string | undefined} _\n *   Path to file.\n * @param {Jsx} jsx\n *   Dynamic.\n * @param {Jsx} jsxs\n *   Static.\n * @returns {Create}\n *   Create a production element.\n */\nfunction productionCreate(_, jsx, jsxs) {\n  return create\n  /** @type {Create} */\n  function create(_, type, props, key) {\n    // Only an array when there are 2 or more children.\n    const isStaticChildren = Array.isArray(props.children)\n    const fn = isStaticChildren ? jsxs : jsx\n    return key ? fn(type, props, key) : fn(type, props)\n  }\n}\n\n/**\n * @param {string | undefined} filePath\n *   Path to file.\n * @param {JsxDev} jsxDEV\n *   Development.\n * @returns {Create}\n *   Create a development element.\n */\nfunction developmentCreate(filePath, jsxDEV) {\n  return create\n  /** @type {Create} */\n  function create(node, type, props, key) {\n    // Only an array when there are 2 or more children.\n    const isStaticChildren = Array.isArray(props.children)\n    const point = pointStart(node)\n    return jsxDEV(\n      type,\n      props,\n      key,\n      isStaticChildren,\n      {\n        columnNumber: point ? point.column - 1 : undefined,\n        fileName: filePath,\n        lineNumber: point ? point.line : undefined\n      },\n      undefined\n    )\n  }\n}\n\n/**\n * Create props from an element.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Element} node\n *   Current element.\n * @returns {Props}\n *   Props.\n */\nfunction createElementProps(state, node) {\n  /** @type {Props} */\n  const props = {}\n  /** @type {string | undefined} */\n  let alignValue\n  /** @type {string} */\n  let prop\n\n  for (prop in node.properties) {\n    if (prop !== 'children' && own.call(node.properties, prop)) {\n      const result = createProperty(state, prop, node.properties[prop])\n\n      if (result) {\n        const [key, value] = result\n\n        if (\n          state.tableCellAlignToStyle &&\n          key === 'align' &&\n          typeof value === 'string' &&\n          tableCellElement.has(node.tagName)\n        ) {\n          alignValue = value\n        } else {\n          props[key] = value\n        }\n      }\n    }\n  }\n\n  if (alignValue) {\n    // Assume style is an object.\n    const style = /** @type {Style} */ (props.style || (props.style = {}))\n    style[state.stylePropertyNameCase === 'css' ? 'text-align' : 'textAlign'] =\n      alignValue\n  }\n\n  return props\n}\n\n/**\n * Create props from a JSX element.\n *\n * @param {State} state\n *   Info passed around.\n * @param {MdxJsxFlowElement | MdxJsxTextElement} node\n *   Current JSX element.\n * @returns {Props}\n *   Props.\n */\nfunction createJsxElementProps(state, node) {\n  /** @type {Props} */\n  const props = {}\n\n  for (const attribute of node.attributes) {\n    if (attribute.type === 'mdxJsxExpressionAttribute') {\n      if (attribute.data && attribute.data.estree && state.evaluater) {\n        const program = attribute.data.estree\n        const expression = program.body[0]\n        assert(expression.type === 'ExpressionStatement')\n        const objectExpression = expression.expression\n        assert(objectExpression.type === 'ObjectExpression')\n        const property = objectExpression.properties[0]\n        assert(property.type === 'SpreadElement')\n\n        Object.assign(\n          props,\n          state.evaluater.evaluateExpression(property.argument)\n        )\n      } else {\n        crashEstree(state, node.position)\n      }\n    } else {\n      // For JSX, the author is responsible of passing in the correct values.\n      const name = attribute.name\n      /** @type {unknown} */\n      let value\n\n      if (attribute.value && typeof attribute.value === 'object') {\n        if (\n          attribute.value.data &&\n          attribute.value.data.estree &&\n          state.evaluater\n        ) {\n          const program = attribute.value.data.estree\n          const expression = program.body[0]\n          assert(expression.type === 'ExpressionStatement')\n          value = state.evaluater.evaluateExpression(expression.expression)\n        } else {\n          crashEstree(state, node.position)\n        }\n      } else {\n        value = attribute.value === null ? true : attribute.value\n      }\n\n      // Assume a prop.\n      props[name] = /** @type {Props[keyof Props]} */ (value)\n    }\n  }\n\n  return props\n}\n\n/**\n * Create children.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Parents} node\n *   Current element.\n * @returns {Array<Child>}\n *   Children.\n */\nfunction createChildren(state, node) {\n  /** @type {Array<Child>} */\n  const children = []\n  let index = -1\n  /** @type {Map<string, number>} */\n  // Note: test this when Solid doesn’t want to merge my upcoming PR.\n  /* c8 ignore next */\n  const countsByName = state.passKeys ? new Map() : emptyMap\n\n  while (++index < node.children.length) {\n    const child = node.children[index]\n    /** @type {string | undefined} */\n    let key\n\n    if (state.passKeys) {\n      const name =\n        child.type === 'element'\n          ? child.tagName\n          : child.type === 'mdxJsxFlowElement' ||\n              child.type === 'mdxJsxTextElement'\n            ? child.name\n            : undefined\n\n      if (name) {\n        const count = countsByName.get(name) || 0\n        key = name + '-' + count\n        countsByName.set(name, count + 1)\n      }\n    }\n\n    const result = one(state, child, key)\n    if (result !== undefined) children.push(result)\n  }\n\n  return children\n}\n\n/**\n * Handle a property.\n *\n * @param {State} state\n *   Info passed around.\n * @param {string} prop\n *   Key.\n * @param {Array<number | string> | boolean | number | string | null | undefined} value\n *   hast property value.\n * @returns {Field | undefined}\n *   Field for runtime, optional.\n */\nfunction createProperty(state, prop, value) {\n  const info = find(state.schema, prop)\n\n  // Ignore nullish and `NaN` values.\n  if (\n    value === null ||\n    value === undefined ||\n    (typeof value === 'number' && Number.isNaN(value))\n  ) {\n    return\n  }\n\n  if (Array.isArray(value)) {\n    // Accept `array`.\n    // Most props are space-separated.\n    value = info.commaSeparated ? commas(value) : spaces(value)\n  }\n\n  // React only accepts `style` as object.\n  if (info.property === 'style') {\n    let styleObject =\n      typeof value === 'object' ? value : parseStyle(state, String(value))\n\n    if (state.stylePropertyNameCase === 'css') {\n      styleObject = transformStylesToCssCasing(styleObject)\n    }\n\n    return ['style', styleObject]\n  }\n\n  return [\n    state.elementAttributeNameCase === 'react' && info.space\n      ? hastToReact[info.property] || info.property\n      : info.attribute,\n    value\n  ]\n}\n\n/**\n * Parse a CSS declaration to an object.\n *\n * @param {State} state\n *   Info passed around.\n * @param {string} value\n *   CSS declarations.\n * @returns {Style}\n *   Properties.\n * @throws\n *   Throws `VFileMessage` when CSS cannot be parsed.\n */\nfunction parseStyle(state, value) {\n  /** @type {Style} */\n  const result = {}\n\n  try {\n    // @ts-expect-error: `style-to-object` types are broken.\n    styleToObject(value, replacer)\n  } catch (error) {\n    if (!state.ignoreInvalidStyle) {\n      const cause = /** @type {Error} */ (error)\n      const message = new VFileMessage('Cannot parse `style` attribute', {\n        ancestors: state.ancestors,\n        cause,\n        ruleId: 'style',\n        source: 'hast-util-to-jsx-runtime'\n      })\n      message.file = state.filePath || undefined\n      message.url = docs + '#cannot-parse-style-attribute'\n\n      throw message\n    }\n  }\n\n  return result\n\n  /**\n   * Add a CSS property (normal, so with dashes) to `result` as a DOM CSS\n   * property.\n   *\n   * @param {string} name\n   *   Key.\n   * @param {string} value\n   *   Value\n   * @returns {undefined}\n   *   Nothing.\n   */\n  function replacer(name, value) {\n    let key = name\n\n    if (key.slice(0, 2) !== '--') {\n      if (key.slice(0, 4) === '-ms-') key = 'ms-' + key.slice(4)\n      key = key.replace(dashSomething, toCamel)\n    }\n\n    result[key] = value\n  }\n}\n\n/**\n * Create a JSX name from a string.\n *\n * @param {State} state\n *   To do.\n * @param {string} name\n *   Name.\n * @param {boolean} allowExpression\n *   Allow member expressions and identifiers.\n * @returns {unknown}\n *   To do.\n */\nfunction findComponentFromName(state, name, allowExpression) {\n  /** @type {Identifier | Literal | MemberExpression} */\n  let result\n\n  if (!allowExpression) {\n    result = {type: 'Literal', value: name}\n  } else if (name.includes('.')) {\n    const identifiers = name.split('.')\n    let index = -1\n    /** @type {Identifier | Literal | MemberExpression | undefined} */\n    let node\n\n    while (++index < identifiers.length) {\n      /** @type {Identifier | Literal} */\n      const prop = isIdentifierName(identifiers[index])\n        ? {type: 'Identifier', name: identifiers[index]}\n        : {type: 'Literal', value: identifiers[index]}\n      node = node\n        ? {\n            type: 'MemberExpression',\n            object: node,\n            property: prop,\n            computed: Boolean(index && prop.type === 'Literal'),\n            optional: false\n          }\n        : prop\n    }\n\n    assert(node, 'always a result')\n    result = node\n  } else {\n    result =\n      isIdentifierName(name) && !/^[a-z]/.test(name)\n        ? {type: 'Identifier', name}\n        : {type: 'Literal', value: name}\n  }\n\n  // Only literals can be passed in `components` currently.\n  // No identifiers / member expressions.\n  if (result.type === 'Literal') {\n    const name = /** @type {keyof JSX.IntrinsicElements} */ (result.value)\n\n    return own.call(state.components, name) ? state.components[name] : name\n  }\n\n  // Assume component.\n  if (state.evaluater) {\n    return state.evaluater.evaluateExpression(result)\n  }\n\n  crashEstree(state)\n}\n\n/**\n * @param {State} state\n * @param {Position | undefined} [place]\n * @returns {never}\n */\nfunction crashEstree(state, place) {\n  const message = new VFileMessage(\n    'Cannot handle MDX estrees without `createEvaluater`',\n    {\n      ancestors: state.ancestors,\n      place,\n      ruleId: 'mdx-estree',\n      source: 'hast-util-to-jsx-runtime'\n    }\n  )\n  message.file = state.filePath || undefined\n  message.url = docs + '#cannot-handle-mdx-estrees-without-createevaluater'\n\n  throw message\n}\n\n/**\n * Transform a DOM casing style object to a CSS casing style object.\n *\n * @param {Style} domCasing\n * @returns {Style}\n */\nfunction transformStylesToCssCasing(domCasing) {\n  /** @type {Style} */\n  const cssCasing = {}\n  /** @type {string} */\n  let from\n\n  for (from in domCasing) {\n    if (own.call(domCasing, from)) {\n      cssCasing[transformStyleToCssCasing(from)] = domCasing[from]\n    }\n  }\n\n  return cssCasing\n}\n\n/**\n * Transform a DOM casing style field to a CSS casing style field.\n *\n * @param {string} from\n * @returns {string}\n */\nfunction transformStyleToCssCasing(from) {\n  let to = from.replace(cap, toDash)\n  // Handle `ms-xxx` -> `-ms-xxx`.\n  if (to.slice(0, 3) === 'ms-') to = '-' + to\n  return to\n}\n\n/**\n * Make `$1` capitalized.\n *\n * @param {string} _\n *   Whatever.\n * @param {string} $1\n *   Single ASCII alphabetical.\n * @returns {string}\n *   Capitalized `$1`.\n */\nfunction toCamel(_, $1) {\n  return $1.toUpperCase()\n}\n\n/**\n * Make `$0` dash cased.\n *\n * @param {string} $0\n *   Capitalized ASCII leter.\n * @returns {string}\n *   Dash and lower letter.\n */\nfunction toDash($0) {\n  return '-' + $0.toLowerCase()\n}\n","/**\n * @typedef Options\n *   Configuration for `stringify`.\n * @property {boolean} [padLeft=true]\n *   Whether to pad a space before a token.\n * @property {boolean} [padRight=false]\n *   Whether to pad a space after a token.\n */\n\n/**\n * @typedef {Options} StringifyOptions\n *   Please use `StringifyOptions` instead.\n */\n\n/**\n * Parse comma-separated tokens to an array.\n *\n * @param {string} value\n *   Comma-separated tokens.\n * @returns {Array<string>}\n *   List of tokens.\n */\nexport function parse(value) {\n  /** @type {Array<string>} */\n  const tokens = []\n  const input = String(value || '')\n  let index = input.indexOf(',')\n  let start = 0\n  /** @type {boolean} */\n  let end = false\n\n  while (!end) {\n    if (index === -1) {\n      index = input.length\n      end = true\n    }\n\n    const token = input.slice(start, index).trim()\n\n    if (token || !end) {\n      tokens.push(token)\n    }\n\n    start = index + 1\n    index = input.indexOf(',', start)\n  }\n\n  return tokens\n}\n\n/**\n * Serialize an array of strings or numbers to comma-separated tokens.\n *\n * @param {Array<string|number>} values\n *   List of tokens.\n * @param {Options} [options]\n *   Configuration for `stringify` (optional).\n * @returns {string}\n *   Comma-separated tokens.\n */\nexport function stringify(values, options) {\n  const settings = options || {}\n\n  // Ensure the last empty entry is seen.\n  const input = values[values.length - 1] === '' ? [...values, ''] : values\n\n  return input\n    .join(\n      (settings.padRight ? ' ' : '') +\n        ',' +\n        (settings.padLeft === false ? '' : ' ')\n    )\n    .trim()\n}\n","/**\n * Parse space-separated tokens to an array of strings.\n *\n * @param {string} value\n *   Space-separated tokens.\n * @returns {Array<string>}\n *   List of tokens.\n */\nexport function parse(value) {\n  const input = String(value || '').trim()\n  return input ? input.split(/[ \\t\\n\\r\\f]+/g) : []\n}\n\n/**\n * Serialize an array of strings as space separated-tokens.\n *\n * @param {Array<string|number>} values\n *   List of tokens.\n * @returns {string}\n *   Space-separated tokens.\n */\nexport function stringify(values) {\n  return values.join(' ').trim()\n}\n","/**\n * HTML URL properties.\n *\n * Each key is a property name and each value is a list of tag names it applies\n * to or `null` if it applies to all elements.\n *\n * @type {Record<string, Array<string> | null>}\n */\nexport const urlAttributes = {\n  action: ['form'],\n  cite: ['blockquote', 'del', 'ins', 'q'],\n  data: ['object'],\n  formAction: ['button', 'input'],\n  href: ['a', 'area', 'base', 'link'],\n  icon: ['menuitem'],\n  itemId: null,\n  manifest: ['html'],\n  ping: ['a', 'area'],\n  poster: ['video'],\n  src: [\n    'audio',\n    'embed',\n    'iframe',\n    'img',\n    'input',\n    'script',\n    'source',\n    'track',\n    'video'\n  ]\n}\n","/**\n * @typedef {import('mdast').Nodes} Nodes\n *\n * @typedef Options\n *   Configuration (optional).\n * @property {boolean | null | undefined} [includeImageAlt=true]\n *   Whether to use `alt` for `image`s (default: `true`).\n * @property {boolean | null | undefined} [includeHtml=true]\n *   Whether to use `value` of HTML (default: `true`).\n */\n\n/** @type {Options} */\nconst emptyOptions = {}\n\n/**\n * Get the text content of a node or list of nodes.\n *\n * Prefers the node’s plain-text fields, otherwise serializes its children,\n * and if the given value is an array, serialize the nodes in it.\n *\n * @param {unknown} [value]\n *   Thing to serialize, typically `Node`.\n * @param {Options | null | undefined} [options]\n *   Configuration (optional).\n * @returns {string}\n *   Serialized `value`.\n */\nexport function toString(value, options) {\n  const settings = options || emptyOptions\n  const includeImageAlt =\n    typeof settings.includeImageAlt === 'boolean'\n      ? settings.includeImageAlt\n      : true\n  const includeHtml =\n    typeof settings.includeHtml === 'boolean' ? settings.includeHtml : true\n\n  return one(value, includeImageAlt, includeHtml)\n}\n\n/**\n * One node or several nodes.\n *\n * @param {unknown} value\n *   Thing to serialize.\n * @param {boolean} includeImageAlt\n *   Include image `alt`s.\n * @param {boolean} includeHtml\n *   Include HTML.\n * @returns {string}\n *   Serialized node.\n */\nfunction one(value, includeImageAlt, includeHtml) {\n  if (node(value)) {\n    if ('value' in value) {\n      return value.type === 'html' && !includeHtml ? '' : value.value\n    }\n\n    if (includeImageAlt && 'alt' in value && value.alt) {\n      return value.alt\n    }\n\n    if ('children' in value) {\n      return all(value.children, includeImageAlt, includeHtml)\n    }\n  }\n\n  if (Array.isArray(value)) {\n    return all(value, includeImageAlt, includeHtml)\n  }\n\n  return ''\n}\n\n/**\n * Serialize a list of nodes.\n *\n * @param {Array<unknown>} values\n *   Thing to serialize.\n * @param {boolean} includeImageAlt\n *   Include image `alt`s.\n * @param {boolean} includeHtml\n *   Include HTML.\n * @returns {string}\n *   Serialized nodes.\n */\nfunction all(values, includeImageAlt, includeHtml) {\n  /** @type {Array<string>} */\n  const result = []\n  let index = -1\n\n  while (++index < values.length) {\n    result[index] = one(values[index], includeImageAlt, includeHtml)\n  }\n\n  return result.join('')\n}\n\n/**\n * Check if `value` looks like a node.\n *\n * @param {unknown} value\n *   Thing.\n * @returns {value is Nodes}\n *   Whether `value` is a node.\n */\nfunction node(value) {\n  return Boolean(value && typeof value === 'object')\n}\n","/**\n * Like `Array#splice`, but smarter for giant arrays.\n *\n * `Array#splice` takes all items to be inserted as individual argument which\n * causes a stack overflow in V8 when trying to insert 100k items for instance.\n *\n * Otherwise, this does not return the removed items, and takes `items` as an\n * array instead of rest parameters.\n *\n * @template {unknown} T\n *   Item type.\n * @param {Array<T>} list\n *   List to operate on.\n * @param {number} start\n *   Index to remove/insert at (can be negative).\n * @param {number} remove\n *   Number of items to remove.\n * @param {Array<T>} items\n *   Items to inject into `list`.\n * @returns {undefined}\n *   Nothing.\n */\nexport function splice(list, start, remove, items) {\n  const end = list.length\n  let chunkStart = 0\n  /** @type {Array<unknown>} */\n  let parameters\n\n  // Make start between zero and `end` (included).\n  if (start < 0) {\n    start = -start > end ? 0 : end + start\n  } else {\n    start = start > end ? end : start\n  }\n  remove = remove > 0 ? remove : 0\n\n  // No need to chunk the items if there’s only a couple (10k) items.\n  if (items.length < 10000) {\n    parameters = Array.from(items)\n    parameters.unshift(start, remove)\n    // @ts-expect-error Hush, it’s fine.\n    list.splice(...parameters)\n  } else {\n    // Delete `remove` items starting from `start`\n    if (remove) list.splice(start, remove)\n\n    // Insert the items in chunks to not cause stack overflows.\n    while (chunkStart < items.length) {\n      parameters = items.slice(chunkStart, chunkStart + 10000)\n      parameters.unshift(start, 0)\n      // @ts-expect-error Hush, it’s fine.\n      list.splice(...parameters)\n      chunkStart += 10000\n      start += 10000\n    }\n  }\n}\n\n/**\n * Append `items` (an array) at the end of `list` (another array).\n * When `list` was empty, returns `items` instead.\n *\n * This prevents a potentially expensive operation when `list` is empty,\n * and adds items in batches to prevent V8 from hanging.\n *\n * @template {unknown} T\n *   Item type.\n * @param {Array<T>} list\n *   List to operate on.\n * @param {Array<T>} items\n *   Items to add to `list`.\n * @returns {Array<T>}\n *   Either `list` or `items`.\n */\nexport function push(list, items) {\n  if (list.length > 0) {\n    splice(list, list.length, 0, items)\n    return list\n  }\n  return items\n}\n","/**\n * @typedef {import('micromark-util-types').Chunk} Chunk\n * @typedef {import('micromark-util-types').Event} Event\n * @typedef {import('micromark-util-types').Token} Token\n */\n\nimport {splice} from 'micromark-util-chunked'\n/**\n * Tokenize subcontent.\n *\n * @param {Array<Event>} events\n *   List of events.\n * @returns {boolean}\n *   Whether subtokens were found.\n */ // eslint-disable-next-line complexity\nexport function subtokenize(events) {\n  /** @type {Record<string, number>} */\n  const jumps = {}\n  let index = -1\n  /** @type {Event} */\n  let event\n  /** @type {number | undefined} */\n  let lineIndex\n  /** @type {number} */\n  let otherIndex\n  /** @type {Event} */\n  let otherEvent\n  /** @type {Array<Event>} */\n  let parameters\n  /** @type {Array<Event>} */\n  let subevents\n  /** @type {boolean | undefined} */\n  let more\n  while (++index < events.length) {\n    while (index in jumps) {\n      index = jumps[index]\n    }\n    event = events[index]\n\n    // Add a hook for the GFM tasklist extension, which needs to know if text\n    // is in the first content of a list item.\n    if (\n      index &&\n      event[1].type === 'chunkFlow' &&\n      events[index - 1][1].type === 'listItemPrefix'\n    ) {\n      subevents = event[1]._tokenizer.events\n      otherIndex = 0\n      if (\n        otherIndex < subevents.length &&\n        subevents[otherIndex][1].type === 'lineEndingBlank'\n      ) {\n        otherIndex += 2\n      }\n      if (\n        otherIndex < subevents.length &&\n        subevents[otherIndex][1].type === 'content'\n      ) {\n        while (++otherIndex < subevents.length) {\n          if (subevents[otherIndex][1].type === 'content') {\n            break\n          }\n          if (subevents[otherIndex][1].type === 'chunkText') {\n            subevents[otherIndex][1]._isInFirstContentOfListItem = true\n            otherIndex++\n          }\n        }\n      }\n    }\n\n    // Enter.\n    if (event[0] === 'enter') {\n      if (event[1].contentType) {\n        Object.assign(jumps, subcontent(events, index))\n        index = jumps[index]\n        more = true\n      }\n    }\n    // Exit.\n    else if (event[1]._container) {\n      otherIndex = index\n      lineIndex = undefined\n      while (otherIndex--) {\n        otherEvent = events[otherIndex]\n        if (\n          otherEvent[1].type === 'lineEnding' ||\n          otherEvent[1].type === 'lineEndingBlank'\n        ) {\n          if (otherEvent[0] === 'enter') {\n            if (lineIndex) {\n              events[lineIndex][1].type = 'lineEndingBlank'\n            }\n            otherEvent[1].type = 'lineEnding'\n            lineIndex = otherIndex\n          }\n        } else {\n          break\n        }\n      }\n      if (lineIndex) {\n        // Fix position.\n        event[1].end = Object.assign({}, events[lineIndex][1].start)\n\n        // Switch container exit w/ line endings.\n        parameters = events.slice(lineIndex, index)\n        parameters.unshift(event)\n        splice(events, lineIndex, index - lineIndex + 1, parameters)\n      }\n    }\n  }\n  return !more\n}\n\n/**\n * Tokenize embedded tokens.\n *\n * @param {Array<Event>} events\n * @param {number} eventIndex\n * @returns {Record<string, number>}\n */\nfunction subcontent(events, eventIndex) {\n  const token = events[eventIndex][1]\n  const context = events[eventIndex][2]\n  let startPosition = eventIndex - 1\n  /** @type {Array<number>} */\n  const startPositions = []\n  const tokenizer =\n    token._tokenizer || context.parser[token.contentType](token.start)\n  const childEvents = tokenizer.events\n  /** @type {Array<[number, number]>} */\n  const jumps = []\n  /** @type {Record<string, number>} */\n  const gaps = {}\n  /** @type {Array<Chunk>} */\n  let stream\n  /** @type {Token | undefined} */\n  let previous\n  let index = -1\n  /** @type {Token | undefined} */\n  let current = token\n  let adjust = 0\n  let start = 0\n  const breaks = [start]\n\n  // Loop forward through the linked tokens to pass them in order to the\n  // subtokenizer.\n  while (current) {\n    // Find the position of the event for this token.\n    while (events[++startPosition][1] !== current) {\n      // Empty.\n    }\n    startPositions.push(startPosition)\n    if (!current._tokenizer) {\n      stream = context.sliceStream(current)\n      if (!current.next) {\n        stream.push(null)\n      }\n      if (previous) {\n        tokenizer.defineSkip(current.start)\n      }\n      if (current._isInFirstContentOfListItem) {\n        tokenizer._gfmTasklistFirstContentOfListItem = true\n      }\n      tokenizer.write(stream)\n      if (current._isInFirstContentOfListItem) {\n        tokenizer._gfmTasklistFirstContentOfListItem = undefined\n      }\n    }\n\n    // Unravel the next token.\n    previous = current\n    current = current.next\n  }\n\n  // Now, loop back through all events (and linked tokens), to figure out which\n  // parts belong where.\n  current = token\n  while (++index < childEvents.length) {\n    if (\n      // Find a void token that includes a break.\n      childEvents[index][0] === 'exit' &&\n      childEvents[index - 1][0] === 'enter' &&\n      childEvents[index][1].type === childEvents[index - 1][1].type &&\n      childEvents[index][1].start.line !== childEvents[index][1].end.line\n    ) {\n      start = index + 1\n      breaks.push(start)\n      // Help GC.\n      current._tokenizer = undefined\n      current.previous = undefined\n      current = current.next\n    }\n  }\n\n  // Help GC.\n  tokenizer.events = []\n\n  // If there’s one more token (which is the cases for lines that end in an\n  // EOF), that’s perfect: the last point we found starts it.\n  // If there isn’t then make sure any remaining content is added to it.\n  if (current) {\n    // Help GC.\n    current._tokenizer = undefined\n    current.previous = undefined\n  } else {\n    breaks.pop()\n  }\n\n  // Now splice the events from the subtokenizer into the current events,\n  // moving back to front so that splice indices aren’t affected.\n  index = breaks.length\n  while (index--) {\n    const slice = childEvents.slice(breaks[index], breaks[index + 1])\n    const start = startPositions.pop()\n    jumps.unshift([start, start + slice.length - 1])\n    splice(events, start, 2, slice)\n  }\n  index = -1\n  while (++index < jumps.length) {\n    gaps[adjust + jumps[index][0]] = adjust + jumps[index][1]\n    adjust += jumps[index][1] - jumps[index][0] - 1\n  }\n  return gaps\n}\n","/**\n * @typedef {import('micromark-util-types').Extension} Extension\n * @typedef {import('micromark-util-types').Handles} Handles\n * @typedef {import('micromark-util-types').HtmlExtension} HtmlExtension\n * @typedef {import('micromark-util-types').NormalizedExtension} NormalizedExtension\n */\n\nimport {splice} from 'micromark-util-chunked'\n\nconst hasOwnProperty = {}.hasOwnProperty\n\n/**\n * Combine multiple syntax extensions into one.\n *\n * @param {Array<Extension>} extensions\n *   List of syntax extensions.\n * @returns {NormalizedExtension}\n *   A single combined extension.\n */\nexport function combineExtensions(extensions) {\n  /** @type {NormalizedExtension} */\n  const all = {}\n  let index = -1\n\n  while (++index < extensions.length) {\n    syntaxExtension(all, extensions[index])\n  }\n\n  return all\n}\n\n/**\n * Merge `extension` into `all`.\n *\n * @param {NormalizedExtension} all\n *   Extension to merge into.\n * @param {Extension} extension\n *   Extension to merge.\n * @returns {undefined}\n */\nfunction syntaxExtension(all, extension) {\n  /** @type {keyof Extension} */\n  let hook\n\n  for (hook in extension) {\n    const maybe = hasOwnProperty.call(all, hook) ? all[hook] : undefined\n    /** @type {Record<string, unknown>} */\n    const left = maybe || (all[hook] = {})\n    /** @type {Record<string, unknown> | undefined} */\n    const right = extension[hook]\n    /** @type {string} */\n    let code\n\n    if (right) {\n      for (code in right) {\n        if (!hasOwnProperty.call(left, code)) left[code] = []\n        const value = right[code]\n        constructs(\n          // @ts-expect-error Looks like a list.\n          left[code],\n          Array.isArray(value) ? value : value ? [value] : []\n        )\n      }\n    }\n  }\n}\n\n/**\n * Merge `list` into `existing` (both lists of constructs).\n * Mutates `existing`.\n *\n * @param {Array<unknown>} existing\n * @param {Array<unknown>} list\n * @returns {undefined}\n */\nfunction constructs(existing, list) {\n  let index = -1\n  /** @type {Array<unknown>} */\n  const before = []\n\n  while (++index < list.length) {\n    // @ts-expect-error Looks like an object.\n    ;(list[index].add === 'after' ? existing : before).push(list[index])\n  }\n\n  splice(existing, 0, 0, before)\n}\n\n/**\n * Combine multiple HTML extensions into one.\n *\n * @param {Array<HtmlExtension>} htmlExtensions\n *   List of HTML extensions.\n * @returns {HtmlExtension}\n *   A single combined HTML extension.\n */\nexport function combineHtmlExtensions(htmlExtensions) {\n  /** @type {HtmlExtension} */\n  const handlers = {}\n  let index = -1\n\n  while (++index < htmlExtensions.length) {\n    htmlExtension(handlers, htmlExtensions[index])\n  }\n\n  return handlers\n}\n\n/**\n * Merge `extension` into `all`.\n *\n * @param {HtmlExtension} all\n *   Extension to merge into.\n * @param {HtmlExtension} extension\n *   Extension to merge.\n * @returns {undefined}\n */\nfunction htmlExtension(all, extension) {\n  /** @type {keyof HtmlExtension} */\n  let hook\n\n  for (hook in extension) {\n    const maybe = hasOwnProperty.call(all, hook) ? all[hook] : undefined\n    const left = maybe || (all[hook] = {})\n    const right = extension[hook]\n    /** @type {keyof Handles} */\n    let type\n\n    if (right) {\n      for (type in right) {\n        // @ts-expect-error assume document vs regular handler are managed correctly.\n        left[type] = right[type]\n      }\n    }\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Code} Code\n */\n\n/**\n * Check whether the character code represents an ASCII alpha (`a` through `z`,\n * case insensitive).\n *\n * An **ASCII alpha** is an ASCII upper alpha or ASCII lower alpha.\n *\n * An **ASCII upper alpha** is a character in the inclusive range U+0041 (`A`)\n * to U+005A (`Z`).\n *\n * An **ASCII lower alpha** is a character in the inclusive range U+0061 (`a`)\n * to U+007A (`z`).\n *\n * @param code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport const asciiAlpha = regexCheck(/[A-Za-z]/);\n\n/**\n * Check whether the character code represents an ASCII alphanumeric (`a`\n * through `z`, case insensitive, or `0` through `9`).\n *\n * An **ASCII alphanumeric** is an ASCII digit (see `asciiDigit`) or ASCII alpha\n * (see `asciiAlpha`).\n *\n * @param code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport const asciiAlphanumeric = regexCheck(/[\\dA-Za-z]/);\n\n/**\n * Check whether the character code represents an ASCII atext.\n *\n * atext is an ASCII alphanumeric (see `asciiAlphanumeric`), or a character in\n * the inclusive ranges U+0023 NUMBER SIGN (`#`) to U+0027 APOSTROPHE (`'`),\n * U+002A ASTERISK (`*`), U+002B PLUS SIGN (`+`), U+002D DASH (`-`), U+002F\n * SLASH (`/`), U+003D EQUALS TO (`=`), U+003F QUESTION MARK (`?`), U+005E\n * CARET (`^`) to U+0060 GRAVE ACCENT (`` ` ``), or U+007B LEFT CURLY BRACE\n * (`{`) to U+007E TILDE (`~`).\n *\n * See:\n * **\\[RFC5322]**:\n * [Internet Message Format](https://tools.ietf.org/html/rfc5322).\n * P. Resnick.\n * IETF.\n *\n * @param code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport const asciiAtext = regexCheck(/[#-'*+\\--9=?A-Z^-~]/);\n\n/**\n * Check whether a character code is an ASCII control character.\n *\n * An **ASCII control** is a character in the inclusive range U+0000 NULL (NUL)\n * to U+001F (US), or U+007F (DEL).\n *\n * @param {Code} code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport function asciiControl(code) {\n  return (\n    // Special whitespace codes (which have negative values), C0 and Control\n    // character DEL\n    code !== null && (code < 32 || code === 127)\n  );\n}\n\n/**\n * Check whether the character code represents an ASCII digit (`0` through `9`).\n *\n * An **ASCII digit** is a character in the inclusive range U+0030 (`0`) to\n * U+0039 (`9`).\n *\n * @param code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport const asciiDigit = regexCheck(/\\d/);\n\n/**\n * Check whether the character code represents an ASCII hex digit (`a` through\n * `f`, case insensitive, or `0` through `9`).\n *\n * An **ASCII hex digit** is an ASCII digit (see `asciiDigit`), ASCII upper hex\n * digit, or an ASCII lower hex digit.\n *\n * An **ASCII upper hex digit** is a character in the inclusive range U+0041\n * (`A`) to U+0046 (`F`).\n *\n * An **ASCII lower hex digit** is a character in the inclusive range U+0061\n * (`a`) to U+0066 (`f`).\n *\n * @param code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport const asciiHexDigit = regexCheck(/[\\dA-Fa-f]/);\n\n/**\n * Check whether the character code represents ASCII punctuation.\n *\n * An **ASCII punctuation** is a character in the inclusive ranges U+0021\n * EXCLAMATION MARK (`!`) to U+002F SLASH (`/`), U+003A COLON (`:`) to U+0040 AT\n * SIGN (`@`), U+005B LEFT SQUARE BRACKET (`[`) to U+0060 GRAVE ACCENT\n * (`` ` ``), or U+007B LEFT CURLY BRACE (`{`) to U+007E TILDE (`~`).\n *\n * @param code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport const asciiPunctuation = regexCheck(/[!-/:-@[-`{-~]/);\n\n/**\n * Check whether a character code is a markdown line ending.\n *\n * A **markdown line ending** is the virtual characters M-0003 CARRIAGE RETURN\n * LINE FEED (CRLF), M-0004 LINE FEED (LF) and M-0005 CARRIAGE RETURN (CR).\n *\n * In micromark, the actual character U+000A LINE FEED (LF) and U+000D CARRIAGE\n * RETURN (CR) are replaced by these virtual characters depending on whether\n * they occurred together.\n *\n * @param {Code} code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport function markdownLineEnding(code) {\n  return code !== null && code < -2;\n}\n\n/**\n * Check whether a character code is a markdown line ending (see\n * `markdownLineEnding`) or markdown space (see `markdownSpace`).\n *\n * @param {Code} code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport function markdownLineEndingOrSpace(code) {\n  return code !== null && (code < 0 || code === 32);\n}\n\n/**\n * Check whether a character code is a markdown space.\n *\n * A **markdown space** is the concrete character U+0020 SPACE (SP) and the\n * virtual characters M-0001 VIRTUAL SPACE (VS) and M-0002 HORIZONTAL TAB (HT).\n *\n * In micromark, the actual character U+0009 CHARACTER TABULATION (HT) is\n * replaced by one M-0002 HORIZONTAL TAB (HT) and between 0 and 3 M-0001 VIRTUAL\n * SPACE (VS) characters, depending on the column at which the tab occurred.\n *\n * @param {Code} code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport function markdownSpace(code) {\n  return code === -2 || code === -1 || code === 32;\n}\n\n// Size note: removing ASCII from the regex and using `asciiPunctuation` here\n// In fact adds to the bundle size.\n/**\n * Check whether the character code represents Unicode punctuation.\n *\n * A **Unicode punctuation** is a character in the Unicode `Pc` (Punctuation,\n * Connector), `Pd` (Punctuation, Dash), `Pe` (Punctuation, Close), `Pf`\n * (Punctuation, Final quote), `Pi` (Punctuation, Initial quote), `Po`\n * (Punctuation, Other), or `Ps` (Punctuation, Open) categories, or an ASCII\n * punctuation (see `asciiPunctuation`).\n *\n * See:\n * **\\[UNICODE]**:\n * [The Unicode Standard](https://www.unicode.org/versions/).\n * Unicode Consortium.\n *\n * @param code\n *   Code.\n * @returns\n *   Whether it matches.\n */\nexport const unicodePunctuation = regexCheck(/\\p{P}|\\p{S}/u);\n\n/**\n * Check whether the character code represents Unicode whitespace.\n *\n * Note that this does handle micromark specific markdown whitespace characters.\n * See `markdownLineEndingOrSpace` to check that.\n *\n * A **Unicode whitespace** is a character in the Unicode `Zs` (Separator,\n * Space) category, or U+0009 CHARACTER TABULATION (HT), U+000A LINE FEED (LF),\n * U+000C (FF), or U+000D CARRIAGE RETURN (CR) (**\\[UNICODE]**).\n *\n * See:\n * **\\[UNICODE]**:\n * [The Unicode Standard](https://www.unicode.org/versions/).\n * Unicode Consortium.\n *\n * @param code\n *   Code.\n * @returns\n *   Whether it matches.\n */\nexport const unicodeWhitespace = regexCheck(/\\s/);\n\n/**\n * Create a code check from a regex.\n *\n * @param {RegExp} regex\n * @returns {(code: Code) => boolean}\n */\nfunction regexCheck(regex) {\n  return check;\n\n  /**\n   * Check whether a code matches the bound regex.\n   *\n   * @param {Code} code\n   *   Character code.\n   * @returns {boolean}\n   *   Whether the character code matches the bound regex.\n   */\n  function check(code) {\n    return code !== null && code > -1 && regex.test(String.fromCharCode(code));\n  }\n}","/**\n * @typedef {import('micromark-util-types').Effects} Effects\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').TokenType} TokenType\n */\n\nimport {markdownSpace} from 'micromark-util-character'\n\n// To do: implement `spaceOrTab`, `spaceOrTabMinMax`, `spaceOrTabWithOptions`.\n\n/**\n * Parse spaces and tabs.\n *\n * There is no `nok` parameter:\n *\n * *   spaces in markdown are often optional, in which case this factory can be\n *     used and `ok` will be switched to whether spaces were found or not\n * *   one line ending or space can be detected with `markdownSpace(code)` right\n *     before using `factorySpace`\n *\n * ###### Examples\n *\n * Where `␉` represents a tab (plus how much it expands) and `␠` represents a\n * single space.\n *\n * ```markdown\n * ␉\n * ␠␠␠␠\n * ␉␠\n * ```\n *\n * @param {Effects} effects\n *   Context.\n * @param {State} ok\n *   State switched to when successful.\n * @param {TokenType} type\n *   Type (`' \\t'`).\n * @param {number | undefined} [max=Infinity]\n *   Max (exclusive).\n * @returns {State}\n *   Start state.\n */\nexport function factorySpace(effects, ok, type, max) {\n  const limit = max ? max - 1 : Number.POSITIVE_INFINITY\n  let size = 0\n  return start\n\n  /** @type {State} */\n  function start(code) {\n    if (markdownSpace(code)) {\n      effects.enter(type)\n      return prefix(code)\n    }\n    return ok(code)\n  }\n\n  /** @type {State} */\n  function prefix(code) {\n    if (markdownSpace(code) && size++ < limit) {\n      effects.consume(code)\n      return prefix\n    }\n    effects.exit(type)\n    return ok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').InitialConstruct} InitialConstruct\n * @typedef {import('micromark-util-types').Initializer} Initializer\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n */\n\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding} from 'micromark-util-character'\n/** @type {InitialConstruct} */\nexport const content = {\n  tokenize: initializeContent\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Initializer}\n */\nfunction initializeContent(effects) {\n  const contentStart = effects.attempt(\n    this.parser.constructs.contentInitial,\n    afterContentStartConstruct,\n    paragraphInitial\n  )\n  /** @type {Token} */\n  let previous\n  return contentStart\n\n  /** @type {State} */\n  function afterContentStartConstruct(code) {\n    if (code === null) {\n      effects.consume(code)\n      return\n    }\n    effects.enter('lineEnding')\n    effects.consume(code)\n    effects.exit('lineEnding')\n    return factorySpace(effects, contentStart, 'linePrefix')\n  }\n\n  /** @type {State} */\n  function paragraphInitial(code) {\n    effects.enter('paragraph')\n    return lineStart(code)\n  }\n\n  /** @type {State} */\n  function lineStart(code) {\n    const token = effects.enter('chunkText', {\n      contentType: 'text',\n      previous\n    })\n    if (previous) {\n      previous.next = token\n    }\n    previous = token\n    return data(code)\n  }\n\n  /** @type {State} */\n  function data(code) {\n    if (code === null) {\n      effects.exit('chunkText')\n      effects.exit('paragraph')\n      effects.consume(code)\n      return\n    }\n    if (markdownLineEnding(code)) {\n      effects.consume(code)\n      effects.exit('chunkText')\n      return lineStart\n    }\n\n    // Data.\n    effects.consume(code)\n    return data\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').ContainerState} ContainerState\n * @typedef {import('micromark-util-types').InitialConstruct} InitialConstruct\n * @typedef {import('micromark-util-types').Initializer} Initializer\n * @typedef {import('micromark-util-types').Point} Point\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n */\n\n/**\n * @typedef {[Construct, ContainerState]} StackItem\n */\n\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding} from 'micromark-util-character'\nimport {splice} from 'micromark-util-chunked'\n/** @type {InitialConstruct} */\nexport const document = {\n  tokenize: initializeDocument\n}\n\n/** @type {Construct} */\nconst containerConstruct = {\n  tokenize: tokenizeContainer\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Initializer}\n */\nfunction initializeDocument(effects) {\n  const self = this\n  /** @type {Array<StackItem>} */\n  const stack = []\n  let continued = 0\n  /** @type {TokenizeContext | undefined} */\n  let childFlow\n  /** @type {Token | undefined} */\n  let childToken\n  /** @type {number} */\n  let lineStartOffset\n  return start\n\n  /** @type {State} */\n  function start(code) {\n    // First we iterate through the open blocks, starting with the root\n    // document, and descending through last children down to the last open\n    // block.\n    // Each block imposes a condition that the line must satisfy if the block is\n    // to remain open.\n    // For example, a block quote requires a `>` character.\n    // A paragraph requires a non-blank line.\n    // In this phase we may match all or just some of the open blocks.\n    // But we cannot close unmatched blocks yet, because we may have a lazy\n    // continuation line.\n    if (continued < stack.length) {\n      const item = stack[continued]\n      self.containerState = item[1]\n      return effects.attempt(\n        item[0].continuation,\n        documentContinue,\n        checkNewContainers\n      )(code)\n    }\n\n    // Done.\n    return checkNewContainers(code)\n  }\n\n  /** @type {State} */\n  function documentContinue(code) {\n    continued++\n\n    // Note: this field is called `_closeFlow` but it also closes containers.\n    // Perhaps a good idea to rename it but it’s already used in the wild by\n    // extensions.\n    if (self.containerState._closeFlow) {\n      self.containerState._closeFlow = undefined\n      if (childFlow) {\n        closeFlow()\n      }\n\n      // Note: this algorithm for moving events around is similar to the\n      // algorithm when dealing with lazy lines in `writeToChild`.\n      const indexBeforeExits = self.events.length\n      let indexBeforeFlow = indexBeforeExits\n      /** @type {Point | undefined} */\n      let point\n\n      // Find the flow chunk.\n      while (indexBeforeFlow--) {\n        if (\n          self.events[indexBeforeFlow][0] === 'exit' &&\n          self.events[indexBeforeFlow][1].type === 'chunkFlow'\n        ) {\n          point = self.events[indexBeforeFlow][1].end\n          break\n        }\n      }\n      exitContainers(continued)\n\n      // Fix positions.\n      let index = indexBeforeExits\n      while (index < self.events.length) {\n        self.events[index][1].end = Object.assign({}, point)\n        index++\n      }\n\n      // Inject the exits earlier (they’re still also at the end).\n      splice(\n        self.events,\n        indexBeforeFlow + 1,\n        0,\n        self.events.slice(indexBeforeExits)\n      )\n\n      // Discard the duplicate exits.\n      self.events.length = index\n      return checkNewContainers(code)\n    }\n    return start(code)\n  }\n\n  /** @type {State} */\n  function checkNewContainers(code) {\n    // Next, after consuming the continuation markers for existing blocks, we\n    // look for new block starts (e.g. `>` for a block quote).\n    // If we encounter a new block start, we close any blocks unmatched in\n    // step 1 before creating the new block as a child of the last matched\n    // block.\n    if (continued === stack.length) {\n      // No need to `check` whether there’s a container, of `exitContainers`\n      // would be moot.\n      // We can instead immediately `attempt` to parse one.\n      if (!childFlow) {\n        return documentContinued(code)\n      }\n\n      // If we have concrete content, such as block HTML or fenced code,\n      // we can’t have containers “pierce” into them, so we can immediately\n      // start.\n      if (childFlow.currentConstruct && childFlow.currentConstruct.concrete) {\n        return flowStart(code)\n      }\n\n      // If we do have flow, it could still be a blank line,\n      // but we’d be interrupting it w/ a new container if there’s a current\n      // construct.\n      // To do: next major: remove `_gfmTableDynamicInterruptHack` (no longer\n      // needed in micromark-extension-gfm-table@1.0.6).\n      self.interrupt = Boolean(\n        childFlow.currentConstruct && !childFlow._gfmTableDynamicInterruptHack\n      )\n    }\n\n    // Check if there is a new container.\n    self.containerState = {}\n    return effects.check(\n      containerConstruct,\n      thereIsANewContainer,\n      thereIsNoNewContainer\n    )(code)\n  }\n\n  /** @type {State} */\n  function thereIsANewContainer(code) {\n    if (childFlow) closeFlow()\n    exitContainers(continued)\n    return documentContinued(code)\n  }\n\n  /** @type {State} */\n  function thereIsNoNewContainer(code) {\n    self.parser.lazy[self.now().line] = continued !== stack.length\n    lineStartOffset = self.now().offset\n    return flowStart(code)\n  }\n\n  /** @type {State} */\n  function documentContinued(code) {\n    // Try new containers.\n    self.containerState = {}\n    return effects.attempt(\n      containerConstruct,\n      containerContinue,\n      flowStart\n    )(code)\n  }\n\n  /** @type {State} */\n  function containerContinue(code) {\n    continued++\n    stack.push([self.currentConstruct, self.containerState])\n    // Try another.\n    return documentContinued(code)\n  }\n\n  /** @type {State} */\n  function flowStart(code) {\n    if (code === null) {\n      if (childFlow) closeFlow()\n      exitContainers(0)\n      effects.consume(code)\n      return\n    }\n    childFlow = childFlow || self.parser.flow(self.now())\n    effects.enter('chunkFlow', {\n      contentType: 'flow',\n      previous: childToken,\n      _tokenizer: childFlow\n    })\n    return flowContinue(code)\n  }\n\n  /** @type {State} */\n  function flowContinue(code) {\n    if (code === null) {\n      writeToChild(effects.exit('chunkFlow'), true)\n      exitContainers(0)\n      effects.consume(code)\n      return\n    }\n    if (markdownLineEnding(code)) {\n      effects.consume(code)\n      writeToChild(effects.exit('chunkFlow'))\n      // Get ready for the next line.\n      continued = 0\n      self.interrupt = undefined\n      return start\n    }\n    effects.consume(code)\n    return flowContinue\n  }\n\n  /**\n   * @param {Token} token\n   * @param {boolean | undefined} [eof]\n   * @returns {undefined}\n   */\n  function writeToChild(token, eof) {\n    const stream = self.sliceStream(token)\n    if (eof) stream.push(null)\n    token.previous = childToken\n    if (childToken) childToken.next = token\n    childToken = token\n    childFlow.defineSkip(token.start)\n    childFlow.write(stream)\n\n    // Alright, so we just added a lazy line:\n    //\n    // ```markdown\n    // > a\n    // b.\n    //\n    // Or:\n    //\n    // > ~~~c\n    // d\n    //\n    // Or:\n    //\n    // > | e |\n    // f\n    // ```\n    //\n    // The construct in the second example (fenced code) does not accept lazy\n    // lines, so it marked itself as done at the end of its first line, and\n    // then the content construct parses `d`.\n    // Most constructs in markdown match on the first line: if the first line\n    // forms a construct, a non-lazy line can’t “unmake” it.\n    //\n    // The construct in the third example is potentially a GFM table, and\n    // those are *weird*.\n    // It *could* be a table, from the first line, if the following line\n    // matches a condition.\n    // In this case, that second line is lazy, which “unmakes” the first line\n    // and turns the whole into one content block.\n    //\n    // We’ve now parsed the non-lazy and the lazy line, and can figure out\n    // whether the lazy line started a new flow block.\n    // If it did, we exit the current containers between the two flow blocks.\n    if (self.parser.lazy[token.start.line]) {\n      let index = childFlow.events.length\n      while (index--) {\n        if (\n          // The token starts before the line ending…\n          childFlow.events[index][1].start.offset < lineStartOffset &&\n          // …and either is not ended yet…\n          (!childFlow.events[index][1].end ||\n            // …or ends after it.\n            childFlow.events[index][1].end.offset > lineStartOffset)\n        ) {\n          // Exit: there’s still something open, which means it’s a lazy line\n          // part of something.\n          return\n        }\n      }\n\n      // Note: this algorithm for moving events around is similar to the\n      // algorithm when closing flow in `documentContinue`.\n      const indexBeforeExits = self.events.length\n      let indexBeforeFlow = indexBeforeExits\n      /** @type {boolean | undefined} */\n      let seen\n      /** @type {Point | undefined} */\n      let point\n\n      // Find the previous chunk (the one before the lazy line).\n      while (indexBeforeFlow--) {\n        if (\n          self.events[indexBeforeFlow][0] === 'exit' &&\n          self.events[indexBeforeFlow][1].type === 'chunkFlow'\n        ) {\n          if (seen) {\n            point = self.events[indexBeforeFlow][1].end\n            break\n          }\n          seen = true\n        }\n      }\n      exitContainers(continued)\n\n      // Fix positions.\n      index = indexBeforeExits\n      while (index < self.events.length) {\n        self.events[index][1].end = Object.assign({}, point)\n        index++\n      }\n\n      // Inject the exits earlier (they’re still also at the end).\n      splice(\n        self.events,\n        indexBeforeFlow + 1,\n        0,\n        self.events.slice(indexBeforeExits)\n      )\n\n      // Discard the duplicate exits.\n      self.events.length = index\n    }\n  }\n\n  /**\n   * @param {number} size\n   * @returns {undefined}\n   */\n  function exitContainers(size) {\n    let index = stack.length\n\n    // Exit open containers.\n    while (index-- > size) {\n      const entry = stack[index]\n      self.containerState = entry[1]\n      entry[0].exit.call(self, effects)\n    }\n    stack.length = size\n  }\n  function closeFlow() {\n    childFlow.write([null])\n    childToken = undefined\n    childFlow = undefined\n    self.containerState._closeFlow = undefined\n  }\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeContainer(effects, ok, nok) {\n  // Always populated by defaults.\n\n  return factorySpace(\n    effects,\n    effects.attempt(this.parser.constructs.document, ok, nok),\n    'linePrefix',\n    this.parser.constructs.disable.null.includes('codeIndented') ? undefined : 4\n  )\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n */\n\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding, markdownSpace} from 'micromark-util-character'\n/** @type {Construct} */\nexport const blankLine = {\n  tokenize: tokenizeBlankLine,\n  partial: true\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeBlankLine(effects, ok, nok) {\n  return start\n\n  /**\n   * Start of blank line.\n   *\n   * > 👉 **Note**: `␠` represents a space character.\n   *\n   * ```markdown\n   * > | ␠␠␊\n   *     ^\n   * > | ␊\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    return markdownSpace(code)\n      ? factorySpace(effects, after, 'linePrefix')(code)\n      : after(code)\n  }\n\n  /**\n   * At eof/eol, after optional whitespace.\n   *\n   * > 👉 **Note**: `␠` represents a space character.\n   *\n   * ```markdown\n   * > | ␠␠␊\n   *       ^\n   * > | ␊\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function after(code) {\n    return code === null || markdownLineEnding(code) ? ok(code) : nok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n */\n\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding} from 'micromark-util-character'\nimport {subtokenize} from 'micromark-util-subtokenize'\n/**\n * No name because it must not be turned off.\n * @type {Construct}\n */\nexport const content = {\n  tokenize: tokenizeContent,\n  resolve: resolveContent\n}\n\n/** @type {Construct} */\nconst continuationConstruct = {\n  tokenize: tokenizeContinuation,\n  partial: true\n}\n\n/**\n * Content is transparent: it’s parsed right now. That way, definitions are also\n * parsed right now: before text in paragraphs (specifically, media) are parsed.\n *\n * @type {Resolver}\n */\nfunction resolveContent(events) {\n  subtokenize(events)\n  return events\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeContent(effects, ok) {\n  /** @type {Token | undefined} */\n  let previous\n  return chunkStart\n\n  /**\n   * Before a content chunk.\n   *\n   * ```markdown\n   * > | abc\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function chunkStart(code) {\n    effects.enter('content')\n    previous = effects.enter('chunkContent', {\n      contentType: 'content'\n    })\n    return chunkInside(code)\n  }\n\n  /**\n   * In a content chunk.\n   *\n   * ```markdown\n   * > | abc\n   *     ^^^\n   * ```\n   *\n   * @type {State}\n   */\n  function chunkInside(code) {\n    if (code === null) {\n      return contentEnd(code)\n    }\n\n    // To do: in `markdown-rs`, each line is parsed on its own, and everything\n    // is stitched together resolving.\n    if (markdownLineEnding(code)) {\n      return effects.check(\n        continuationConstruct,\n        contentContinue,\n        contentEnd\n      )(code)\n    }\n\n    // Data.\n    effects.consume(code)\n    return chunkInside\n  }\n\n  /**\n   *\n   *\n   * @type {State}\n   */\n  function contentEnd(code) {\n    effects.exit('chunkContent')\n    effects.exit('content')\n    return ok(code)\n  }\n\n  /**\n   *\n   *\n   * @type {State}\n   */\n  function contentContinue(code) {\n    effects.consume(code)\n    effects.exit('chunkContent')\n    previous.next = effects.enter('chunkContent', {\n      contentType: 'content',\n      previous\n    })\n    previous = previous.next\n    return chunkInside\n  }\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeContinuation(effects, ok, nok) {\n  const self = this\n  return startLookahead\n\n  /**\n   *\n   *\n   * @type {State}\n   */\n  function startLookahead(code) {\n    effects.exit('chunkContent')\n    effects.enter('lineEnding')\n    effects.consume(code)\n    effects.exit('lineEnding')\n    return factorySpace(effects, prefixed, 'linePrefix')\n  }\n\n  /**\n   *\n   *\n   * @type {State}\n   */\n  function prefixed(code) {\n    if (code === null || markdownLineEnding(code)) {\n      return nok(code)\n    }\n\n    // Always populated by defaults.\n\n    const tail = self.events[self.events.length - 1]\n    if (\n      !self.parser.constructs.disable.null.includes('codeIndented') &&\n      tail &&\n      tail[1].type === 'linePrefix' &&\n      tail[2].sliceSerialize(tail[1], true).length >= 4\n    ) {\n      return ok(code)\n    }\n    return effects.interrupt(self.parser.constructs.flow, nok, ok)(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').InitialConstruct} InitialConstruct\n * @typedef {import('micromark-util-types').Initializer} Initializer\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n */\n\nimport {blankLine, content} from 'micromark-core-commonmark'\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding} from 'micromark-util-character'\n/** @type {InitialConstruct} */\nexport const flow = {\n  tokenize: initializeFlow\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Initializer}\n */\nfunction initializeFlow(effects) {\n  const self = this\n  const initial = effects.attempt(\n    // Try to parse a blank line.\n    blankLine,\n    atBlankEnding,\n    // Try to parse initial flow (essentially, only code).\n    effects.attempt(\n      this.parser.constructs.flowInitial,\n      afterConstruct,\n      factorySpace(\n        effects,\n        effects.attempt(\n          this.parser.constructs.flow,\n          afterConstruct,\n          effects.attempt(content, afterConstruct)\n        ),\n        'linePrefix'\n      )\n    )\n  )\n  return initial\n\n  /** @type {State} */\n  function atBlankEnding(code) {\n    if (code === null) {\n      effects.consume(code)\n      return\n    }\n    effects.enter('lineEndingBlank')\n    effects.consume(code)\n    effects.exit('lineEndingBlank')\n    self.currentConstruct = undefined\n    return initial\n  }\n\n  /** @type {State} */\n  function afterConstruct(code) {\n    if (code === null) {\n      effects.consume(code)\n      return\n    }\n    effects.enter('lineEnding')\n    effects.consume(code)\n    effects.exit('lineEnding')\n    self.currentConstruct = undefined\n    return initial\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Code} Code\n * @typedef {import('micromark-util-types').InitialConstruct} InitialConstruct\n * @typedef {import('micromark-util-types').Initializer} Initializer\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n */\n\nexport const resolver = {\n  resolveAll: createResolver()\n}\nexport const string = initializeFactory('string')\nexport const text = initializeFactory('text')\n\n/**\n * @param {'string' | 'text'} field\n * @returns {InitialConstruct}\n */\nfunction initializeFactory(field) {\n  return {\n    tokenize: initializeText,\n    resolveAll: createResolver(\n      field === 'text' ? resolveAllLineSuffixes : undefined\n    )\n  }\n\n  /**\n   * @this {TokenizeContext}\n   * @type {Initializer}\n   */\n  function initializeText(effects) {\n    const self = this\n    const constructs = this.parser.constructs[field]\n    const text = effects.attempt(constructs, start, notText)\n    return start\n\n    /** @type {State} */\n    function start(code) {\n      return atBreak(code) ? text(code) : notText(code)\n    }\n\n    /** @type {State} */\n    function notText(code) {\n      if (code === null) {\n        effects.consume(code)\n        return\n      }\n      effects.enter('data')\n      effects.consume(code)\n      return data\n    }\n\n    /** @type {State} */\n    function data(code) {\n      if (atBreak(code)) {\n        effects.exit('data')\n        return text(code)\n      }\n\n      // Data.\n      effects.consume(code)\n      return data\n    }\n\n    /**\n     * @param {Code} code\n     * @returns {boolean}\n     */\n    function atBreak(code) {\n      if (code === null) {\n        return true\n      }\n      const list = constructs[code]\n      let index = -1\n      if (list) {\n        // Always populated by defaults.\n\n        while (++index < list.length) {\n          const item = list[index]\n          if (!item.previous || item.previous.call(self, self.previous)) {\n            return true\n          }\n        }\n      }\n      return false\n    }\n  }\n}\n\n/**\n * @param {Resolver | undefined} [extraResolver]\n * @returns {Resolver}\n */\nfunction createResolver(extraResolver) {\n  return resolveAllText\n\n  /** @type {Resolver} */\n  function resolveAllText(events, context) {\n    let index = -1\n    /** @type {number | undefined} */\n    let enter\n\n    // A rather boring computation (to merge adjacent `data` events) which\n    // improves mm performance by 29%.\n    while (++index <= events.length) {\n      if (enter === undefined) {\n        if (events[index] && events[index][1].type === 'data') {\n          enter = index\n          index++\n        }\n      } else if (!events[index] || events[index][1].type !== 'data') {\n        // Don’t do anything if there is one data token.\n        if (index !== enter + 2) {\n          events[enter][1].end = events[index - 1][1].end\n          events.splice(enter + 2, index - enter - 2)\n          index = enter + 2\n        }\n        enter = undefined\n      }\n    }\n    return extraResolver ? extraResolver(events, context) : events\n  }\n}\n\n/**\n * A rather ugly set of instructions which again looks at chunks in the input\n * stream.\n * The reason to do this here is that it is *much* faster to parse in reverse.\n * And that we can’t hook into `null` to split the line suffix before an EOF.\n * To do: figure out if we can make this into a clean utility, or even in core.\n * As it will be useful for GFMs literal autolink extension (and maybe even\n * tables?)\n *\n * @type {Resolver}\n */\nfunction resolveAllLineSuffixes(events, context) {\n  let eventIndex = 0 // Skip first.\n\n  while (++eventIndex <= events.length) {\n    if (\n      (eventIndex === events.length ||\n        events[eventIndex][1].type === 'lineEnding') &&\n      events[eventIndex - 1][1].type === 'data'\n    ) {\n      const data = events[eventIndex - 1][1]\n      const chunks = context.sliceStream(data)\n      let index = chunks.length\n      let bufferIndex = -1\n      let size = 0\n      /** @type {boolean | undefined} */\n      let tabs\n      while (index--) {\n        const chunk = chunks[index]\n        if (typeof chunk === 'string') {\n          bufferIndex = chunk.length\n          while (chunk.charCodeAt(bufferIndex - 1) === 32) {\n            size++\n            bufferIndex--\n          }\n          if (bufferIndex) break\n          bufferIndex = -1\n        }\n        // Number\n        else if (chunk === -2) {\n          tabs = true\n          size++\n        } else if (chunk === -1) {\n          // Empty\n        } else {\n          // Replacement character, exit.\n          index++\n          break\n        }\n      }\n      if (size) {\n        const token = {\n          type:\n            eventIndex === events.length || tabs || size < 2\n              ? 'lineSuffix'\n              : 'hardBreakTrailing',\n          start: {\n            line: data.end.line,\n            column: data.end.column - size,\n            offset: data.end.offset - size,\n            _index: data.start._index + index,\n            _bufferIndex: index\n              ? bufferIndex\n              : data.start._bufferIndex + bufferIndex\n          },\n          end: Object.assign({}, data.end)\n        }\n        data.end = Object.assign({}, token.start)\n        if (data.start.offset === data.end.offset) {\n          Object.assign(data, token)\n        } else {\n          events.splice(\n            eventIndex,\n            0,\n            ['enter', token, context],\n            ['exit', token, context]\n          )\n          eventIndex += 2\n        }\n      }\n      eventIndex++\n    }\n  }\n  return events\n}\n","/**\n * @typedef {import('micromark-util-types').Event} Event\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n */\n\n/**\n * Call all `resolveAll`s.\n *\n * @param {Array<{resolveAll?: Resolver | undefined}>} constructs\n *   List of constructs, optionally with `resolveAll`s.\n * @param {Array<Event>} events\n *   List of events.\n * @param {TokenizeContext} context\n *   Context used by `tokenize`.\n * @returns {Array<Event>}\n *   Changed events.\n */\nexport function resolveAll(constructs, events, context) {\n  /** @type {Array<Resolver>} */\n  const called = []\n  let index = -1\n\n  while (++index < constructs.length) {\n    const resolve = constructs[index].resolveAll\n\n    if (resolve && !called.includes(resolve)) {\n      events = resolve(events, context)\n      called.push(resolve)\n    }\n  }\n\n  return events\n}\n","/**\n * @typedef {import('micromark-util-types').Chunk} Chunk\n * @typedef {import('micromark-util-types').Code} Code\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').ConstructRecord} ConstructRecord\n * @typedef {import('micromark-util-types').Effects} Effects\n * @typedef {import('micromark-util-types').InitialConstruct} InitialConstruct\n * @typedef {import('micromark-util-types').ParseContext} ParseContext\n * @typedef {import('micromark-util-types').Point} Point\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').TokenType} TokenType\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n */\n\n/**\n * @callback Restore\n * @returns {undefined}\n *\n * @typedef Info\n * @property {Restore} restore\n * @property {number} from\n *\n * @callback ReturnHandle\n *   Handle a successful run.\n * @param {Construct} construct\n * @param {Info} info\n * @returns {undefined}\n */\n\nimport {markdownLineEnding} from 'micromark-util-character'\nimport {push, splice} from 'micromark-util-chunked'\nimport {resolveAll} from 'micromark-util-resolve-all'\n/**\n * Create a tokenizer.\n * Tokenizers deal with one type of data (e.g., containers, flow, text).\n * The parser is the object dealing with it all.\n * `initialize` works like other constructs, except that only its `tokenize`\n * function is used, in which case it doesn’t receive an `ok` or `nok`.\n * `from` can be given to set the point before the first character, although\n * when further lines are indented, they must be set with `defineSkip`.\n *\n * @param {ParseContext} parser\n * @param {InitialConstruct} initialize\n * @param {Omit<Point, '_bufferIndex' | '_index'> | undefined} [from]\n * @returns {TokenizeContext}\n */\nexport function createTokenizer(parser, initialize, from) {\n  /** @type {Point} */\n  let point = Object.assign(\n    from\n      ? Object.assign({}, from)\n      : {\n          line: 1,\n          column: 1,\n          offset: 0\n        },\n    {\n      _index: 0,\n      _bufferIndex: -1\n    }\n  )\n  /** @type {Record<string, number>} */\n  const columnStart = {}\n  /** @type {Array<Construct>} */\n  const resolveAllConstructs = []\n  /** @type {Array<Chunk>} */\n  let chunks = []\n  /** @type {Array<Token>} */\n  let stack = []\n  /** @type {boolean | undefined} */\n  let consumed = true\n\n  /**\n   * Tools used for tokenizing.\n   *\n   * @type {Effects}\n   */\n  const effects = {\n    consume,\n    enter,\n    exit,\n    attempt: constructFactory(onsuccessfulconstruct),\n    check: constructFactory(onsuccessfulcheck),\n    interrupt: constructFactory(onsuccessfulcheck, {\n      interrupt: true\n    })\n  }\n\n  /**\n   * State and tools for resolving and serializing.\n   *\n   * @type {TokenizeContext}\n   */\n  const context = {\n    previous: null,\n    code: null,\n    containerState: {},\n    events: [],\n    parser,\n    sliceStream,\n    sliceSerialize,\n    now,\n    defineSkip,\n    write\n  }\n\n  /**\n   * The state function.\n   *\n   * @type {State | undefined}\n   */\n  let state = initialize.tokenize.call(context, effects)\n\n  /**\n   * Track which character we expect to be consumed, to catch bugs.\n   *\n   * @type {Code}\n   */\n  let expectedCode\n  if (initialize.resolveAll) {\n    resolveAllConstructs.push(initialize)\n  }\n  return context\n\n  /** @type {TokenizeContext['write']} */\n  function write(slice) {\n    chunks = push(chunks, slice)\n    main()\n\n    // Exit if we’re not done, resolve might change stuff.\n    if (chunks[chunks.length - 1] !== null) {\n      return []\n    }\n    addResult(initialize, 0)\n\n    // Otherwise, resolve, and exit.\n    context.events = resolveAll(resolveAllConstructs, context.events, context)\n    return context.events\n  }\n\n  //\n  // Tools.\n  //\n\n  /** @type {TokenizeContext['sliceSerialize']} */\n  function sliceSerialize(token, expandTabs) {\n    return serializeChunks(sliceStream(token), expandTabs)\n  }\n\n  /** @type {TokenizeContext['sliceStream']} */\n  function sliceStream(token) {\n    return sliceChunks(chunks, token)\n  }\n\n  /** @type {TokenizeContext['now']} */\n  function now() {\n    // This is a hot path, so we clone manually instead of `Object.assign({}, point)`\n    const {line, column, offset, _index, _bufferIndex} = point\n    return {\n      line,\n      column,\n      offset,\n      _index,\n      _bufferIndex\n    }\n  }\n\n  /** @type {TokenizeContext['defineSkip']} */\n  function defineSkip(value) {\n    columnStart[value.line] = value.column\n    accountForPotentialSkip()\n  }\n\n  //\n  // State management.\n  //\n\n  /**\n   * Main loop (note that `_index` and `_bufferIndex` in `point` are modified by\n   * `consume`).\n   * Here is where we walk through the chunks, which either include strings of\n   * several characters, or numerical character codes.\n   * The reason to do this in a loop instead of a call is so the stack can\n   * drain.\n   *\n   * @returns {undefined}\n   */\n  function main() {\n    /** @type {number} */\n    let chunkIndex\n    while (point._index < chunks.length) {\n      const chunk = chunks[point._index]\n\n      // If we’re in a buffer chunk, loop through it.\n      if (typeof chunk === 'string') {\n        chunkIndex = point._index\n        if (point._bufferIndex < 0) {\n          point._bufferIndex = 0\n        }\n        while (\n          point._index === chunkIndex &&\n          point._bufferIndex < chunk.length\n        ) {\n          go(chunk.charCodeAt(point._bufferIndex))\n        }\n      } else {\n        go(chunk)\n      }\n    }\n  }\n\n  /**\n   * Deal with one code.\n   *\n   * @param {Code} code\n   * @returns {undefined}\n   */\n  function go(code) {\n    consumed = undefined\n    expectedCode = code\n    state = state(code)\n  }\n\n  /** @type {Effects['consume']} */\n  function consume(code) {\n    if (markdownLineEnding(code)) {\n      point.line++\n      point.column = 1\n      point.offset += code === -3 ? 2 : 1\n      accountForPotentialSkip()\n    } else if (code !== -1) {\n      point.column++\n      point.offset++\n    }\n\n    // Not in a string chunk.\n    if (point._bufferIndex < 0) {\n      point._index++\n    } else {\n      point._bufferIndex++\n\n      // At end of string chunk.\n      // @ts-expect-error Points w/ non-negative `_bufferIndex` reference\n      // strings.\n      if (point._bufferIndex === chunks[point._index].length) {\n        point._bufferIndex = -1\n        point._index++\n      }\n    }\n\n    // Expose the previous character.\n    context.previous = code\n\n    // Mark as consumed.\n    consumed = true\n  }\n\n  /** @type {Effects['enter']} */\n  function enter(type, fields) {\n    /** @type {Token} */\n    // @ts-expect-error Patch instead of assign required fields to help GC.\n    const token = fields || {}\n    token.type = type\n    token.start = now()\n    context.events.push(['enter', token, context])\n    stack.push(token)\n    return token\n  }\n\n  /** @type {Effects['exit']} */\n  function exit(type) {\n    const token = stack.pop()\n    token.end = now()\n    context.events.push(['exit', token, context])\n    return token\n  }\n\n  /**\n   * Use results.\n   *\n   * @type {ReturnHandle}\n   */\n  function onsuccessfulconstruct(construct, info) {\n    addResult(construct, info.from)\n  }\n\n  /**\n   * Discard results.\n   *\n   * @type {ReturnHandle}\n   */\n  function onsuccessfulcheck(_, info) {\n    info.restore()\n  }\n\n  /**\n   * Factory to attempt/check/interrupt.\n   *\n   * @param {ReturnHandle} onreturn\n   * @param {{interrupt?: boolean | undefined} | undefined} [fields]\n   */\n  function constructFactory(onreturn, fields) {\n    return hook\n\n    /**\n     * Handle either an object mapping codes to constructs, a list of\n     * constructs, or a single construct.\n     *\n     * @param {Array<Construct> | Construct | ConstructRecord} constructs\n     * @param {State} returnState\n     * @param {State | undefined} [bogusState]\n     * @returns {State}\n     */\n    function hook(constructs, returnState, bogusState) {\n      /** @type {Array<Construct>} */\n      let listOfConstructs\n      /** @type {number} */\n      let constructIndex\n      /** @type {Construct} */\n      let currentConstruct\n      /** @type {Info} */\n      let info\n      return Array.isArray(constructs) /* c8 ignore next 1 */\n        ? handleListOfConstructs(constructs)\n        : 'tokenize' in constructs\n        ? // @ts-expect-error Looks like a construct.\n          handleListOfConstructs([constructs])\n        : handleMapOfConstructs(constructs)\n\n      /**\n       * Handle a list of construct.\n       *\n       * @param {ConstructRecord} map\n       * @returns {State}\n       */\n      function handleMapOfConstructs(map) {\n        return start\n\n        /** @type {State} */\n        function start(code) {\n          const def = code !== null && map[code]\n          const all = code !== null && map.null\n          const list = [\n            // To do: add more extension tests.\n            /* c8 ignore next 2 */\n            ...(Array.isArray(def) ? def : def ? [def] : []),\n            ...(Array.isArray(all) ? all : all ? [all] : [])\n          ]\n          return handleListOfConstructs(list)(code)\n        }\n      }\n\n      /**\n       * Handle a list of construct.\n       *\n       * @param {Array<Construct>} list\n       * @returns {State}\n       */\n      function handleListOfConstructs(list) {\n        listOfConstructs = list\n        constructIndex = 0\n        if (list.length === 0) {\n          return bogusState\n        }\n        return handleConstruct(list[constructIndex])\n      }\n\n      /**\n       * Handle a single construct.\n       *\n       * @param {Construct} construct\n       * @returns {State}\n       */\n      function handleConstruct(construct) {\n        return start\n\n        /** @type {State} */\n        function start(code) {\n          // To do: not needed to store if there is no bogus state, probably?\n          // Currently doesn’t work because `inspect` in document does a check\n          // w/o a bogus, which doesn’t make sense. But it does seem to help perf\n          // by not storing.\n          info = store()\n          currentConstruct = construct\n          if (!construct.partial) {\n            context.currentConstruct = construct\n          }\n\n          // Always populated by defaults.\n\n          if (\n            construct.name &&\n            context.parser.constructs.disable.null.includes(construct.name)\n          ) {\n            return nok(code)\n          }\n          return construct.tokenize.call(\n            // If we do have fields, create an object w/ `context` as its\n            // prototype.\n            // This allows a “live binding”, which is needed for `interrupt`.\n            fields ? Object.assign(Object.create(context), fields) : context,\n            effects,\n            ok,\n            nok\n          )(code)\n        }\n      }\n\n      /** @type {State} */\n      function ok(code) {\n        consumed = true\n        onreturn(currentConstruct, info)\n        return returnState\n      }\n\n      /** @type {State} */\n      function nok(code) {\n        consumed = true\n        info.restore()\n        if (++constructIndex < listOfConstructs.length) {\n          return handleConstruct(listOfConstructs[constructIndex])\n        }\n        return bogusState\n      }\n    }\n  }\n\n  /**\n   * @param {Construct} construct\n   * @param {number} from\n   * @returns {undefined}\n   */\n  function addResult(construct, from) {\n    if (construct.resolveAll && !resolveAllConstructs.includes(construct)) {\n      resolveAllConstructs.push(construct)\n    }\n    if (construct.resolve) {\n      splice(\n        context.events,\n        from,\n        context.events.length - from,\n        construct.resolve(context.events.slice(from), context)\n      )\n    }\n    if (construct.resolveTo) {\n      context.events = construct.resolveTo(context.events, context)\n    }\n  }\n\n  /**\n   * Store state.\n   *\n   * @returns {Info}\n   */\n  function store() {\n    const startPoint = now()\n    const startPrevious = context.previous\n    const startCurrentConstruct = context.currentConstruct\n    const startEventsIndex = context.events.length\n    const startStack = Array.from(stack)\n    return {\n      restore,\n      from: startEventsIndex\n    }\n\n    /**\n     * Restore state.\n     *\n     * @returns {undefined}\n     */\n    function restore() {\n      point = startPoint\n      context.previous = startPrevious\n      context.currentConstruct = startCurrentConstruct\n      context.events.length = startEventsIndex\n      stack = startStack\n      accountForPotentialSkip()\n    }\n  }\n\n  /**\n   * Move the current point a bit forward in the line when it’s on a column\n   * skip.\n   *\n   * @returns {undefined}\n   */\n  function accountForPotentialSkip() {\n    if (point.line in columnStart && point.column < 2) {\n      point.column = columnStart[point.line]\n      point.offset += columnStart[point.line] - 1\n    }\n  }\n}\n\n/**\n * Get the chunks from a slice of chunks in the range of a token.\n *\n * @param {Array<Chunk>} chunks\n * @param {Pick<Token, 'end' | 'start'>} token\n * @returns {Array<Chunk>}\n */\nfunction sliceChunks(chunks, token) {\n  const startIndex = token.start._index\n  const startBufferIndex = token.start._bufferIndex\n  const endIndex = token.end._index\n  const endBufferIndex = token.end._bufferIndex\n  /** @type {Array<Chunk>} */\n  let view\n  if (startIndex === endIndex) {\n    // @ts-expect-error `_bufferIndex` is used on string chunks.\n    view = [chunks[startIndex].slice(startBufferIndex, endBufferIndex)]\n  } else {\n    view = chunks.slice(startIndex, endIndex)\n    if (startBufferIndex > -1) {\n      const head = view[0]\n      if (typeof head === 'string') {\n        view[0] = head.slice(startBufferIndex)\n      } else {\n        view.shift()\n      }\n    }\n    if (endBufferIndex > 0) {\n      // @ts-expect-error `_bufferIndex` is used on string chunks.\n      view.push(chunks[endIndex].slice(0, endBufferIndex))\n    }\n  }\n  return view\n}\n\n/**\n * Get the string value of a slice of chunks.\n *\n * @param {Array<Chunk>} chunks\n * @param {boolean | undefined} [expandTabs=false]\n * @returns {string}\n */\nfunction serializeChunks(chunks, expandTabs) {\n  let index = -1\n  /** @type {Array<string>} */\n  const result = []\n  /** @type {boolean | undefined} */\n  let atTab\n  while (++index < chunks.length) {\n    const chunk = chunks[index]\n    /** @type {string} */\n    let value\n    if (typeof chunk === 'string') {\n      value = chunk\n    } else\n      switch (chunk) {\n        case -5: {\n          value = '\\r'\n          break\n        }\n        case -4: {\n          value = '\\n'\n          break\n        }\n        case -3: {\n          value = '\\r' + '\\n'\n          break\n        }\n        case -2: {\n          value = expandTabs ? ' ' : '\\t'\n          break\n        }\n        case -1: {\n          if (!expandTabs && atTab) continue\n          value = ' '\n          break\n        }\n        default: {\n          // Currently only replacement character.\n          value = String.fromCharCode(chunk)\n        }\n      }\n    atTab = chunk === -2\n    result.push(value)\n  }\n  return result.join('')\n}\n","/**\n * @typedef {import('micromark-util-types').Code} Code\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n */\n\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding, markdownSpace} from 'micromark-util-character'\n/** @type {Construct} */\nexport const thematicBreak = {\n  name: 'thematicBreak',\n  tokenize: tokenizeThematicBreak\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeThematicBreak(effects, ok, nok) {\n  let size = 0\n  /** @type {NonNullable<Code>} */\n  let marker\n  return start\n\n  /**\n   * Start of thematic break.\n   *\n   * ```markdown\n   * > | ***\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    effects.enter('thematicBreak')\n    // To do: parse indent like `markdown-rs`.\n    return before(code)\n  }\n\n  /**\n   * After optional whitespace, at marker.\n   *\n   * ```markdown\n   * > | ***\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function before(code) {\n    marker = code\n    return atBreak(code)\n  }\n\n  /**\n   * After something, before something else.\n   *\n   * ```markdown\n   * > | ***\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function atBreak(code) {\n    if (code === marker) {\n      effects.enter('thematicBreakSequence')\n      return sequence(code)\n    }\n    if (size >= 3 && (code === null || markdownLineEnding(code))) {\n      effects.exit('thematicBreak')\n      return ok(code)\n    }\n    return nok(code)\n  }\n\n  /**\n   * In sequence.\n   *\n   * ```markdown\n   * > | ***\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function sequence(code) {\n    if (code === marker) {\n      effects.consume(code)\n      size++\n      return sequence\n    }\n    effects.exit('thematicBreakSequence')\n    return markdownSpace(code)\n      ? factorySpace(effects, atBreak, 'whitespace')(code)\n      : atBreak(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Code} Code\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').ContainerState} ContainerState\n * @typedef {import('micromark-util-types').Exiter} Exiter\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n */\n\nimport {factorySpace} from 'micromark-factory-space'\nimport {asciiDigit, markdownSpace} from 'micromark-util-character'\nimport {blankLine} from './blank-line.js'\nimport {thematicBreak} from './thematic-break.js'\n\n/** @type {Construct} */\nexport const list = {\n  name: 'list',\n  tokenize: tokenizeListStart,\n  continuation: {\n    tokenize: tokenizeListContinuation\n  },\n  exit: tokenizeListEnd\n}\n\n/** @type {Construct} */\nconst listItemPrefixWhitespaceConstruct = {\n  tokenize: tokenizeListItemPrefixWhitespace,\n  partial: true\n}\n\n/** @type {Construct} */\nconst indentConstruct = {\n  tokenize: tokenizeIndent,\n  partial: true\n}\n\n// To do: `markdown-rs` parses list items on their own and later stitches them\n// together.\n\n/**\n * @type {Tokenizer}\n * @this {TokenizeContext}\n */\nfunction tokenizeListStart(effects, ok, nok) {\n  const self = this\n  const tail = self.events[self.events.length - 1]\n  let initialSize =\n    tail && tail[1].type === 'linePrefix'\n      ? tail[2].sliceSerialize(tail[1], true).length\n      : 0\n  let size = 0\n  return start\n\n  /** @type {State} */\n  function start(code) {\n    const kind =\n      self.containerState.type ||\n      (code === 42 || code === 43 || code === 45\n        ? 'listUnordered'\n        : 'listOrdered')\n    if (\n      kind === 'listUnordered'\n        ? !self.containerState.marker || code === self.containerState.marker\n        : asciiDigit(code)\n    ) {\n      if (!self.containerState.type) {\n        self.containerState.type = kind\n        effects.enter(kind, {\n          _container: true\n        })\n      }\n      if (kind === 'listUnordered') {\n        effects.enter('listItemPrefix')\n        return code === 42 || code === 45\n          ? effects.check(thematicBreak, nok, atMarker)(code)\n          : atMarker(code)\n      }\n      if (!self.interrupt || code === 49) {\n        effects.enter('listItemPrefix')\n        effects.enter('listItemValue')\n        return inside(code)\n      }\n    }\n    return nok(code)\n  }\n\n  /** @type {State} */\n  function inside(code) {\n    if (asciiDigit(code) && ++size < 10) {\n      effects.consume(code)\n      return inside\n    }\n    if (\n      (!self.interrupt || size < 2) &&\n      (self.containerState.marker\n        ? code === self.containerState.marker\n        : code === 41 || code === 46)\n    ) {\n      effects.exit('listItemValue')\n      return atMarker(code)\n    }\n    return nok(code)\n  }\n\n  /**\n   * @type {State}\n   **/\n  function atMarker(code) {\n    effects.enter('listItemMarker')\n    effects.consume(code)\n    effects.exit('listItemMarker')\n    self.containerState.marker = self.containerState.marker || code\n    return effects.check(\n      blankLine,\n      // Can’t be empty when interrupting.\n      self.interrupt ? nok : onBlank,\n      effects.attempt(\n        listItemPrefixWhitespaceConstruct,\n        endOfPrefix,\n        otherPrefix\n      )\n    )\n  }\n\n  /** @type {State} */\n  function onBlank(code) {\n    self.containerState.initialBlankLine = true\n    initialSize++\n    return endOfPrefix(code)\n  }\n\n  /** @type {State} */\n  function otherPrefix(code) {\n    if (markdownSpace(code)) {\n      effects.enter('listItemPrefixWhitespace')\n      effects.consume(code)\n      effects.exit('listItemPrefixWhitespace')\n      return endOfPrefix\n    }\n    return nok(code)\n  }\n\n  /** @type {State} */\n  function endOfPrefix(code) {\n    self.containerState.size =\n      initialSize +\n      self.sliceSerialize(effects.exit('listItemPrefix'), true).length\n    return ok(code)\n  }\n}\n\n/**\n * @type {Tokenizer}\n * @this {TokenizeContext}\n */\nfunction tokenizeListContinuation(effects, ok, nok) {\n  const self = this\n  self.containerState._closeFlow = undefined\n  return effects.check(blankLine, onBlank, notBlank)\n\n  /** @type {State} */\n  function onBlank(code) {\n    self.containerState.furtherBlankLines =\n      self.containerState.furtherBlankLines ||\n      self.containerState.initialBlankLine\n\n    // We have a blank line.\n    // Still, try to consume at most the items size.\n    return factorySpace(\n      effects,\n      ok,\n      'listItemIndent',\n      self.containerState.size + 1\n    )(code)\n  }\n\n  /** @type {State} */\n  function notBlank(code) {\n    if (self.containerState.furtherBlankLines || !markdownSpace(code)) {\n      self.containerState.furtherBlankLines = undefined\n      self.containerState.initialBlankLine = undefined\n      return notInCurrentItem(code)\n    }\n    self.containerState.furtherBlankLines = undefined\n    self.containerState.initialBlankLine = undefined\n    return effects.attempt(indentConstruct, ok, notInCurrentItem)(code)\n  }\n\n  /** @type {State} */\n  function notInCurrentItem(code) {\n    // While we do continue, we signal that the flow should be closed.\n    self.containerState._closeFlow = true\n    // As we’re closing flow, we’re no longer interrupting.\n    self.interrupt = undefined\n    // Always populated by defaults.\n\n    return factorySpace(\n      effects,\n      effects.attempt(list, ok, nok),\n      'linePrefix',\n      self.parser.constructs.disable.null.includes('codeIndented')\n        ? undefined\n        : 4\n    )(code)\n  }\n}\n\n/**\n * @type {Tokenizer}\n * @this {TokenizeContext}\n */\nfunction tokenizeIndent(effects, ok, nok) {\n  const self = this\n  return factorySpace(\n    effects,\n    afterPrefix,\n    'listItemIndent',\n    self.containerState.size + 1\n  )\n\n  /** @type {State} */\n  function afterPrefix(code) {\n    const tail = self.events[self.events.length - 1]\n    return tail &&\n      tail[1].type === 'listItemIndent' &&\n      tail[2].sliceSerialize(tail[1], true).length === self.containerState.size\n      ? ok(code)\n      : nok(code)\n  }\n}\n\n/**\n * @type {Exiter}\n * @this {TokenizeContext}\n */\nfunction tokenizeListEnd(effects) {\n  effects.exit(this.containerState.type)\n}\n\n/**\n * @type {Tokenizer}\n * @this {TokenizeContext}\n */\nfunction tokenizeListItemPrefixWhitespace(effects, ok, nok) {\n  const self = this\n\n  // Always populated by defaults.\n\n  return factorySpace(\n    effects,\n    afterPrefix,\n    'listItemPrefixWhitespace',\n    self.parser.constructs.disable.null.includes('codeIndented')\n      ? undefined\n      : 4 + 1\n  )\n\n  /** @type {State} */\n  function afterPrefix(code) {\n    const tail = self.events[self.events.length - 1]\n    return !markdownSpace(code) &&\n      tail &&\n      tail[1].type === 'listItemPrefixWhitespace'\n      ? ok(code)\n      : nok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Exiter} Exiter\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n */\n\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownSpace} from 'micromark-util-character'\n/** @type {Construct} */\nexport const blockQuote = {\n  name: 'blockQuote',\n  tokenize: tokenizeBlockQuoteStart,\n  continuation: {\n    tokenize: tokenizeBlockQuoteContinuation\n  },\n  exit\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeBlockQuoteStart(effects, ok, nok) {\n  const self = this\n  return start\n\n  /**\n   * Start of block quote.\n   *\n   * ```markdown\n   * > | > a\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    if (code === 62) {\n      const state = self.containerState\n      if (!state.open) {\n        effects.enter('blockQuote', {\n          _container: true\n        })\n        state.open = true\n      }\n      effects.enter('blockQuotePrefix')\n      effects.enter('blockQuoteMarker')\n      effects.consume(code)\n      effects.exit('blockQuoteMarker')\n      return after\n    }\n    return nok(code)\n  }\n\n  /**\n   * After `>`, before optional whitespace.\n   *\n   * ```markdown\n   * > | > a\n   *      ^\n   * ```\n   *\n   * @type {State}\n   */\n  function after(code) {\n    if (markdownSpace(code)) {\n      effects.enter('blockQuotePrefixWhitespace')\n      effects.consume(code)\n      effects.exit('blockQuotePrefixWhitespace')\n      effects.exit('blockQuotePrefix')\n      return ok\n    }\n    effects.exit('blockQuotePrefix')\n    return ok(code)\n  }\n}\n\n/**\n * Start of block quote continuation.\n *\n * ```markdown\n *   | > a\n * > | > b\n *     ^\n * ```\n *\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeBlockQuoteContinuation(effects, ok, nok) {\n  const self = this\n  return contStart\n\n  /**\n   * Start of block quote continuation.\n   *\n   * Also used to parse the first block quote opening.\n   *\n   * ```markdown\n   *   | > a\n   * > | > b\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function contStart(code) {\n    if (markdownSpace(code)) {\n      // Always populated by defaults.\n\n      return factorySpace(\n        effects,\n        contBefore,\n        'linePrefix',\n        self.parser.constructs.disable.null.includes('codeIndented')\n          ? undefined\n          : 4\n      )(code)\n    }\n    return contBefore(code)\n  }\n\n  /**\n   * At `>`, after optional whitespace.\n   *\n   * Also used to parse the first block quote opening.\n   *\n   * ```markdown\n   *   | > a\n   * > | > b\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function contBefore(code) {\n    return effects.attempt(blockQuote, ok, nok)(code)\n  }\n}\n\n/** @type {Exiter} */\nfunction exit(effects) {\n  effects.exit('blockQuote')\n}\n","/**\n * @typedef {import('micromark-util-types').Effects} Effects\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').TokenType} TokenType\n */\n\nimport {\n  asciiControl,\n  markdownLineEndingOrSpace,\n  markdownLineEnding\n} from 'micromark-util-character'\n/**\n * Parse destinations.\n *\n * ###### Examples\n *\n * ```markdown\n * <a>\n * <a\\>b>\n * <a b>\n * <a)>\n * a\n * a\\)b\n * a(b)c\n * a(b)\n * ```\n *\n * @param {Effects} effects\n *   Context.\n * @param {State} ok\n *   State switched to when successful.\n * @param {State} nok\n *   State switched to when unsuccessful.\n * @param {TokenType} type\n *   Type for whole (`<a>` or `b`).\n * @param {TokenType} literalType\n *   Type when enclosed (`<a>`).\n * @param {TokenType} literalMarkerType\n *   Type for enclosing (`<` and `>`).\n * @param {TokenType} rawType\n *   Type when not enclosed (`b`).\n * @param {TokenType} stringType\n *   Type for the value (`a` or `b`).\n * @param {number | undefined} [max=Infinity]\n *   Depth of nested parens (inclusive).\n * @returns {State}\n *   Start state.\n */ // eslint-disable-next-line max-params\nexport function factoryDestination(\n  effects,\n  ok,\n  nok,\n  type,\n  literalType,\n  literalMarkerType,\n  rawType,\n  stringType,\n  max\n) {\n  const limit = max || Number.POSITIVE_INFINITY\n  let balance = 0\n  return start\n\n  /**\n   * Start of destination.\n   *\n   * ```markdown\n   * > | <aa>\n   *     ^\n   * > | aa\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    if (code === 60) {\n      effects.enter(type)\n      effects.enter(literalType)\n      effects.enter(literalMarkerType)\n      effects.consume(code)\n      effects.exit(literalMarkerType)\n      return enclosedBefore\n    }\n\n    // ASCII control, space, closing paren.\n    if (code === null || code === 32 || code === 41 || asciiControl(code)) {\n      return nok(code)\n    }\n    effects.enter(type)\n    effects.enter(rawType)\n    effects.enter(stringType)\n    effects.enter('chunkString', {\n      contentType: 'string'\n    })\n    return raw(code)\n  }\n\n  /**\n   * After `<`, at an enclosed destination.\n   *\n   * ```markdown\n   * > | <aa>\n   *      ^\n   * ```\n   *\n   * @type {State}\n   */\n  function enclosedBefore(code) {\n    if (code === 62) {\n      effects.enter(literalMarkerType)\n      effects.consume(code)\n      effects.exit(literalMarkerType)\n      effects.exit(literalType)\n      effects.exit(type)\n      return ok\n    }\n    effects.enter(stringType)\n    effects.enter('chunkString', {\n      contentType: 'string'\n    })\n    return enclosed(code)\n  }\n\n  /**\n   * In enclosed destination.\n   *\n   * ```markdown\n   * > | <aa>\n   *      ^\n   * ```\n   *\n   * @type {State}\n   */\n  function enclosed(code) {\n    if (code === 62) {\n      effects.exit('chunkString')\n      effects.exit(stringType)\n      return enclosedBefore(code)\n    }\n    if (code === null || code === 60 || markdownLineEnding(code)) {\n      return nok(code)\n    }\n    effects.consume(code)\n    return code === 92 ? enclosedEscape : enclosed\n  }\n\n  /**\n   * After `\\`, at a special character.\n   *\n   * ```markdown\n   * > | <a\\*a>\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function enclosedEscape(code) {\n    if (code === 60 || code === 62 || code === 92) {\n      effects.consume(code)\n      return enclosed\n    }\n    return enclosed(code)\n  }\n\n  /**\n   * In raw destination.\n   *\n   * ```markdown\n   * > | aa\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function raw(code) {\n    if (\n      !balance &&\n      (code === null || code === 41 || markdownLineEndingOrSpace(code))\n    ) {\n      effects.exit('chunkString')\n      effects.exit(stringType)\n      effects.exit(rawType)\n      effects.exit(type)\n      return ok(code)\n    }\n    if (balance < limit && code === 40) {\n      effects.consume(code)\n      balance++\n      return raw\n    }\n    if (code === 41) {\n      effects.consume(code)\n      balance--\n      return raw\n    }\n\n    // ASCII control (but *not* `\\0`) and space and `(`.\n    // Note: in `markdown-rs`, `\\0` exists in codes, in `micromark-js` it\n    // doesn’t.\n    if (code === null || code === 32 || code === 40 || asciiControl(code)) {\n      return nok(code)\n    }\n    effects.consume(code)\n    return code === 92 ? rawEscape : raw\n  }\n\n  /**\n   * After `\\`, at special character.\n   *\n   * ```markdown\n   * > | a\\*a\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function rawEscape(code) {\n    if (code === 40 || code === 41 || code === 92) {\n      effects.consume(code)\n      return raw\n    }\n    return raw(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Effects} Effects\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').TokenType} TokenType\n */\n\nimport {markdownLineEnding, markdownSpace} from 'micromark-util-character'\n/**\n * Parse labels.\n *\n * > 👉 **Note**: labels in markdown are capped at 999 characters in the string.\n *\n * ###### Examples\n *\n * ```markdown\n * [a]\n * [a\n * b]\n * [a\\]b]\n * ```\n *\n * @this {TokenizeContext}\n *   Tokenize context.\n * @param {Effects} effects\n *   Context.\n * @param {State} ok\n *   State switched to when successful.\n * @param {State} nok\n *   State switched to when unsuccessful.\n * @param {TokenType} type\n *   Type of the whole label (`[a]`).\n * @param {TokenType} markerType\n *   Type for the markers (`[` and `]`).\n * @param {TokenType} stringType\n *   Type for the identifier (`a`).\n * @returns {State}\n *   Start state.\n */ // eslint-disable-next-line max-params\nexport function factoryLabel(effects, ok, nok, type, markerType, stringType) {\n  const self = this\n  let size = 0\n  /** @type {boolean} */\n  let seen\n  return start\n\n  /**\n   * Start of label.\n   *\n   * ```markdown\n   * > | [a]\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    effects.enter(type)\n    effects.enter(markerType)\n    effects.consume(code)\n    effects.exit(markerType)\n    effects.enter(stringType)\n    return atBreak\n  }\n\n  /**\n   * In label, at something, before something else.\n   *\n   * ```markdown\n   * > | [a]\n   *      ^\n   * ```\n   *\n   * @type {State}\n   */\n  function atBreak(code) {\n    if (\n      size > 999 ||\n      code === null ||\n      code === 91 ||\n      (code === 93 && !seen) ||\n      // To do: remove in the future once we’ve switched from\n      // `micromark-extension-footnote` to `micromark-extension-gfm-footnote`,\n      // which doesn’t need this.\n      // Hidden footnotes hook.\n      /* c8 ignore next 3 */\n      (code === 94 &&\n        !size &&\n        '_hiddenFootnoteSupport' in self.parser.constructs)\n    ) {\n      return nok(code)\n    }\n    if (code === 93) {\n      effects.exit(stringType)\n      effects.enter(markerType)\n      effects.consume(code)\n      effects.exit(markerType)\n      effects.exit(type)\n      return ok\n    }\n\n    // To do: indent? Link chunks and EOLs together?\n    if (markdownLineEnding(code)) {\n      effects.enter('lineEnding')\n      effects.consume(code)\n      effects.exit('lineEnding')\n      return atBreak\n    }\n    effects.enter('chunkString', {\n      contentType: 'string'\n    })\n    return labelInside(code)\n  }\n\n  /**\n   * In label, in text.\n   *\n   * ```markdown\n   * > | [a]\n   *      ^\n   * ```\n   *\n   * @type {State}\n   */\n  function labelInside(code) {\n    if (\n      code === null ||\n      code === 91 ||\n      code === 93 ||\n      markdownLineEnding(code) ||\n      size++ > 999\n    ) {\n      effects.exit('chunkString')\n      return atBreak(code)\n    }\n    effects.consume(code)\n    if (!seen) seen = !markdownSpace(code)\n    return code === 92 ? labelEscape : labelInside\n  }\n\n  /**\n   * After `\\`, at a special character.\n   *\n   * ```markdown\n   * > | [a\\*a]\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function labelEscape(code) {\n    if (code === 91 || code === 92 || code === 93) {\n      effects.consume(code)\n      size++\n      return labelInside\n    }\n    return labelInside(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Code} Code\n * @typedef {import('micromark-util-types').Effects} Effects\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').TokenType} TokenType\n */\n\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding} from 'micromark-util-character'\n/**\n * Parse titles.\n *\n * ###### Examples\n *\n * ```markdown\n * \"a\"\n * 'b'\n * (c)\n * \"a\n * b\"\n * 'a\n *     b'\n * (a\\)b)\n * ```\n *\n * @param {Effects} effects\n *   Context.\n * @param {State} ok\n *   State switched to when successful.\n * @param {State} nok\n *   State switched to when unsuccessful.\n * @param {TokenType} type\n *   Type of the whole title (`\"a\"`, `'b'`, `(c)`).\n * @param {TokenType} markerType\n *   Type for the markers (`\"`, `'`, `(`, and `)`).\n * @param {TokenType} stringType\n *   Type for the value (`a`).\n * @returns {State}\n *   Start state.\n */ // eslint-disable-next-line max-params\nexport function factoryTitle(effects, ok, nok, type, markerType, stringType) {\n  /** @type {NonNullable<Code>} */\n  let marker\n  return start\n\n  /**\n   * Start of title.\n   *\n   * ```markdown\n   * > | \"a\"\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    if (code === 34 || code === 39 || code === 40) {\n      effects.enter(type)\n      effects.enter(markerType)\n      effects.consume(code)\n      effects.exit(markerType)\n      marker = code === 40 ? 41 : code\n      return begin\n    }\n    return nok(code)\n  }\n\n  /**\n   * After opening marker.\n   *\n   * This is also used at the closing marker.\n   *\n   * ```markdown\n   * > | \"a\"\n   *      ^\n   * ```\n   *\n   * @type {State}\n   */\n  function begin(code) {\n    if (code === marker) {\n      effects.enter(markerType)\n      effects.consume(code)\n      effects.exit(markerType)\n      effects.exit(type)\n      return ok\n    }\n    effects.enter(stringType)\n    return atBreak(code)\n  }\n\n  /**\n   * At something, before something else.\n   *\n   * ```markdown\n   * > | \"a\"\n   *      ^\n   * ```\n   *\n   * @type {State}\n   */\n  function atBreak(code) {\n    if (code === marker) {\n      effects.exit(stringType)\n      return begin(marker)\n    }\n    if (code === null) {\n      return nok(code)\n    }\n\n    // Note: blank lines can’t exist in content.\n    if (markdownLineEnding(code)) {\n      // To do: use `space_or_tab_eol_with_options`, connect.\n      effects.enter('lineEnding')\n      effects.consume(code)\n      effects.exit('lineEnding')\n      return factorySpace(effects, atBreak, 'linePrefix')\n    }\n    effects.enter('chunkString', {\n      contentType: 'string'\n    })\n    return inside(code)\n  }\n\n  /**\n   *\n   *\n   * @type {State}\n   */\n  function inside(code) {\n    if (code === marker || code === null || markdownLineEnding(code)) {\n      effects.exit('chunkString')\n      return atBreak(code)\n    }\n    effects.consume(code)\n    return code === 92 ? escape : inside\n  }\n\n  /**\n   * After `\\`, at a special character.\n   *\n   * ```markdown\n   * > | \"a\\*b\"\n   *      ^\n   * ```\n   *\n   * @type {State}\n   */\n  function escape(code) {\n    if (code === marker || code === 92) {\n      effects.consume(code)\n      return inside\n    }\n    return inside(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Effects} Effects\n * @typedef {import('micromark-util-types').State} State\n */\n\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding, markdownSpace} from 'micromark-util-character'\n/**\n * Parse spaces and tabs.\n *\n * There is no `nok` parameter:\n *\n * *   line endings or spaces in markdown are often optional, in which case this\n *     factory can be used and `ok` will be switched to whether spaces were found\n *     or not\n * *   one line ending or space can be detected with\n *     `markdownLineEndingOrSpace(code)` right before using `factoryWhitespace`\n *\n * @param {Effects} effects\n *   Context.\n * @param {State} ok\n *   State switched to when successful.\n * @returns {State}\n *   Start state.\n */\nexport function factoryWhitespace(effects, ok) {\n  /** @type {boolean} */\n  let seen\n  return start\n\n  /** @type {State} */\n  function start(code) {\n    if (markdownLineEnding(code)) {\n      effects.enter('lineEnding')\n      effects.consume(code)\n      effects.exit('lineEnding')\n      seen = true\n      return start\n    }\n    if (markdownSpace(code)) {\n      return factorySpace(\n        effects,\n        start,\n        seen ? 'linePrefix' : 'lineSuffix'\n      )(code)\n    }\n    return ok(code)\n  }\n}\n","/**\n * Normalize an identifier (as found in references, definitions).\n *\n * Collapses markdown whitespace, trim, and then lower- and uppercase.\n *\n * Some characters are considered “uppercase”, such as U+03F4 (`ϴ`), but if their\n * lowercase counterpart (U+03B8 (`θ`)) is uppercased will result in a different\n * uppercase character (U+0398 (`Θ`)).\n * So, to get a canonical form, we perform both lower- and uppercase.\n *\n * Using uppercase last makes sure keys will never interact with default\n * prototypal values (such as `constructor`): nothing in the prototype of\n * `Object` is uppercase.\n *\n * @param {string} value\n *   Identifier to normalize.\n * @returns {string}\n *   Normalized identifier.\n */\nexport function normalizeIdentifier(value) {\n  return (\n    value\n      // Collapse markdown whitespace.\n      .replace(/[\\t\\n\\r ]+/g, ' ')\n      // Trim.\n      .replace(/^ | $/g, '')\n      // Some characters are considered “uppercase”, but if their lowercase\n      // counterpart is uppercased will result in a different uppercase\n      // character.\n      // Hence, to get that form, we perform both lower- and uppercase.\n      // Upper case makes sure keys will not interact with default prototypal\n      // methods: no method is uppercase.\n      .toLowerCase()\n      .toUpperCase()\n  )\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n */\n\nimport {factoryDestination} from 'micromark-factory-destination'\nimport {factoryLabel} from 'micromark-factory-label'\nimport {factorySpace} from 'micromark-factory-space'\nimport {factoryTitle} from 'micromark-factory-title'\nimport {factoryWhitespace} from 'micromark-factory-whitespace'\nimport {\n  markdownLineEnding,\n  markdownLineEndingOrSpace,\n  markdownSpace\n} from 'micromark-util-character'\nimport {normalizeIdentifier} from 'micromark-util-normalize-identifier'\n/** @type {Construct} */\nexport const definition = {\n  name: 'definition',\n  tokenize: tokenizeDefinition\n}\n\n/** @type {Construct} */\nconst titleBefore = {\n  tokenize: tokenizeTitleBefore,\n  partial: true\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeDefinition(effects, ok, nok) {\n  const self = this\n  /** @type {string} */\n  let identifier\n  return start\n\n  /**\n   * At start of a definition.\n   *\n   * ```markdown\n   * > | [a]: b \"c\"\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    // Do not interrupt paragraphs (but do follow definitions).\n    // To do: do `interrupt` the way `markdown-rs` does.\n    // To do: parse whitespace the way `markdown-rs` does.\n    effects.enter('definition')\n    return before(code)\n  }\n\n  /**\n   * After optional whitespace, at `[`.\n   *\n   * ```markdown\n   * > | [a]: b \"c\"\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function before(code) {\n    // To do: parse whitespace the way `markdown-rs` does.\n\n    return factoryLabel.call(\n      self,\n      effects,\n      labelAfter,\n      // Note: we don’t need to reset the way `markdown-rs` does.\n      nok,\n      'definitionLabel',\n      'definitionLabelMarker',\n      'definitionLabelString'\n    )(code)\n  }\n\n  /**\n   * After label.\n   *\n   * ```markdown\n   * > | [a]: b \"c\"\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function labelAfter(code) {\n    identifier = normalizeIdentifier(\n      self.sliceSerialize(self.events[self.events.length - 1][1]).slice(1, -1)\n    )\n    if (code === 58) {\n      effects.enter('definitionMarker')\n      effects.consume(code)\n      effects.exit('definitionMarker')\n      return markerAfter\n    }\n    return nok(code)\n  }\n\n  /**\n   * After marker.\n   *\n   * ```markdown\n   * > | [a]: b \"c\"\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function markerAfter(code) {\n    // Note: whitespace is optional.\n    return markdownLineEndingOrSpace(code)\n      ? factoryWhitespace(effects, destinationBefore)(code)\n      : destinationBefore(code)\n  }\n\n  /**\n   * Before destination.\n   *\n   * ```markdown\n   * > | [a]: b \"c\"\n   *          ^\n   * ```\n   *\n   * @type {State}\n   */\n  function destinationBefore(code) {\n    return factoryDestination(\n      effects,\n      destinationAfter,\n      // Note: we don’t need to reset the way `markdown-rs` does.\n      nok,\n      'definitionDestination',\n      'definitionDestinationLiteral',\n      'definitionDestinationLiteralMarker',\n      'definitionDestinationRaw',\n      'definitionDestinationString'\n    )(code)\n  }\n\n  /**\n   * After destination.\n   *\n   * ```markdown\n   * > | [a]: b \"c\"\n   *           ^\n   * ```\n   *\n   * @type {State}\n   */\n  function destinationAfter(code) {\n    return effects.attempt(titleBefore, after, after)(code)\n  }\n\n  /**\n   * After definition.\n   *\n   * ```markdown\n   * > | [a]: b\n   *           ^\n   * > | [a]: b \"c\"\n   *               ^\n   * ```\n   *\n   * @type {State}\n   */\n  function after(code) {\n    return markdownSpace(code)\n      ? factorySpace(effects, afterWhitespace, 'whitespace')(code)\n      : afterWhitespace(code)\n  }\n\n  /**\n   * After definition, after optional whitespace.\n   *\n   * ```markdown\n   * > | [a]: b\n   *           ^\n   * > | [a]: b \"c\"\n   *               ^\n   * ```\n   *\n   * @type {State}\n   */\n  function afterWhitespace(code) {\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit('definition')\n\n      // Note: we don’t care about uniqueness.\n      // It’s likely that that doesn’t happen very frequently.\n      // It is more likely that it wastes precious time.\n      self.parser.defined.push(identifier)\n\n      // To do: `markdown-rs` interrupt.\n      // // You’d be interrupting.\n      // tokenizer.interrupt = true\n      return ok(code)\n    }\n    return nok(code)\n  }\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeTitleBefore(effects, ok, nok) {\n  return titleBefore\n\n  /**\n   * After destination, at whitespace.\n   *\n   * ```markdown\n   * > | [a]: b\n   *           ^\n   * > | [a]: b \"c\"\n   *           ^\n   * ```\n   *\n   * @type {State}\n   */\n  function titleBefore(code) {\n    return markdownLineEndingOrSpace(code)\n      ? factoryWhitespace(effects, beforeMarker)(code)\n      : nok(code)\n  }\n\n  /**\n   * At title.\n   *\n   * ```markdown\n   *   | [a]: b\n   * > | \"c\"\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function beforeMarker(code) {\n    return factoryTitle(\n      effects,\n      titleAfter,\n      nok,\n      'definitionTitle',\n      'definitionTitleMarker',\n      'definitionTitleString'\n    )(code)\n  }\n\n  /**\n   * After title.\n   *\n   * ```markdown\n   * > | [a]: b \"c\"\n   *               ^\n   * ```\n   *\n   * @type {State}\n   */\n  function titleAfter(code) {\n    return markdownSpace(code)\n      ? factorySpace(effects, titleAfterOptionalWhitespace, 'whitespace')(code)\n      : titleAfterOptionalWhitespace(code)\n  }\n\n  /**\n   * After title, after optional whitespace.\n   *\n   * ```markdown\n   * > | [a]: b \"c\"\n   *               ^\n   * ```\n   *\n   * @type {State}\n   */\n  function titleAfterOptionalWhitespace(code) {\n    return code === null || markdownLineEnding(code) ? ok(code) : nok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n */\n\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding, markdownSpace} from 'micromark-util-character'\n/** @type {Construct} */\nexport const codeIndented = {\n  name: 'codeIndented',\n  tokenize: tokenizeCodeIndented\n}\n\n/** @type {Construct} */\nconst furtherStart = {\n  tokenize: tokenizeFurtherStart,\n  partial: true\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeCodeIndented(effects, ok, nok) {\n  const self = this\n  return start\n\n  /**\n   * Start of code (indented).\n   *\n   * > **Parsing note**: it is not needed to check if this first line is a\n   * > filled line (that it has a non-whitespace character), because blank lines\n   * > are parsed already, so we never run into that.\n   *\n   * ```markdown\n   * > |     aaa\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    // To do: manually check if interrupting like `markdown-rs`.\n\n    effects.enter('codeIndented')\n    // To do: use an improved `space_or_tab` function like `markdown-rs`,\n    // so that we can drop the next state.\n    return factorySpace(effects, afterPrefix, 'linePrefix', 4 + 1)(code)\n  }\n\n  /**\n   * At start, after 1 or 4 spaces.\n   *\n   * ```markdown\n   * > |     aaa\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function afterPrefix(code) {\n    const tail = self.events[self.events.length - 1]\n    return tail &&\n      tail[1].type === 'linePrefix' &&\n      tail[2].sliceSerialize(tail[1], true).length >= 4\n      ? atBreak(code)\n      : nok(code)\n  }\n\n  /**\n   * At a break.\n   *\n   * ```markdown\n   * > |     aaa\n   *         ^  ^\n   * ```\n   *\n   * @type {State}\n   */\n  function atBreak(code) {\n    if (code === null) {\n      return after(code)\n    }\n    if (markdownLineEnding(code)) {\n      return effects.attempt(furtherStart, atBreak, after)(code)\n    }\n    effects.enter('codeFlowValue')\n    return inside(code)\n  }\n\n  /**\n   * In code content.\n   *\n   * ```markdown\n   * > |     aaa\n   *         ^^^^\n   * ```\n   *\n   * @type {State}\n   */\n  function inside(code) {\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit('codeFlowValue')\n      return atBreak(code)\n    }\n    effects.consume(code)\n    return inside\n  }\n\n  /** @type {State} */\n  function after(code) {\n    effects.exit('codeIndented')\n    // To do: allow interrupting like `markdown-rs`.\n    // Feel free to interrupt.\n    // tokenizer.interrupt = false\n    return ok(code)\n  }\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeFurtherStart(effects, ok, nok) {\n  const self = this\n  return furtherStart\n\n  /**\n   * At eol, trying to parse another indent.\n   *\n   * ```markdown\n   * > |     aaa\n   *            ^\n   *   |     bbb\n   * ```\n   *\n   * @type {State}\n   */\n  function furtherStart(code) {\n    // To do: improve `lazy` / `pierce` handling.\n    // If this is a lazy line, it can’t be code.\n    if (self.parser.lazy[self.now().line]) {\n      return nok(code)\n    }\n    if (markdownLineEnding(code)) {\n      effects.enter('lineEnding')\n      effects.consume(code)\n      effects.exit('lineEnding')\n      return furtherStart\n    }\n\n    // To do: the code here in `micromark-js` is a bit different from\n    // `markdown-rs` because there it can attempt spaces.\n    // We can’t yet.\n    //\n    // To do: use an improved `space_or_tab` function like `markdown-rs`,\n    // so that we can drop the next state.\n    return factorySpace(effects, afterPrefix, 'linePrefix', 4 + 1)(code)\n  }\n\n  /**\n   * At start, after 1 or 4 spaces.\n   *\n   * ```markdown\n   * > |     aaa\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function afterPrefix(code) {\n    const tail = self.events[self.events.length - 1]\n    return tail &&\n      tail[1].type === 'linePrefix' &&\n      tail[2].sliceSerialize(tail[1], true).length >= 4\n      ? ok(code)\n      : markdownLineEnding(code)\n      ? furtherStart(code)\n      : nok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n */\n\nimport {factorySpace} from 'micromark-factory-space'\nimport {\n  markdownLineEnding,\n  markdownLineEndingOrSpace,\n  markdownSpace\n} from 'micromark-util-character'\nimport {splice} from 'micromark-util-chunked'\n/** @type {Construct} */\nexport const headingAtx = {\n  name: 'headingAtx',\n  tokenize: tokenizeHeadingAtx,\n  resolve: resolveHeadingAtx\n}\n\n/** @type {Resolver} */\nfunction resolveHeadingAtx(events, context) {\n  let contentEnd = events.length - 2\n  let contentStart = 3\n  /** @type {Token} */\n  let content\n  /** @type {Token} */\n  let text\n\n  // Prefix whitespace, part of the opening.\n  if (events[contentStart][1].type === 'whitespace') {\n    contentStart += 2\n  }\n\n  // Suffix whitespace, part of the closing.\n  if (\n    contentEnd - 2 > contentStart &&\n    events[contentEnd][1].type === 'whitespace'\n  ) {\n    contentEnd -= 2\n  }\n  if (\n    events[contentEnd][1].type === 'atxHeadingSequence' &&\n    (contentStart === contentEnd - 1 ||\n      (contentEnd - 4 > contentStart &&\n        events[contentEnd - 2][1].type === 'whitespace'))\n  ) {\n    contentEnd -= contentStart + 1 === contentEnd ? 2 : 4\n  }\n  if (contentEnd > contentStart) {\n    content = {\n      type: 'atxHeadingText',\n      start: events[contentStart][1].start,\n      end: events[contentEnd][1].end\n    }\n    text = {\n      type: 'chunkText',\n      start: events[contentStart][1].start,\n      end: events[contentEnd][1].end,\n      contentType: 'text'\n    }\n    splice(events, contentStart, contentEnd - contentStart + 1, [\n      ['enter', content, context],\n      ['enter', text, context],\n      ['exit', text, context],\n      ['exit', content, context]\n    ])\n  }\n  return events\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeHeadingAtx(effects, ok, nok) {\n  let size = 0\n  return start\n\n  /**\n   * Start of a heading (atx).\n   *\n   * ```markdown\n   * > | ## aa\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    // To do: parse indent like `markdown-rs`.\n    effects.enter('atxHeading')\n    return before(code)\n  }\n\n  /**\n   * After optional whitespace, at `#`.\n   *\n   * ```markdown\n   * > | ## aa\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function before(code) {\n    effects.enter('atxHeadingSequence')\n    return sequenceOpen(code)\n  }\n\n  /**\n   * In opening sequence.\n   *\n   * ```markdown\n   * > | ## aa\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function sequenceOpen(code) {\n    if (code === 35 && size++ < 6) {\n      effects.consume(code)\n      return sequenceOpen\n    }\n\n    // Always at least one `#`.\n    if (code === null || markdownLineEndingOrSpace(code)) {\n      effects.exit('atxHeadingSequence')\n      return atBreak(code)\n    }\n    return nok(code)\n  }\n\n  /**\n   * After something, before something else.\n   *\n   * ```markdown\n   * > | ## aa\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function atBreak(code) {\n    if (code === 35) {\n      effects.enter('atxHeadingSequence')\n      return sequenceFurther(code)\n    }\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit('atxHeading')\n      // To do: interrupt like `markdown-rs`.\n      // // Feel free to interrupt.\n      // tokenizer.interrupt = false\n      return ok(code)\n    }\n    if (markdownSpace(code)) {\n      return factorySpace(effects, atBreak, 'whitespace')(code)\n    }\n\n    // To do: generate `data` tokens, add the `text` token later.\n    // Needs edit map, see: `markdown.rs`.\n    effects.enter('atxHeadingText')\n    return data(code)\n  }\n\n  /**\n   * In further sequence (after whitespace).\n   *\n   * Could be normal “visible” hashes in the heading or a final sequence.\n   *\n   * ```markdown\n   * > | ## aa ##\n   *           ^\n   * ```\n   *\n   * @type {State}\n   */\n  function sequenceFurther(code) {\n    if (code === 35) {\n      effects.consume(code)\n      return sequenceFurther\n    }\n    effects.exit('atxHeadingSequence')\n    return atBreak(code)\n  }\n\n  /**\n   * In text.\n   *\n   * ```markdown\n   * > | ## aa\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function data(code) {\n    if (code === null || code === 35 || markdownLineEndingOrSpace(code)) {\n      effects.exit('atxHeadingText')\n      return atBreak(code)\n    }\n    effects.consume(code)\n    return data\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Code} Code\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n */\n\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding, markdownSpace} from 'micromark-util-character'\n/** @type {Construct} */\nexport const setextUnderline = {\n  name: 'setextUnderline',\n  tokenize: tokenizeSetextUnderline,\n  resolveTo: resolveToSetextUnderline\n}\n\n/** @type {Resolver} */\nfunction resolveToSetextUnderline(events, context) {\n  // To do: resolve like `markdown-rs`.\n  let index = events.length\n  /** @type {number | undefined} */\n  let content\n  /** @type {number | undefined} */\n  let text\n  /** @type {number | undefined} */\n  let definition\n\n  // Find the opening of the content.\n  // It’ll always exist: we don’t tokenize if it isn’t there.\n  while (index--) {\n    if (events[index][0] === 'enter') {\n      if (events[index][1].type === 'content') {\n        content = index\n        break\n      }\n      if (events[index][1].type === 'paragraph') {\n        text = index\n      }\n    }\n    // Exit\n    else {\n      if (events[index][1].type === 'content') {\n        // Remove the content end (if needed we’ll add it later)\n        events.splice(index, 1)\n      }\n      if (!definition && events[index][1].type === 'definition') {\n        definition = index\n      }\n    }\n  }\n  const heading = {\n    type: 'setextHeading',\n    start: Object.assign({}, events[text][1].start),\n    end: Object.assign({}, events[events.length - 1][1].end)\n  }\n\n  // Change the paragraph to setext heading text.\n  events[text][1].type = 'setextHeadingText'\n\n  // If we have definitions in the content, we’ll keep on having content,\n  // but we need move it.\n  if (definition) {\n    events.splice(text, 0, ['enter', heading, context])\n    events.splice(definition + 1, 0, ['exit', events[content][1], context])\n    events[content][1].end = Object.assign({}, events[definition][1].end)\n  } else {\n    events[content][1] = heading\n  }\n\n  // Add the heading exit at the end.\n  events.push(['exit', heading, context])\n  return events\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeSetextUnderline(effects, ok, nok) {\n  const self = this\n  /** @type {NonNullable<Code>} */\n  let marker\n  return start\n\n  /**\n   * At start of heading (setext) underline.\n   *\n   * ```markdown\n   *   | aa\n   * > | ==\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    let index = self.events.length\n    /** @type {boolean | undefined} */\n    let paragraph\n    // Find an opening.\n    while (index--) {\n      // Skip enter/exit of line ending, line prefix, and content.\n      // We can now either have a definition or a paragraph.\n      if (\n        self.events[index][1].type !== 'lineEnding' &&\n        self.events[index][1].type !== 'linePrefix' &&\n        self.events[index][1].type !== 'content'\n      ) {\n        paragraph = self.events[index][1].type === 'paragraph'\n        break\n      }\n    }\n\n    // To do: handle lazy/pierce like `markdown-rs`.\n    // To do: parse indent like `markdown-rs`.\n    if (!self.parser.lazy[self.now().line] && (self.interrupt || paragraph)) {\n      effects.enter('setextHeadingLine')\n      marker = code\n      return before(code)\n    }\n    return nok(code)\n  }\n\n  /**\n   * After optional whitespace, at `-` or `=`.\n   *\n   * ```markdown\n   *   | aa\n   * > | ==\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function before(code) {\n    effects.enter('setextHeadingLineSequence')\n    return inside(code)\n  }\n\n  /**\n   * In sequence.\n   *\n   * ```markdown\n   *   | aa\n   * > | ==\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function inside(code) {\n    if (code === marker) {\n      effects.consume(code)\n      return inside\n    }\n    effects.exit('setextHeadingLineSequence')\n    return markdownSpace(code)\n      ? factorySpace(effects, after, 'lineSuffix')(code)\n      : after(code)\n  }\n\n  /**\n   * After sequence, after optional whitespace.\n   *\n   * ```markdown\n   *   | aa\n   * > | ==\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function after(code) {\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit('setextHeadingLine')\n      return ok(code)\n    }\n    return nok(code)\n  }\n}\n","/**\n * List of lowercase HTML “block” tag names.\n *\n * The list, when parsing HTML (flow), results in more relaxed rules (condition\n * 6).\n * Because they are known blocks, the HTML-like syntax doesn’t have to be\n * strictly parsed.\n * For tag names not in this list, a more strict algorithm (condition 7) is used\n * to detect whether the HTML-like syntax is seen as HTML (flow) or not.\n *\n * This is copied from:\n * <https://spec.commonmark.org/0.30/#html-blocks>.\n *\n * > 👉 **Note**: `search` was added in `CommonMark@0.31`.\n */\nexport const htmlBlockNames = [\n  'address',\n  'article',\n  'aside',\n  'base',\n  'basefont',\n  'blockquote',\n  'body',\n  'caption',\n  'center',\n  'col',\n  'colgroup',\n  'dd',\n  'details',\n  'dialog',\n  'dir',\n  'div',\n  'dl',\n  'dt',\n  'fieldset',\n  'figcaption',\n  'figure',\n  'footer',\n  'form',\n  'frame',\n  'frameset',\n  'h1',\n  'h2',\n  'h3',\n  'h4',\n  'h5',\n  'h6',\n  'head',\n  'header',\n  'hr',\n  'html',\n  'iframe',\n  'legend',\n  'li',\n  'link',\n  'main',\n  'menu',\n  'menuitem',\n  'nav',\n  'noframes',\n  'ol',\n  'optgroup',\n  'option',\n  'p',\n  'param',\n  'search',\n  'section',\n  'summary',\n  'table',\n  'tbody',\n  'td',\n  'tfoot',\n  'th',\n  'thead',\n  'title',\n  'tr',\n  'track',\n  'ul'\n]\n\n/**\n * List of lowercase HTML “raw” tag names.\n *\n * The list, when parsing HTML (flow), results in HTML that can include lines\n * without exiting, until a closing tag also in this list is found (condition\n * 1).\n *\n * This module is copied from:\n * <https://spec.commonmark.org/0.30/#html-blocks>.\n *\n * > 👉 **Note**: `textarea` was added in `CommonMark@0.30`.\n */\nexport const htmlRawNames = ['pre', 'script', 'style', 'textarea']\n","/**\n * @typedef {import('micromark-util-types').Code} Code\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n */\n\nimport {\n  asciiAlpha,\n  asciiAlphanumeric,\n  markdownLineEnding,\n  markdownLineEndingOrSpace,\n  markdownSpace\n} from 'micromark-util-character'\nimport {htmlBlockNames, htmlRawNames} from 'micromark-util-html-tag-name'\nimport {blankLine} from './blank-line.js'\n\n/** @type {Construct} */\nexport const htmlFlow = {\n  name: 'htmlFlow',\n  tokenize: tokenizeHtmlFlow,\n  resolveTo: resolveToHtmlFlow,\n  concrete: true\n}\n\n/** @type {Construct} */\nconst blankLineBefore = {\n  tokenize: tokenizeBlankLineBefore,\n  partial: true\n}\nconst nonLazyContinuationStart = {\n  tokenize: tokenizeNonLazyContinuationStart,\n  partial: true\n}\n\n/** @type {Resolver} */\nfunction resolveToHtmlFlow(events) {\n  let index = events.length\n  while (index--) {\n    if (events[index][0] === 'enter' && events[index][1].type === 'htmlFlow') {\n      break\n    }\n  }\n  if (index > 1 && events[index - 2][1].type === 'linePrefix') {\n    // Add the prefix start to the HTML token.\n    events[index][1].start = events[index - 2][1].start\n    // Add the prefix start to the HTML line token.\n    events[index + 1][1].start = events[index - 2][1].start\n    // Remove the line prefix.\n    events.splice(index - 2, 2)\n  }\n  return events\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeHtmlFlow(effects, ok, nok) {\n  const self = this\n  /** @type {number} */\n  let marker\n  /** @type {boolean} */\n  let closingTag\n  /** @type {string} */\n  let buffer\n  /** @type {number} */\n  let index\n  /** @type {Code} */\n  let markerB\n  return start\n\n  /**\n   * Start of HTML (flow).\n   *\n   * ```markdown\n   * > | <x />\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    // To do: parse indent like `markdown-rs`.\n    return before(code)\n  }\n\n  /**\n   * At `<`, after optional whitespace.\n   *\n   * ```markdown\n   * > | <x />\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function before(code) {\n    effects.enter('htmlFlow')\n    effects.enter('htmlFlowData')\n    effects.consume(code)\n    return open\n  }\n\n  /**\n   * After `<`, at tag name or other stuff.\n   *\n   * ```markdown\n   * > | <x />\n   *      ^\n   * > | <!doctype>\n   *      ^\n   * > | <!--xxx-->\n   *      ^\n   * ```\n   *\n   * @type {State}\n   */\n  function open(code) {\n    if (code === 33) {\n      effects.consume(code)\n      return declarationOpen\n    }\n    if (code === 47) {\n      effects.consume(code)\n      closingTag = true\n      return tagCloseStart\n    }\n    if (code === 63) {\n      effects.consume(code)\n      marker = 3\n      // To do:\n      // tokenizer.concrete = true\n      // To do: use `markdown-rs` style interrupt.\n      // While we’re in an instruction instead of a declaration, we’re on a `?`\n      // right now, so we do need to search for `>`, similar to declarations.\n      return self.interrupt ? ok : continuationDeclarationInside\n    }\n\n    // ASCII alphabetical.\n    if (asciiAlpha(code)) {\n      effects.consume(code)\n      // @ts-expect-error: not null.\n      buffer = String.fromCharCode(code)\n      return tagName\n    }\n    return nok(code)\n  }\n\n  /**\n   * After `<!`, at declaration, comment, or CDATA.\n   *\n   * ```markdown\n   * > | <!doctype>\n   *       ^\n   * > | <!--xxx-->\n   *       ^\n   * > | <![CDATA[>&<]]>\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function declarationOpen(code) {\n    if (code === 45) {\n      effects.consume(code)\n      marker = 2\n      return commentOpenInside\n    }\n    if (code === 91) {\n      effects.consume(code)\n      marker = 5\n      index = 0\n      return cdataOpenInside\n    }\n\n    // ASCII alphabetical.\n    if (asciiAlpha(code)) {\n      effects.consume(code)\n      marker = 4\n      // // Do not form containers.\n      // tokenizer.concrete = true\n      return self.interrupt ? ok : continuationDeclarationInside\n    }\n    return nok(code)\n  }\n\n  /**\n   * After `<!-`, inside a comment, at another `-`.\n   *\n   * ```markdown\n   * > | <!--xxx-->\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function commentOpenInside(code) {\n    if (code === 45) {\n      effects.consume(code)\n      // // Do not form containers.\n      // tokenizer.concrete = true\n      return self.interrupt ? ok : continuationDeclarationInside\n    }\n    return nok(code)\n  }\n\n  /**\n   * After `<![`, inside CDATA, expecting `CDATA[`.\n   *\n   * ```markdown\n   * > | <![CDATA[>&<]]>\n   *        ^^^^^^\n   * ```\n   *\n   * @type {State}\n   */\n  function cdataOpenInside(code) {\n    const value = 'CDATA['\n    if (code === value.charCodeAt(index++)) {\n      effects.consume(code)\n      if (index === value.length) {\n        // // Do not form containers.\n        // tokenizer.concrete = true\n        return self.interrupt ? ok : continuation\n      }\n      return cdataOpenInside\n    }\n    return nok(code)\n  }\n\n  /**\n   * After `</`, in closing tag, at tag name.\n   *\n   * ```markdown\n   * > | </x>\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function tagCloseStart(code) {\n    if (asciiAlpha(code)) {\n      effects.consume(code)\n      // @ts-expect-error: not null.\n      buffer = String.fromCharCode(code)\n      return tagName\n    }\n    return nok(code)\n  }\n\n  /**\n   * In tag name.\n   *\n   * ```markdown\n   * > | <ab>\n   *      ^^\n   * > | </ab>\n   *       ^^\n   * ```\n   *\n   * @type {State}\n   */\n  function tagName(code) {\n    if (\n      code === null ||\n      code === 47 ||\n      code === 62 ||\n      markdownLineEndingOrSpace(code)\n    ) {\n      const slash = code === 47\n      const name = buffer.toLowerCase()\n      if (!slash && !closingTag && htmlRawNames.includes(name)) {\n        marker = 1\n        // // Do not form containers.\n        // tokenizer.concrete = true\n        return self.interrupt ? ok(code) : continuation(code)\n      }\n      if (htmlBlockNames.includes(buffer.toLowerCase())) {\n        marker = 6\n        if (slash) {\n          effects.consume(code)\n          return basicSelfClosing\n        }\n\n        // // Do not form containers.\n        // tokenizer.concrete = true\n        return self.interrupt ? ok(code) : continuation(code)\n      }\n      marker = 7\n      // Do not support complete HTML when interrupting.\n      return self.interrupt && !self.parser.lazy[self.now().line]\n        ? nok(code)\n        : closingTag\n        ? completeClosingTagAfter(code)\n        : completeAttributeNameBefore(code)\n    }\n\n    // ASCII alphanumerical and `-`.\n    if (code === 45 || asciiAlphanumeric(code)) {\n      effects.consume(code)\n      buffer += String.fromCharCode(code)\n      return tagName\n    }\n    return nok(code)\n  }\n\n  /**\n   * After closing slash of a basic tag name.\n   *\n   * ```markdown\n   * > | <div/>\n   *          ^\n   * ```\n   *\n   * @type {State}\n   */\n  function basicSelfClosing(code) {\n    if (code === 62) {\n      effects.consume(code)\n      // // Do not form containers.\n      // tokenizer.concrete = true\n      return self.interrupt ? ok : continuation\n    }\n    return nok(code)\n  }\n\n  /**\n   * After closing slash of a complete tag name.\n   *\n   * ```markdown\n   * > | <x/>\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function completeClosingTagAfter(code) {\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return completeClosingTagAfter\n    }\n    return completeEnd(code)\n  }\n\n  /**\n   * At an attribute name.\n   *\n   * At first, this state is used after a complete tag name, after whitespace,\n   * where it expects optional attributes or the end of the tag.\n   * It is also reused after attributes, when expecting more optional\n   * attributes.\n   *\n   * ```markdown\n   * > | <a />\n   *        ^\n   * > | <a :b>\n   *        ^\n   * > | <a _b>\n   *        ^\n   * > | <a b>\n   *        ^\n   * > | <a >\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function completeAttributeNameBefore(code) {\n    if (code === 47) {\n      effects.consume(code)\n      return completeEnd\n    }\n\n    // ASCII alphanumerical and `:` and `_`.\n    if (code === 58 || code === 95 || asciiAlpha(code)) {\n      effects.consume(code)\n      return completeAttributeName\n    }\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return completeAttributeNameBefore\n    }\n    return completeEnd(code)\n  }\n\n  /**\n   * In attribute name.\n   *\n   * ```markdown\n   * > | <a :b>\n   *         ^\n   * > | <a _b>\n   *         ^\n   * > | <a b>\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function completeAttributeName(code) {\n    // ASCII alphanumerical and `-`, `.`, `:`, and `_`.\n    if (\n      code === 45 ||\n      code === 46 ||\n      code === 58 ||\n      code === 95 ||\n      asciiAlphanumeric(code)\n    ) {\n      effects.consume(code)\n      return completeAttributeName\n    }\n    return completeAttributeNameAfter(code)\n  }\n\n  /**\n   * After attribute name, at an optional initializer, the end of the tag, or\n   * whitespace.\n   *\n   * ```markdown\n   * > | <a b>\n   *         ^\n   * > | <a b=c>\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function completeAttributeNameAfter(code) {\n    if (code === 61) {\n      effects.consume(code)\n      return completeAttributeValueBefore\n    }\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return completeAttributeNameAfter\n    }\n    return completeAttributeNameBefore(code)\n  }\n\n  /**\n   * Before unquoted, double quoted, or single quoted attribute value, allowing\n   * whitespace.\n   *\n   * ```markdown\n   * > | <a b=c>\n   *          ^\n   * > | <a b=\"c\">\n   *          ^\n   * ```\n   *\n   * @type {State}\n   */\n  function completeAttributeValueBefore(code) {\n    if (\n      code === null ||\n      code === 60 ||\n      code === 61 ||\n      code === 62 ||\n      code === 96\n    ) {\n      return nok(code)\n    }\n    if (code === 34 || code === 39) {\n      effects.consume(code)\n      markerB = code\n      return completeAttributeValueQuoted\n    }\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return completeAttributeValueBefore\n    }\n    return completeAttributeValueUnquoted(code)\n  }\n\n  /**\n   * In double or single quoted attribute value.\n   *\n   * ```markdown\n   * > | <a b=\"c\">\n   *           ^\n   * > | <a b='c'>\n   *           ^\n   * ```\n   *\n   * @type {State}\n   */\n  function completeAttributeValueQuoted(code) {\n    if (code === markerB) {\n      effects.consume(code)\n      markerB = null\n      return completeAttributeValueQuotedAfter\n    }\n    if (code === null || markdownLineEnding(code)) {\n      return nok(code)\n    }\n    effects.consume(code)\n    return completeAttributeValueQuoted\n  }\n\n  /**\n   * In unquoted attribute value.\n   *\n   * ```markdown\n   * > | <a b=c>\n   *          ^\n   * ```\n   *\n   * @type {State}\n   */\n  function completeAttributeValueUnquoted(code) {\n    if (\n      code === null ||\n      code === 34 ||\n      code === 39 ||\n      code === 47 ||\n      code === 60 ||\n      code === 61 ||\n      code === 62 ||\n      code === 96 ||\n      markdownLineEndingOrSpace(code)\n    ) {\n      return completeAttributeNameAfter(code)\n    }\n    effects.consume(code)\n    return completeAttributeValueUnquoted\n  }\n\n  /**\n   * After double or single quoted attribute value, before whitespace or the\n   * end of the tag.\n   *\n   * ```markdown\n   * > | <a b=\"c\">\n   *            ^\n   * ```\n   *\n   * @type {State}\n   */\n  function completeAttributeValueQuotedAfter(code) {\n    if (code === 47 || code === 62 || markdownSpace(code)) {\n      return completeAttributeNameBefore(code)\n    }\n    return nok(code)\n  }\n\n  /**\n   * In certain circumstances of a complete tag where only an `>` is allowed.\n   *\n   * ```markdown\n   * > | <a b=\"c\">\n   *             ^\n   * ```\n   *\n   * @type {State}\n   */\n  function completeEnd(code) {\n    if (code === 62) {\n      effects.consume(code)\n      return completeAfter\n    }\n    return nok(code)\n  }\n\n  /**\n   * After `>` in a complete tag.\n   *\n   * ```markdown\n   * > | <x>\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function completeAfter(code) {\n    if (code === null || markdownLineEnding(code)) {\n      // // Do not form containers.\n      // tokenizer.concrete = true\n      return continuation(code)\n    }\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return completeAfter\n    }\n    return nok(code)\n  }\n\n  /**\n   * In continuation of any HTML kind.\n   *\n   * ```markdown\n   * > | <!--xxx-->\n   *          ^\n   * ```\n   *\n   * @type {State}\n   */\n  function continuation(code) {\n    if (code === 45 && marker === 2) {\n      effects.consume(code)\n      return continuationCommentInside\n    }\n    if (code === 60 && marker === 1) {\n      effects.consume(code)\n      return continuationRawTagOpen\n    }\n    if (code === 62 && marker === 4) {\n      effects.consume(code)\n      return continuationClose\n    }\n    if (code === 63 && marker === 3) {\n      effects.consume(code)\n      return continuationDeclarationInside\n    }\n    if (code === 93 && marker === 5) {\n      effects.consume(code)\n      return continuationCdataInside\n    }\n    if (markdownLineEnding(code) && (marker === 6 || marker === 7)) {\n      effects.exit('htmlFlowData')\n      return effects.check(\n        blankLineBefore,\n        continuationAfter,\n        continuationStart\n      )(code)\n    }\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit('htmlFlowData')\n      return continuationStart(code)\n    }\n    effects.consume(code)\n    return continuation\n  }\n\n  /**\n   * In continuation, at eol.\n   *\n   * ```markdown\n   * > | <x>\n   *        ^\n   *   | asd\n   * ```\n   *\n   * @type {State}\n   */\n  function continuationStart(code) {\n    return effects.check(\n      nonLazyContinuationStart,\n      continuationStartNonLazy,\n      continuationAfter\n    )(code)\n  }\n\n  /**\n   * In continuation, at eol, before non-lazy content.\n   *\n   * ```markdown\n   * > | <x>\n   *        ^\n   *   | asd\n   * ```\n   *\n   * @type {State}\n   */\n  function continuationStartNonLazy(code) {\n    effects.enter('lineEnding')\n    effects.consume(code)\n    effects.exit('lineEnding')\n    return continuationBefore\n  }\n\n  /**\n   * In continuation, before non-lazy content.\n   *\n   * ```markdown\n   *   | <x>\n   * > | asd\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function continuationBefore(code) {\n    if (code === null || markdownLineEnding(code)) {\n      return continuationStart(code)\n    }\n    effects.enter('htmlFlowData')\n    return continuation(code)\n  }\n\n  /**\n   * In comment continuation, after one `-`, expecting another.\n   *\n   * ```markdown\n   * > | <!--xxx-->\n   *             ^\n   * ```\n   *\n   * @type {State}\n   */\n  function continuationCommentInside(code) {\n    if (code === 45) {\n      effects.consume(code)\n      return continuationDeclarationInside\n    }\n    return continuation(code)\n  }\n\n  /**\n   * In raw continuation, after `<`, at `/`.\n   *\n   * ```markdown\n   * > | <script>console.log(1)</script>\n   *                            ^\n   * ```\n   *\n   * @type {State}\n   */\n  function continuationRawTagOpen(code) {\n    if (code === 47) {\n      effects.consume(code)\n      buffer = ''\n      return continuationRawEndTag\n    }\n    return continuation(code)\n  }\n\n  /**\n   * In raw continuation, after `</`, in a raw tag name.\n   *\n   * ```markdown\n   * > | <script>console.log(1)</script>\n   *                             ^^^^^^\n   * ```\n   *\n   * @type {State}\n   */\n  function continuationRawEndTag(code) {\n    if (code === 62) {\n      const name = buffer.toLowerCase()\n      if (htmlRawNames.includes(name)) {\n        effects.consume(code)\n        return continuationClose\n      }\n      return continuation(code)\n    }\n    if (asciiAlpha(code) && buffer.length < 8) {\n      effects.consume(code)\n      // @ts-expect-error: not null.\n      buffer += String.fromCharCode(code)\n      return continuationRawEndTag\n    }\n    return continuation(code)\n  }\n\n  /**\n   * In cdata continuation, after `]`, expecting `]>`.\n   *\n   * ```markdown\n   * > | <![CDATA[>&<]]>\n   *                  ^\n   * ```\n   *\n   * @type {State}\n   */\n  function continuationCdataInside(code) {\n    if (code === 93) {\n      effects.consume(code)\n      return continuationDeclarationInside\n    }\n    return continuation(code)\n  }\n\n  /**\n   * In declaration or instruction continuation, at `>`.\n   *\n   * ```markdown\n   * > | <!-->\n   *         ^\n   * > | <?>\n   *       ^\n   * > | <!q>\n   *        ^\n   * > | <!--ab-->\n   *             ^\n   * > | <![CDATA[>&<]]>\n   *                   ^\n   * ```\n   *\n   * @type {State}\n   */\n  function continuationDeclarationInside(code) {\n    if (code === 62) {\n      effects.consume(code)\n      return continuationClose\n    }\n\n    // More dashes.\n    if (code === 45 && marker === 2) {\n      effects.consume(code)\n      return continuationDeclarationInside\n    }\n    return continuation(code)\n  }\n\n  /**\n   * In closed continuation: everything we get until the eol/eof is part of it.\n   *\n   * ```markdown\n   * > | <!doctype>\n   *               ^\n   * ```\n   *\n   * @type {State}\n   */\n  function continuationClose(code) {\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit('htmlFlowData')\n      return continuationAfter(code)\n    }\n    effects.consume(code)\n    return continuationClose\n  }\n\n  /**\n   * Done.\n   *\n   * ```markdown\n   * > | <!doctype>\n   *               ^\n   * ```\n   *\n   * @type {State}\n   */\n  function continuationAfter(code) {\n    effects.exit('htmlFlow')\n    // // Feel free to interrupt.\n    // tokenizer.interrupt = false\n    // // No longer concrete.\n    // tokenizer.concrete = false\n    return ok(code)\n  }\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeNonLazyContinuationStart(effects, ok, nok) {\n  const self = this\n  return start\n\n  /**\n   * At eol, before continuation.\n   *\n   * ```markdown\n   * > | * ```js\n   *            ^\n   *   | b\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    if (markdownLineEnding(code)) {\n      effects.enter('lineEnding')\n      effects.consume(code)\n      effects.exit('lineEnding')\n      return after\n    }\n    return nok(code)\n  }\n\n  /**\n   * A continuation.\n   *\n   * ```markdown\n   *   | * ```js\n   * > | b\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function after(code) {\n    return self.parser.lazy[self.now().line] ? nok(code) : ok(code)\n  }\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeBlankLineBefore(effects, ok, nok) {\n  return start\n\n  /**\n   * Before eol, expecting blank line.\n   *\n   * ```markdown\n   * > | <div>\n   *          ^\n   *   |\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    effects.enter('lineEnding')\n    effects.consume(code)\n    effects.exit('lineEnding')\n    return effects.attempt(blankLine, ok, nok)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Code} Code\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n */\n\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding, markdownSpace} from 'micromark-util-character'\n/** @type {Construct} */\nconst nonLazyContinuation = {\n  tokenize: tokenizeNonLazyContinuation,\n  partial: true\n}\n\n/** @type {Construct} */\nexport const codeFenced = {\n  name: 'codeFenced',\n  tokenize: tokenizeCodeFenced,\n  concrete: true\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeCodeFenced(effects, ok, nok) {\n  const self = this\n  /** @type {Construct} */\n  const closeStart = {\n    tokenize: tokenizeCloseStart,\n    partial: true\n  }\n  let initialPrefix = 0\n  let sizeOpen = 0\n  /** @type {NonNullable<Code>} */\n  let marker\n  return start\n\n  /**\n   * Start of code.\n   *\n   * ```markdown\n   * > | ~~~js\n   *     ^\n   *   | alert(1)\n   *   | ~~~\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    // To do: parse whitespace like `markdown-rs`.\n    return beforeSequenceOpen(code)\n  }\n\n  /**\n   * In opening fence, after prefix, at sequence.\n   *\n   * ```markdown\n   * > | ~~~js\n   *     ^\n   *   | alert(1)\n   *   | ~~~\n   * ```\n   *\n   * @type {State}\n   */\n  function beforeSequenceOpen(code) {\n    const tail = self.events[self.events.length - 1]\n    initialPrefix =\n      tail && tail[1].type === 'linePrefix'\n        ? tail[2].sliceSerialize(tail[1], true).length\n        : 0\n    marker = code\n    effects.enter('codeFenced')\n    effects.enter('codeFencedFence')\n    effects.enter('codeFencedFenceSequence')\n    return sequenceOpen(code)\n  }\n\n  /**\n   * In opening fence sequence.\n   *\n   * ```markdown\n   * > | ~~~js\n   *      ^\n   *   | alert(1)\n   *   | ~~~\n   * ```\n   *\n   * @type {State}\n   */\n  function sequenceOpen(code) {\n    if (code === marker) {\n      sizeOpen++\n      effects.consume(code)\n      return sequenceOpen\n    }\n    if (sizeOpen < 3) {\n      return nok(code)\n    }\n    effects.exit('codeFencedFenceSequence')\n    return markdownSpace(code)\n      ? factorySpace(effects, infoBefore, 'whitespace')(code)\n      : infoBefore(code)\n  }\n\n  /**\n   * In opening fence, after the sequence (and optional whitespace), before info.\n   *\n   * ```markdown\n   * > | ~~~js\n   *        ^\n   *   | alert(1)\n   *   | ~~~\n   * ```\n   *\n   * @type {State}\n   */\n  function infoBefore(code) {\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit('codeFencedFence')\n      return self.interrupt\n        ? ok(code)\n        : effects.check(nonLazyContinuation, atNonLazyBreak, after)(code)\n    }\n    effects.enter('codeFencedFenceInfo')\n    effects.enter('chunkString', {\n      contentType: 'string'\n    })\n    return info(code)\n  }\n\n  /**\n   * In info.\n   *\n   * ```markdown\n   * > | ~~~js\n   *        ^\n   *   | alert(1)\n   *   | ~~~\n   * ```\n   *\n   * @type {State}\n   */\n  function info(code) {\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit('chunkString')\n      effects.exit('codeFencedFenceInfo')\n      return infoBefore(code)\n    }\n    if (markdownSpace(code)) {\n      effects.exit('chunkString')\n      effects.exit('codeFencedFenceInfo')\n      return factorySpace(effects, metaBefore, 'whitespace')(code)\n    }\n    if (code === 96 && code === marker) {\n      return nok(code)\n    }\n    effects.consume(code)\n    return info\n  }\n\n  /**\n   * In opening fence, after info and whitespace, before meta.\n   *\n   * ```markdown\n   * > | ~~~js eval\n   *           ^\n   *   | alert(1)\n   *   | ~~~\n   * ```\n   *\n   * @type {State}\n   */\n  function metaBefore(code) {\n    if (code === null || markdownLineEnding(code)) {\n      return infoBefore(code)\n    }\n    effects.enter('codeFencedFenceMeta')\n    effects.enter('chunkString', {\n      contentType: 'string'\n    })\n    return meta(code)\n  }\n\n  /**\n   * In meta.\n   *\n   * ```markdown\n   * > | ~~~js eval\n   *           ^\n   *   | alert(1)\n   *   | ~~~\n   * ```\n   *\n   * @type {State}\n   */\n  function meta(code) {\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit('chunkString')\n      effects.exit('codeFencedFenceMeta')\n      return infoBefore(code)\n    }\n    if (code === 96 && code === marker) {\n      return nok(code)\n    }\n    effects.consume(code)\n    return meta\n  }\n\n  /**\n   * At eol/eof in code, before a non-lazy closing fence or content.\n   *\n   * ```markdown\n   * > | ~~~js\n   *          ^\n   * > | alert(1)\n   *             ^\n   *   | ~~~\n   * ```\n   *\n   * @type {State}\n   */\n  function atNonLazyBreak(code) {\n    return effects.attempt(closeStart, after, contentBefore)(code)\n  }\n\n  /**\n   * Before code content, not a closing fence, at eol.\n   *\n   * ```markdown\n   *   | ~~~js\n   * > | alert(1)\n   *             ^\n   *   | ~~~\n   * ```\n   *\n   * @type {State}\n   */\n  function contentBefore(code) {\n    effects.enter('lineEnding')\n    effects.consume(code)\n    effects.exit('lineEnding')\n    return contentStart\n  }\n\n  /**\n   * Before code content, not a closing fence.\n   *\n   * ```markdown\n   *   | ~~~js\n   * > | alert(1)\n   *     ^\n   *   | ~~~\n   * ```\n   *\n   * @type {State}\n   */\n  function contentStart(code) {\n    return initialPrefix > 0 && markdownSpace(code)\n      ? factorySpace(\n          effects,\n          beforeContentChunk,\n          'linePrefix',\n          initialPrefix + 1\n        )(code)\n      : beforeContentChunk(code)\n  }\n\n  /**\n   * Before code content, after optional prefix.\n   *\n   * ```markdown\n   *   | ~~~js\n   * > | alert(1)\n   *     ^\n   *   | ~~~\n   * ```\n   *\n   * @type {State}\n   */\n  function beforeContentChunk(code) {\n    if (code === null || markdownLineEnding(code)) {\n      return effects.check(nonLazyContinuation, atNonLazyBreak, after)(code)\n    }\n    effects.enter('codeFlowValue')\n    return contentChunk(code)\n  }\n\n  /**\n   * In code content.\n   *\n   * ```markdown\n   *   | ~~~js\n   * > | alert(1)\n   *     ^^^^^^^^\n   *   | ~~~\n   * ```\n   *\n   * @type {State}\n   */\n  function contentChunk(code) {\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit('codeFlowValue')\n      return beforeContentChunk(code)\n    }\n    effects.consume(code)\n    return contentChunk\n  }\n\n  /**\n   * After code.\n   *\n   * ```markdown\n   *   | ~~~js\n   *   | alert(1)\n   * > | ~~~\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function after(code) {\n    effects.exit('codeFenced')\n    return ok(code)\n  }\n\n  /**\n   * @this {TokenizeContext}\n   * @type {Tokenizer}\n   */\n  function tokenizeCloseStart(effects, ok, nok) {\n    let size = 0\n    return startBefore\n\n    /**\n     *\n     *\n     * @type {State}\n     */\n    function startBefore(code) {\n      effects.enter('lineEnding')\n      effects.consume(code)\n      effects.exit('lineEnding')\n      return start\n    }\n\n    /**\n     * Before closing fence, at optional whitespace.\n     *\n     * ```markdown\n     *   | ~~~js\n     *   | alert(1)\n     * > | ~~~\n     *     ^\n     * ```\n     *\n     * @type {State}\n     */\n    function start(code) {\n      // Always populated by defaults.\n\n      // To do: `enter` here or in next state?\n      effects.enter('codeFencedFence')\n      return markdownSpace(code)\n        ? factorySpace(\n            effects,\n            beforeSequenceClose,\n            'linePrefix',\n            self.parser.constructs.disable.null.includes('codeIndented')\n              ? undefined\n              : 4\n          )(code)\n        : beforeSequenceClose(code)\n    }\n\n    /**\n     * In closing fence, after optional whitespace, at sequence.\n     *\n     * ```markdown\n     *   | ~~~js\n     *   | alert(1)\n     * > | ~~~\n     *     ^\n     * ```\n     *\n     * @type {State}\n     */\n    function beforeSequenceClose(code) {\n      if (code === marker) {\n        effects.enter('codeFencedFenceSequence')\n        return sequenceClose(code)\n      }\n      return nok(code)\n    }\n\n    /**\n     * In closing fence sequence.\n     *\n     * ```markdown\n     *   | ~~~js\n     *   | alert(1)\n     * > | ~~~\n     *     ^\n     * ```\n     *\n     * @type {State}\n     */\n    function sequenceClose(code) {\n      if (code === marker) {\n        size++\n        effects.consume(code)\n        return sequenceClose\n      }\n      if (size >= sizeOpen) {\n        effects.exit('codeFencedFenceSequence')\n        return markdownSpace(code)\n          ? factorySpace(effects, sequenceCloseAfter, 'whitespace')(code)\n          : sequenceCloseAfter(code)\n      }\n      return nok(code)\n    }\n\n    /**\n     * After closing fence sequence, after optional whitespace.\n     *\n     * ```markdown\n     *   | ~~~js\n     *   | alert(1)\n     * > | ~~~\n     *        ^\n     * ```\n     *\n     * @type {State}\n     */\n    function sequenceCloseAfter(code) {\n      if (code === null || markdownLineEnding(code)) {\n        effects.exit('codeFencedFence')\n        return ok(code)\n      }\n      return nok(code)\n    }\n  }\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeNonLazyContinuation(effects, ok, nok) {\n  const self = this\n  return start\n\n  /**\n   *\n   *\n   * @type {State}\n   */\n  function start(code) {\n    if (code === null) {\n      return nok(code)\n    }\n    effects.enter('lineEnding')\n    effects.consume(code)\n    effects.exit('lineEnding')\n    return lineStart\n  }\n\n  /**\n   *\n   *\n   * @type {State}\n   */\n  function lineStart(code) {\n    return self.parser.lazy[self.now().line] ? nok(code) : ok(code)\n  }\n}\n","/// <reference lib=\"dom\" />\n\n/* eslint-env browser */\n\nconst element = document.createElement('i')\n\n/**\n * @param {string} value\n * @returns {string|false}\n */\nexport function decodeNamedCharacterReference(value) {\n  const characterReference = '&' + value + ';'\n  element.innerHTML = characterReference\n  const char = element.textContent\n\n  // Some named character references do not require the closing semicolon\n  // (`&not`, for instance), which leads to situations where parsing the assumed\n  // named reference of `&notit;` will result in the string `¬it;`.\n  // When we encounter a trailing semicolon after parsing, and the character\n  // reference to decode was not a semicolon (`&semi;`), we can assume that the\n  // matching was not complete.\n  // @ts-expect-error: TypeScript is wrong that `textContent` on elements can\n  // yield `null`.\n  if (char.charCodeAt(char.length - 1) === 59 /* `;` */ && value !== 'semi') {\n    return false\n  }\n\n  // If the decoded string is equal to the input, the character reference was\n  // not valid.\n  // @ts-expect-error: TypeScript is wrong that `textContent` on elements can\n  // yield `null`.\n  return char === characterReference ? false : char\n}\n","/**\n * @typedef {import('micromark-util-types').Code} Code\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n */\n\nimport {decodeNamedCharacterReference} from 'decode-named-character-reference'\nimport {\n  asciiAlphanumeric,\n  asciiDigit,\n  asciiHexDigit\n} from 'micromark-util-character'\n/** @type {Construct} */\nexport const characterReference = {\n  name: 'characterReference',\n  tokenize: tokenizeCharacterReference\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeCharacterReference(effects, ok, nok) {\n  const self = this\n  let size = 0\n  /** @type {number} */\n  let max\n  /** @type {(code: Code) => boolean} */\n  let test\n  return start\n\n  /**\n   * Start of character reference.\n   *\n   * ```markdown\n   * > | a&amp;b\n   *      ^\n   * > | a&#123;b\n   *      ^\n   * > | a&#x9;b\n   *      ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    effects.enter('characterReference')\n    effects.enter('characterReferenceMarker')\n    effects.consume(code)\n    effects.exit('characterReferenceMarker')\n    return open\n  }\n\n  /**\n   * After `&`, at `#` for numeric references or alphanumeric for named\n   * references.\n   *\n   * ```markdown\n   * > | a&amp;b\n   *       ^\n   * > | a&#123;b\n   *       ^\n   * > | a&#x9;b\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function open(code) {\n    if (code === 35) {\n      effects.enter('characterReferenceMarkerNumeric')\n      effects.consume(code)\n      effects.exit('characterReferenceMarkerNumeric')\n      return numeric\n    }\n    effects.enter('characterReferenceValue')\n    max = 31\n    test = asciiAlphanumeric\n    return value(code)\n  }\n\n  /**\n   * After `#`, at `x` for hexadecimals or digit for decimals.\n   *\n   * ```markdown\n   * > | a&#123;b\n   *        ^\n   * > | a&#x9;b\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function numeric(code) {\n    if (code === 88 || code === 120) {\n      effects.enter('characterReferenceMarkerHexadecimal')\n      effects.consume(code)\n      effects.exit('characterReferenceMarkerHexadecimal')\n      effects.enter('characterReferenceValue')\n      max = 6\n      test = asciiHexDigit\n      return value\n    }\n    effects.enter('characterReferenceValue')\n    max = 7\n    test = asciiDigit\n    return value(code)\n  }\n\n  /**\n   * After markers (`&#x`, `&#`, or `&`), in value, before `;`.\n   *\n   * The character reference kind defines what and how many characters are\n   * allowed.\n   *\n   * ```markdown\n   * > | a&amp;b\n   *       ^^^\n   * > | a&#123;b\n   *        ^^^\n   * > | a&#x9;b\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function value(code) {\n    if (code === 59 && size) {\n      const token = effects.exit('characterReferenceValue')\n      if (\n        test === asciiAlphanumeric &&\n        !decodeNamedCharacterReference(self.sliceSerialize(token))\n      ) {\n        return nok(code)\n      }\n\n      // To do: `markdown-rs` uses a different name:\n      // `CharacterReferenceMarkerSemi`.\n      effects.enter('characterReferenceMarker')\n      effects.consume(code)\n      effects.exit('characterReferenceMarker')\n      effects.exit('characterReference')\n      return ok\n    }\n    if (test(code) && size++ < max) {\n      effects.consume(code)\n      return value\n    }\n    return nok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n */\n\nimport {asciiPunctuation} from 'micromark-util-character'\n/** @type {Construct} */\nexport const characterEscape = {\n  name: 'characterEscape',\n  tokenize: tokenizeCharacterEscape\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeCharacterEscape(effects, ok, nok) {\n  return start\n\n  /**\n   * Start of character escape.\n   *\n   * ```markdown\n   * > | a\\*b\n   *      ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    effects.enter('characterEscape')\n    effects.enter('escapeMarker')\n    effects.consume(code)\n    effects.exit('escapeMarker')\n    return inside\n  }\n\n  /**\n   * After `\\`, at punctuation.\n   *\n   * ```markdown\n   * > | a\\*b\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function inside(code) {\n    // ASCII punctuation.\n    if (asciiPunctuation(code)) {\n      effects.enter('characterEscapeValue')\n      effects.consume(code)\n      effects.exit('characterEscapeValue')\n      effects.exit('characterEscape')\n      return ok\n    }\n    return nok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n */\n\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding} from 'micromark-util-character'\n/** @type {Construct} */\nexport const lineEnding = {\n  name: 'lineEnding',\n  tokenize: tokenizeLineEnding\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeLineEnding(effects, ok) {\n  return start\n\n  /** @type {State} */\n  function start(code) {\n    effects.enter('lineEnding')\n    effects.consume(code)\n    effects.exit('lineEnding')\n    return factorySpace(effects, ok, 'linePrefix')\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Event} Event\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n */\n\nimport {factoryDestination} from 'micromark-factory-destination'\nimport {factoryLabel} from 'micromark-factory-label'\nimport {factoryTitle} from 'micromark-factory-title'\nimport {factoryWhitespace} from 'micromark-factory-whitespace'\nimport {markdownLineEndingOrSpace} from 'micromark-util-character'\nimport {push, splice} from 'micromark-util-chunked'\nimport {normalizeIdentifier} from 'micromark-util-normalize-identifier'\nimport {resolveAll} from 'micromark-util-resolve-all'\n/** @type {Construct} */\nexport const labelEnd = {\n  name: 'labelEnd',\n  tokenize: tokenizeLabelEnd,\n  resolveTo: resolveToLabelEnd,\n  resolveAll: resolveAllLabelEnd\n}\n\n/** @type {Construct} */\nconst resourceConstruct = {\n  tokenize: tokenizeResource\n}\n/** @type {Construct} */\nconst referenceFullConstruct = {\n  tokenize: tokenizeReferenceFull\n}\n/** @type {Construct} */\nconst referenceCollapsedConstruct = {\n  tokenize: tokenizeReferenceCollapsed\n}\n\n/** @type {Resolver} */\nfunction resolveAllLabelEnd(events) {\n  let index = -1\n  while (++index < events.length) {\n    const token = events[index][1]\n    if (\n      token.type === 'labelImage' ||\n      token.type === 'labelLink' ||\n      token.type === 'labelEnd'\n    ) {\n      // Remove the marker.\n      events.splice(index + 1, token.type === 'labelImage' ? 4 : 2)\n      token.type = 'data'\n      index++\n    }\n  }\n  return events\n}\n\n/** @type {Resolver} */\nfunction resolveToLabelEnd(events, context) {\n  let index = events.length\n  let offset = 0\n  /** @type {Token} */\n  let token\n  /** @type {number | undefined} */\n  let open\n  /** @type {number | undefined} */\n  let close\n  /** @type {Array<Event>} */\n  let media\n\n  // Find an opening.\n  while (index--) {\n    token = events[index][1]\n    if (open) {\n      // If we see another link, or inactive link label, we’ve been here before.\n      if (\n        token.type === 'link' ||\n        (token.type === 'labelLink' && token._inactive)\n      ) {\n        break\n      }\n\n      // Mark other link openings as inactive, as we can’t have links in\n      // links.\n      if (events[index][0] === 'enter' && token.type === 'labelLink') {\n        token._inactive = true\n      }\n    } else if (close) {\n      if (\n        events[index][0] === 'enter' &&\n        (token.type === 'labelImage' || token.type === 'labelLink') &&\n        !token._balanced\n      ) {\n        open = index\n        if (token.type !== 'labelLink') {\n          offset = 2\n          break\n        }\n      }\n    } else if (token.type === 'labelEnd') {\n      close = index\n    }\n  }\n  const group = {\n    type: events[open][1].type === 'labelLink' ? 'link' : 'image',\n    start: Object.assign({}, events[open][1].start),\n    end: Object.assign({}, events[events.length - 1][1].end)\n  }\n  const label = {\n    type: 'label',\n    start: Object.assign({}, events[open][1].start),\n    end: Object.assign({}, events[close][1].end)\n  }\n  const text = {\n    type: 'labelText',\n    start: Object.assign({}, events[open + offset + 2][1].end),\n    end: Object.assign({}, events[close - 2][1].start)\n  }\n  media = [\n    ['enter', group, context],\n    ['enter', label, context]\n  ]\n\n  // Opening marker.\n  media = push(media, events.slice(open + 1, open + offset + 3))\n\n  // Text open.\n  media = push(media, [['enter', text, context]])\n\n  // Always populated by defaults.\n\n  // Between.\n  media = push(\n    media,\n    resolveAll(\n      context.parser.constructs.insideSpan.null,\n      events.slice(open + offset + 4, close - 3),\n      context\n    )\n  )\n\n  // Text close, marker close, label close.\n  media = push(media, [\n    ['exit', text, context],\n    events[close - 2],\n    events[close - 1],\n    ['exit', label, context]\n  ])\n\n  // Reference, resource, or so.\n  media = push(media, events.slice(close + 1))\n\n  // Media close.\n  media = push(media, [['exit', group, context]])\n  splice(events, open, events.length, media)\n  return events\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeLabelEnd(effects, ok, nok) {\n  const self = this\n  let index = self.events.length\n  /** @type {Token} */\n  let labelStart\n  /** @type {boolean} */\n  let defined\n\n  // Find an opening.\n  while (index--) {\n    if (\n      (self.events[index][1].type === 'labelImage' ||\n        self.events[index][1].type === 'labelLink') &&\n      !self.events[index][1]._balanced\n    ) {\n      labelStart = self.events[index][1]\n      break\n    }\n  }\n  return start\n\n  /**\n   * Start of label end.\n   *\n   * ```markdown\n   * > | [a](b) c\n   *       ^\n   * > | [a][b] c\n   *       ^\n   * > | [a][] b\n   *       ^\n   * > | [a] b\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    // If there is not an okay opening.\n    if (!labelStart) {\n      return nok(code)\n    }\n\n    // If the corresponding label (link) start is marked as inactive,\n    // it means we’d be wrapping a link, like this:\n    //\n    // ```markdown\n    // > | a [b [c](d) e](f) g.\n    //                  ^\n    // ```\n    //\n    // We can’t have that, so it’s just balanced brackets.\n    if (labelStart._inactive) {\n      return labelEndNok(code)\n    }\n    defined = self.parser.defined.includes(\n      normalizeIdentifier(\n        self.sliceSerialize({\n          start: labelStart.end,\n          end: self.now()\n        })\n      )\n    )\n    effects.enter('labelEnd')\n    effects.enter('labelMarker')\n    effects.consume(code)\n    effects.exit('labelMarker')\n    effects.exit('labelEnd')\n    return after\n  }\n\n  /**\n   * After `]`.\n   *\n   * ```markdown\n   * > | [a](b) c\n   *       ^\n   * > | [a][b] c\n   *       ^\n   * > | [a][] b\n   *       ^\n   * > | [a] b\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function after(code) {\n    // Note: `markdown-rs` also parses GFM footnotes here, which for us is in\n    // an extension.\n\n    // Resource (`[asd](fgh)`)?\n    if (code === 40) {\n      return effects.attempt(\n        resourceConstruct,\n        labelEndOk,\n        defined ? labelEndOk : labelEndNok\n      )(code)\n    }\n\n    // Full (`[asd][fgh]`) or collapsed (`[asd][]`) reference?\n    if (code === 91) {\n      return effects.attempt(\n        referenceFullConstruct,\n        labelEndOk,\n        defined ? referenceNotFull : labelEndNok\n      )(code)\n    }\n\n    // Shortcut (`[asd]`) reference?\n    return defined ? labelEndOk(code) : labelEndNok(code)\n  }\n\n  /**\n   * After `]`, at `[`, but not at a full reference.\n   *\n   * > 👉 **Note**: we only get here if the label is defined.\n   *\n   * ```markdown\n   * > | [a][] b\n   *        ^\n   * > | [a] b\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function referenceNotFull(code) {\n    return effects.attempt(\n      referenceCollapsedConstruct,\n      labelEndOk,\n      labelEndNok\n    )(code)\n  }\n\n  /**\n   * Done, we found something.\n   *\n   * ```markdown\n   * > | [a](b) c\n   *           ^\n   * > | [a][b] c\n   *           ^\n   * > | [a][] b\n   *          ^\n   * > | [a] b\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function labelEndOk(code) {\n    // Note: `markdown-rs` does a bunch of stuff here.\n    return ok(code)\n  }\n\n  /**\n   * Done, it’s nothing.\n   *\n   * There was an okay opening, but we didn’t match anything.\n   *\n   * ```markdown\n   * > | [a](b c\n   *        ^\n   * > | [a][b c\n   *        ^\n   * > | [a] b\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function labelEndNok(code) {\n    labelStart._balanced = true\n    return nok(code)\n  }\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeResource(effects, ok, nok) {\n  return resourceStart\n\n  /**\n   * At a resource.\n   *\n   * ```markdown\n   * > | [a](b) c\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function resourceStart(code) {\n    effects.enter('resource')\n    effects.enter('resourceMarker')\n    effects.consume(code)\n    effects.exit('resourceMarker')\n    return resourceBefore\n  }\n\n  /**\n   * In resource, after `(`, at optional whitespace.\n   *\n   * ```markdown\n   * > | [a](b) c\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function resourceBefore(code) {\n    return markdownLineEndingOrSpace(code)\n      ? factoryWhitespace(effects, resourceOpen)(code)\n      : resourceOpen(code)\n  }\n\n  /**\n   * In resource, after optional whitespace, at `)` or a destination.\n   *\n   * ```markdown\n   * > | [a](b) c\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function resourceOpen(code) {\n    if (code === 41) {\n      return resourceEnd(code)\n    }\n    return factoryDestination(\n      effects,\n      resourceDestinationAfter,\n      resourceDestinationMissing,\n      'resourceDestination',\n      'resourceDestinationLiteral',\n      'resourceDestinationLiteralMarker',\n      'resourceDestinationRaw',\n      'resourceDestinationString',\n      32\n    )(code)\n  }\n\n  /**\n   * In resource, after destination, at optional whitespace.\n   *\n   * ```markdown\n   * > | [a](b) c\n   *          ^\n   * ```\n   *\n   * @type {State}\n   */\n  function resourceDestinationAfter(code) {\n    return markdownLineEndingOrSpace(code)\n      ? factoryWhitespace(effects, resourceBetween)(code)\n      : resourceEnd(code)\n  }\n\n  /**\n   * At invalid destination.\n   *\n   * ```markdown\n   * > | [a](<<) b\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function resourceDestinationMissing(code) {\n    return nok(code)\n  }\n\n  /**\n   * In resource, after destination and whitespace, at `(` or title.\n   *\n   * ```markdown\n   * > | [a](b ) c\n   *           ^\n   * ```\n   *\n   * @type {State}\n   */\n  function resourceBetween(code) {\n    if (code === 34 || code === 39 || code === 40) {\n      return factoryTitle(\n        effects,\n        resourceTitleAfter,\n        nok,\n        'resourceTitle',\n        'resourceTitleMarker',\n        'resourceTitleString'\n      )(code)\n    }\n    return resourceEnd(code)\n  }\n\n  /**\n   * In resource, after title, at optional whitespace.\n   *\n   * ```markdown\n   * > | [a](b \"c\") d\n   *              ^\n   * ```\n   *\n   * @type {State}\n   */\n  function resourceTitleAfter(code) {\n    return markdownLineEndingOrSpace(code)\n      ? factoryWhitespace(effects, resourceEnd)(code)\n      : resourceEnd(code)\n  }\n\n  /**\n   * In resource, at `)`.\n   *\n   * ```markdown\n   * > | [a](b) d\n   *          ^\n   * ```\n   *\n   * @type {State}\n   */\n  function resourceEnd(code) {\n    if (code === 41) {\n      effects.enter('resourceMarker')\n      effects.consume(code)\n      effects.exit('resourceMarker')\n      effects.exit('resource')\n      return ok\n    }\n    return nok(code)\n  }\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeReferenceFull(effects, ok, nok) {\n  const self = this\n  return referenceFull\n\n  /**\n   * In a reference (full), at the `[`.\n   *\n   * ```markdown\n   * > | [a][b] d\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function referenceFull(code) {\n    return factoryLabel.call(\n      self,\n      effects,\n      referenceFullAfter,\n      referenceFullMissing,\n      'reference',\n      'referenceMarker',\n      'referenceString'\n    )(code)\n  }\n\n  /**\n   * In a reference (full), after `]`.\n   *\n   * ```markdown\n   * > | [a][b] d\n   *          ^\n   * ```\n   *\n   * @type {State}\n   */\n  function referenceFullAfter(code) {\n    return self.parser.defined.includes(\n      normalizeIdentifier(\n        self.sliceSerialize(self.events[self.events.length - 1][1]).slice(1, -1)\n      )\n    )\n      ? ok(code)\n      : nok(code)\n  }\n\n  /**\n   * In reference (full) that was missing.\n   *\n   * ```markdown\n   * > | [a][b d\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function referenceFullMissing(code) {\n    return nok(code)\n  }\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeReferenceCollapsed(effects, ok, nok) {\n  return referenceCollapsedStart\n\n  /**\n   * In reference (collapsed), at `[`.\n   *\n   * > 👉 **Note**: we only get here if the label is defined.\n   *\n   * ```markdown\n   * > | [a][] d\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function referenceCollapsedStart(code) {\n    // We only attempt a collapsed label if there’s a `[`.\n\n    effects.enter('reference')\n    effects.enter('referenceMarker')\n    effects.consume(code)\n    effects.exit('referenceMarker')\n    return referenceCollapsedOpen\n  }\n\n  /**\n   * In reference (collapsed), at `]`.\n   *\n   * > 👉 **Note**: we only get here if the label is defined.\n   *\n   * ```markdown\n   * > | [a][] d\n   *         ^\n   * ```\n   *\n   *  @type {State}\n   */\n  function referenceCollapsedOpen(code) {\n    if (code === 93) {\n      effects.enter('referenceMarker')\n      effects.consume(code)\n      effects.exit('referenceMarker')\n      effects.exit('reference')\n      return ok\n    }\n    return nok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n */\n\nimport {labelEnd} from './label-end.js'\n\n/** @type {Construct} */\nexport const labelStartImage = {\n  name: 'labelStartImage',\n  tokenize: tokenizeLabelStartImage,\n  resolveAll: labelEnd.resolveAll\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeLabelStartImage(effects, ok, nok) {\n  const self = this\n  return start\n\n  /**\n   * Start of label (image) start.\n   *\n   * ```markdown\n   * > | a ![b] c\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    effects.enter('labelImage')\n    effects.enter('labelImageMarker')\n    effects.consume(code)\n    effects.exit('labelImageMarker')\n    return open\n  }\n\n  /**\n   * After `!`, at `[`.\n   *\n   * ```markdown\n   * > | a ![b] c\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function open(code) {\n    if (code === 91) {\n      effects.enter('labelMarker')\n      effects.consume(code)\n      effects.exit('labelMarker')\n      effects.exit('labelImage')\n      return after\n    }\n    return nok(code)\n  }\n\n  /**\n   * After `![`.\n   *\n   * ```markdown\n   * > | a ![b] c\n   *         ^\n   * ```\n   *\n   * This is needed in because, when GFM footnotes are enabled, images never\n   * form when started with a `^`.\n   * Instead, links form:\n   *\n   * ```markdown\n   * ![^a](b)\n   *\n   * ![^a][b]\n   *\n   * [b]: c\n   * ```\n   *\n   * ```html\n   * <p>!<a href=\\\"b\\\">^a</a></p>\n   * <p>!<a href=\\\"c\\\">^a</a></p>\n   * ```\n   *\n   * @type {State}\n   */\n  function after(code) {\n    // To do: use a new field to do this, this is still needed for\n    // `micromark-extension-gfm-footnote`, but the `label-start-link`\n    // behavior isn’t.\n    // Hidden footnotes hook.\n    /* c8 ignore next 3 */\n    return code === 94 && '_hiddenFootnoteSupport' in self.parser.constructs\n      ? nok(code)\n      : ok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Code} Code\n */\n\nimport {\n  markdownLineEndingOrSpace,\n  unicodePunctuation,\n  unicodeWhitespace\n} from 'micromark-util-character'\n/**\n * Classify whether a code represents whitespace, punctuation, or something\n * else.\n *\n * Used for attention (emphasis, strong), whose sequences can open or close\n * based on the class of surrounding characters.\n *\n * > 👉 **Note**: eof (`null`) is seen as whitespace.\n *\n * @param {Code} code\n *   Code.\n * @returns {typeof constants.characterGroupWhitespace | typeof constants.characterGroupPunctuation | undefined}\n *   Group.\n */\nexport function classifyCharacter(code) {\n  if (\n    code === null ||\n    markdownLineEndingOrSpace(code) ||\n    unicodeWhitespace(code)\n  ) {\n    return 1\n  }\n  if (unicodePunctuation(code)) {\n    return 2\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Code} Code\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Event} Event\n * @typedef {import('micromark-util-types').Point} Point\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n */\n\nimport {push, splice} from 'micromark-util-chunked'\nimport {classifyCharacter} from 'micromark-util-classify-character'\nimport {resolveAll} from 'micromark-util-resolve-all'\n/** @type {Construct} */\nexport const attention = {\n  name: 'attention',\n  tokenize: tokenizeAttention,\n  resolveAll: resolveAllAttention\n}\n\n/**\n * Take all events and resolve attention to emphasis or strong.\n *\n * @type {Resolver}\n */\n// eslint-disable-next-line complexity\nfunction resolveAllAttention(events, context) {\n  let index = -1\n  /** @type {number} */\n  let open\n  /** @type {Token} */\n  let group\n  /** @type {Token} */\n  let text\n  /** @type {Token} */\n  let openingSequence\n  /** @type {Token} */\n  let closingSequence\n  /** @type {number} */\n  let use\n  /** @type {Array<Event>} */\n  let nextEvents\n  /** @type {number} */\n  let offset\n\n  // Walk through all events.\n  //\n  // Note: performance of this is fine on an mb of normal markdown, but it’s\n  // a bottleneck for malicious stuff.\n  while (++index < events.length) {\n    // Find a token that can close.\n    if (\n      events[index][0] === 'enter' &&\n      events[index][1].type === 'attentionSequence' &&\n      events[index][1]._close\n    ) {\n      open = index\n\n      // Now walk back to find an opener.\n      while (open--) {\n        // Find a token that can open the closer.\n        if (\n          events[open][0] === 'exit' &&\n          events[open][1].type === 'attentionSequence' &&\n          events[open][1]._open &&\n          // If the markers are the same:\n          context.sliceSerialize(events[open][1]).charCodeAt(0) ===\n            context.sliceSerialize(events[index][1]).charCodeAt(0)\n        ) {\n          // If the opening can close or the closing can open,\n          // and the close size *is not* a multiple of three,\n          // but the sum of the opening and closing size *is* multiple of three,\n          // then don’t match.\n          if (\n            (events[open][1]._close || events[index][1]._open) &&\n            (events[index][1].end.offset - events[index][1].start.offset) % 3 &&\n            !(\n              (events[open][1].end.offset -\n                events[open][1].start.offset +\n                events[index][1].end.offset -\n                events[index][1].start.offset) %\n              3\n            )\n          ) {\n            continue\n          }\n\n          // Number of markers to use from the sequence.\n          use =\n            events[open][1].end.offset - events[open][1].start.offset > 1 &&\n            events[index][1].end.offset - events[index][1].start.offset > 1\n              ? 2\n              : 1\n          const start = Object.assign({}, events[open][1].end)\n          const end = Object.assign({}, events[index][1].start)\n          movePoint(start, -use)\n          movePoint(end, use)\n          openingSequence = {\n            type: use > 1 ? 'strongSequence' : 'emphasisSequence',\n            start,\n            end: Object.assign({}, events[open][1].end)\n          }\n          closingSequence = {\n            type: use > 1 ? 'strongSequence' : 'emphasisSequence',\n            start: Object.assign({}, events[index][1].start),\n            end\n          }\n          text = {\n            type: use > 1 ? 'strongText' : 'emphasisText',\n            start: Object.assign({}, events[open][1].end),\n            end: Object.assign({}, events[index][1].start)\n          }\n          group = {\n            type: use > 1 ? 'strong' : 'emphasis',\n            start: Object.assign({}, openingSequence.start),\n            end: Object.assign({}, closingSequence.end)\n          }\n          events[open][1].end = Object.assign({}, openingSequence.start)\n          events[index][1].start = Object.assign({}, closingSequence.end)\n          nextEvents = []\n\n          // If there are more markers in the opening, add them before.\n          if (events[open][1].end.offset - events[open][1].start.offset) {\n            nextEvents = push(nextEvents, [\n              ['enter', events[open][1], context],\n              ['exit', events[open][1], context]\n            ])\n          }\n\n          // Opening.\n          nextEvents = push(nextEvents, [\n            ['enter', group, context],\n            ['enter', openingSequence, context],\n            ['exit', openingSequence, context],\n            ['enter', text, context]\n          ])\n\n          // Always populated by defaults.\n\n          // Between.\n          nextEvents = push(\n            nextEvents,\n            resolveAll(\n              context.parser.constructs.insideSpan.null,\n              events.slice(open + 1, index),\n              context\n            )\n          )\n\n          // Closing.\n          nextEvents = push(nextEvents, [\n            ['exit', text, context],\n            ['enter', closingSequence, context],\n            ['exit', closingSequence, context],\n            ['exit', group, context]\n          ])\n\n          // If there are more markers in the closing, add them after.\n          if (events[index][1].end.offset - events[index][1].start.offset) {\n            offset = 2\n            nextEvents = push(nextEvents, [\n              ['enter', events[index][1], context],\n              ['exit', events[index][1], context]\n            ])\n          } else {\n            offset = 0\n          }\n          splice(events, open - 1, index - open + 3, nextEvents)\n          index = open + nextEvents.length - offset - 2\n          break\n        }\n      }\n    }\n  }\n\n  // Remove remaining sequences.\n  index = -1\n  while (++index < events.length) {\n    if (events[index][1].type === 'attentionSequence') {\n      events[index][1].type = 'data'\n    }\n  }\n  return events\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeAttention(effects, ok) {\n  const attentionMarkers = this.parser.constructs.attentionMarkers.null\n  const previous = this.previous\n  const before = classifyCharacter(previous)\n\n  /** @type {NonNullable<Code>} */\n  let marker\n  return start\n\n  /**\n   * Before a sequence.\n   *\n   * ```markdown\n   * > | **\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    marker = code\n    effects.enter('attentionSequence')\n    return inside(code)\n  }\n\n  /**\n   * In a sequence.\n   *\n   * ```markdown\n   * > | **\n   *     ^^\n   * ```\n   *\n   * @type {State}\n   */\n  function inside(code) {\n    if (code === marker) {\n      effects.consume(code)\n      return inside\n    }\n    const token = effects.exit('attentionSequence')\n\n    // To do: next major: move this to resolver, just like `markdown-rs`.\n    const after = classifyCharacter(code)\n\n    // Always populated by defaults.\n\n    const open =\n      !after || (after === 2 && before) || attentionMarkers.includes(code)\n    const close =\n      !before || (before === 2 && after) || attentionMarkers.includes(previous)\n    token._open = Boolean(marker === 42 ? open : open && (before || !close))\n    token._close = Boolean(marker === 42 ? close : close && (after || !open))\n    return ok(code)\n  }\n}\n\n/**\n * Move a point a bit.\n *\n * Note: `move` only works inside lines! It’s not possible to move past other\n * chunks (replacement characters, tabs, or line endings).\n *\n * @param {Point} point\n * @param {number} offset\n * @returns {undefined}\n */\nfunction movePoint(point, offset) {\n  point.column += offset\n  point.offset += offset\n  point._bufferIndex += offset\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n */\n\nimport {\n  asciiAlpha,\n  asciiAlphanumeric,\n  asciiAtext,\n  asciiControl\n} from 'micromark-util-character'\n/** @type {Construct} */\nexport const autolink = {\n  name: 'autolink',\n  tokenize: tokenizeAutolink\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeAutolink(effects, ok, nok) {\n  let size = 0\n  return start\n\n  /**\n   * Start of an autolink.\n   *\n   * ```markdown\n   * > | a<https://example.com>b\n   *      ^\n   * > | a<user@example.com>b\n   *      ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    effects.enter('autolink')\n    effects.enter('autolinkMarker')\n    effects.consume(code)\n    effects.exit('autolinkMarker')\n    effects.enter('autolinkProtocol')\n    return open\n  }\n\n  /**\n   * After `<`, at protocol or atext.\n   *\n   * ```markdown\n   * > | a<https://example.com>b\n   *       ^\n   * > | a<user@example.com>b\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function open(code) {\n    if (asciiAlpha(code)) {\n      effects.consume(code)\n      return schemeOrEmailAtext\n    }\n    return emailAtext(code)\n  }\n\n  /**\n   * At second byte of protocol or atext.\n   *\n   * ```markdown\n   * > | a<https://example.com>b\n   *        ^\n   * > | a<user@example.com>b\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function schemeOrEmailAtext(code) {\n    // ASCII alphanumeric and `+`, `-`, and `.`.\n    if (code === 43 || code === 45 || code === 46 || asciiAlphanumeric(code)) {\n      // Count the previous alphabetical from `open` too.\n      size = 1\n      return schemeInsideOrEmailAtext(code)\n    }\n    return emailAtext(code)\n  }\n\n  /**\n   * In ambiguous protocol or atext.\n   *\n   * ```markdown\n   * > | a<https://example.com>b\n   *        ^\n   * > | a<user@example.com>b\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function schemeInsideOrEmailAtext(code) {\n    if (code === 58) {\n      effects.consume(code)\n      size = 0\n      return urlInside\n    }\n\n    // ASCII alphanumeric and `+`, `-`, and `.`.\n    if (\n      (code === 43 || code === 45 || code === 46 || asciiAlphanumeric(code)) &&\n      size++ < 32\n    ) {\n      effects.consume(code)\n      return schemeInsideOrEmailAtext\n    }\n    size = 0\n    return emailAtext(code)\n  }\n\n  /**\n   * After protocol, in URL.\n   *\n   * ```markdown\n   * > | a<https://example.com>b\n   *             ^\n   * ```\n   *\n   * @type {State}\n   */\n  function urlInside(code) {\n    if (code === 62) {\n      effects.exit('autolinkProtocol')\n      effects.enter('autolinkMarker')\n      effects.consume(code)\n      effects.exit('autolinkMarker')\n      effects.exit('autolink')\n      return ok\n    }\n\n    // ASCII control, space, or `<`.\n    if (code === null || code === 32 || code === 60 || asciiControl(code)) {\n      return nok(code)\n    }\n    effects.consume(code)\n    return urlInside\n  }\n\n  /**\n   * In email atext.\n   *\n   * ```markdown\n   * > | a<user.name@example.com>b\n   *              ^\n   * ```\n   *\n   * @type {State}\n   */\n  function emailAtext(code) {\n    if (code === 64) {\n      effects.consume(code)\n      return emailAtSignOrDot\n    }\n    if (asciiAtext(code)) {\n      effects.consume(code)\n      return emailAtext\n    }\n    return nok(code)\n  }\n\n  /**\n   * In label, after at-sign or dot.\n   *\n   * ```markdown\n   * > | a<user.name@example.com>b\n   *                 ^       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function emailAtSignOrDot(code) {\n    return asciiAlphanumeric(code) ? emailLabel(code) : nok(code)\n  }\n\n  /**\n   * In label, where `.` and `>` are allowed.\n   *\n   * ```markdown\n   * > | a<user.name@example.com>b\n   *                   ^\n   * ```\n   *\n   * @type {State}\n   */\n  function emailLabel(code) {\n    if (code === 46) {\n      effects.consume(code)\n      size = 0\n      return emailAtSignOrDot\n    }\n    if (code === 62) {\n      // Exit, then change the token type.\n      effects.exit('autolinkProtocol').type = 'autolinkEmail'\n      effects.enter('autolinkMarker')\n      effects.consume(code)\n      effects.exit('autolinkMarker')\n      effects.exit('autolink')\n      return ok\n    }\n    return emailValue(code)\n  }\n\n  /**\n   * In label, where `.` and `>` are *not* allowed.\n   *\n   * Though, this is also used in `emailLabel` to parse other values.\n   *\n   * ```markdown\n   * > | a<user.name@ex-ample.com>b\n   *                    ^\n   * ```\n   *\n   * @type {State}\n   */\n  function emailValue(code) {\n    // ASCII alphanumeric or `-`.\n    if ((code === 45 || asciiAlphanumeric(code)) && size++ < 63) {\n      const next = code === 45 ? emailValue : emailLabel\n      effects.consume(code)\n      return next\n    }\n    return nok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Code} Code\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n */\n\nimport {factorySpace} from 'micromark-factory-space'\nimport {\n  asciiAlpha,\n  asciiAlphanumeric,\n  markdownLineEnding,\n  markdownLineEndingOrSpace,\n  markdownSpace\n} from 'micromark-util-character'\n/** @type {Construct} */\nexport const htmlText = {\n  name: 'htmlText',\n  tokenize: tokenizeHtmlText\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeHtmlText(effects, ok, nok) {\n  const self = this\n  /** @type {NonNullable<Code> | undefined} */\n  let marker\n  /** @type {number} */\n  let index\n  /** @type {State} */\n  let returnState\n  return start\n\n  /**\n   * Start of HTML (text).\n   *\n   * ```markdown\n   * > | a <b> c\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    effects.enter('htmlText')\n    effects.enter('htmlTextData')\n    effects.consume(code)\n    return open\n  }\n\n  /**\n   * After `<`, at tag name or other stuff.\n   *\n   * ```markdown\n   * > | a <b> c\n   *        ^\n   * > | a <!doctype> c\n   *        ^\n   * > | a <!--b--> c\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function open(code) {\n    if (code === 33) {\n      effects.consume(code)\n      return declarationOpen\n    }\n    if (code === 47) {\n      effects.consume(code)\n      return tagCloseStart\n    }\n    if (code === 63) {\n      effects.consume(code)\n      return instruction\n    }\n\n    // ASCII alphabetical.\n    if (asciiAlpha(code)) {\n      effects.consume(code)\n      return tagOpen\n    }\n    return nok(code)\n  }\n\n  /**\n   * After `<!`, at declaration, comment, or CDATA.\n   *\n   * ```markdown\n   * > | a <!doctype> c\n   *         ^\n   * > | a <!--b--> c\n   *         ^\n   * > | a <![CDATA[>&<]]> c\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function declarationOpen(code) {\n    if (code === 45) {\n      effects.consume(code)\n      return commentOpenInside\n    }\n    if (code === 91) {\n      effects.consume(code)\n      index = 0\n      return cdataOpenInside\n    }\n    if (asciiAlpha(code)) {\n      effects.consume(code)\n      return declaration\n    }\n    return nok(code)\n  }\n\n  /**\n   * In a comment, after `<!-`, at another `-`.\n   *\n   * ```markdown\n   * > | a <!--b--> c\n   *          ^\n   * ```\n   *\n   * @type {State}\n   */\n  function commentOpenInside(code) {\n    if (code === 45) {\n      effects.consume(code)\n      return commentEnd\n    }\n    return nok(code)\n  }\n\n  /**\n   * In comment.\n   *\n   * ```markdown\n   * > | a <!--b--> c\n   *           ^\n   * ```\n   *\n   * @type {State}\n   */\n  function comment(code) {\n    if (code === null) {\n      return nok(code)\n    }\n    if (code === 45) {\n      effects.consume(code)\n      return commentClose\n    }\n    if (markdownLineEnding(code)) {\n      returnState = comment\n      return lineEndingBefore(code)\n    }\n    effects.consume(code)\n    return comment\n  }\n\n  /**\n   * In comment, after `-`.\n   *\n   * ```markdown\n   * > | a <!--b--> c\n   *             ^\n   * ```\n   *\n   * @type {State}\n   */\n  function commentClose(code) {\n    if (code === 45) {\n      effects.consume(code)\n      return commentEnd\n    }\n    return comment(code)\n  }\n\n  /**\n   * In comment, after `--`.\n   *\n   * ```markdown\n   * > | a <!--b--> c\n   *              ^\n   * ```\n   *\n   * @type {State}\n   */\n  function commentEnd(code) {\n    return code === 62\n      ? end(code)\n      : code === 45\n      ? commentClose(code)\n      : comment(code)\n  }\n\n  /**\n   * After `<![`, in CDATA, expecting `CDATA[`.\n   *\n   * ```markdown\n   * > | a <![CDATA[>&<]]> b\n   *          ^^^^^^\n   * ```\n   *\n   * @type {State}\n   */\n  function cdataOpenInside(code) {\n    const value = 'CDATA['\n    if (code === value.charCodeAt(index++)) {\n      effects.consume(code)\n      return index === value.length ? cdata : cdataOpenInside\n    }\n    return nok(code)\n  }\n\n  /**\n   * In CDATA.\n   *\n   * ```markdown\n   * > | a <![CDATA[>&<]]> b\n   *                ^^^\n   * ```\n   *\n   * @type {State}\n   */\n  function cdata(code) {\n    if (code === null) {\n      return nok(code)\n    }\n    if (code === 93) {\n      effects.consume(code)\n      return cdataClose\n    }\n    if (markdownLineEnding(code)) {\n      returnState = cdata\n      return lineEndingBefore(code)\n    }\n    effects.consume(code)\n    return cdata\n  }\n\n  /**\n   * In CDATA, after `]`, at another `]`.\n   *\n   * ```markdown\n   * > | a <![CDATA[>&<]]> b\n   *                    ^\n   * ```\n   *\n   * @type {State}\n   */\n  function cdataClose(code) {\n    if (code === 93) {\n      effects.consume(code)\n      return cdataEnd\n    }\n    return cdata(code)\n  }\n\n  /**\n   * In CDATA, after `]]`, at `>`.\n   *\n   * ```markdown\n   * > | a <![CDATA[>&<]]> b\n   *                     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function cdataEnd(code) {\n    if (code === 62) {\n      return end(code)\n    }\n    if (code === 93) {\n      effects.consume(code)\n      return cdataEnd\n    }\n    return cdata(code)\n  }\n\n  /**\n   * In declaration.\n   *\n   * ```markdown\n   * > | a <!b> c\n   *          ^\n   * ```\n   *\n   * @type {State}\n   */\n  function declaration(code) {\n    if (code === null || code === 62) {\n      return end(code)\n    }\n    if (markdownLineEnding(code)) {\n      returnState = declaration\n      return lineEndingBefore(code)\n    }\n    effects.consume(code)\n    return declaration\n  }\n\n  /**\n   * In instruction.\n   *\n   * ```markdown\n   * > | a <?b?> c\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function instruction(code) {\n    if (code === null) {\n      return nok(code)\n    }\n    if (code === 63) {\n      effects.consume(code)\n      return instructionClose\n    }\n    if (markdownLineEnding(code)) {\n      returnState = instruction\n      return lineEndingBefore(code)\n    }\n    effects.consume(code)\n    return instruction\n  }\n\n  /**\n   * In instruction, after `?`, at `>`.\n   *\n   * ```markdown\n   * > | a <?b?> c\n   *           ^\n   * ```\n   *\n   * @type {State}\n   */\n  function instructionClose(code) {\n    return code === 62 ? end(code) : instruction(code)\n  }\n\n  /**\n   * After `</`, in closing tag, at tag name.\n   *\n   * ```markdown\n   * > | a </b> c\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function tagCloseStart(code) {\n    // ASCII alphabetical.\n    if (asciiAlpha(code)) {\n      effects.consume(code)\n      return tagClose\n    }\n    return nok(code)\n  }\n\n  /**\n   * After `</x`, in a tag name.\n   *\n   * ```markdown\n   * > | a </b> c\n   *          ^\n   * ```\n   *\n   * @type {State}\n   */\n  function tagClose(code) {\n    // ASCII alphanumerical and `-`.\n    if (code === 45 || asciiAlphanumeric(code)) {\n      effects.consume(code)\n      return tagClose\n    }\n    return tagCloseBetween(code)\n  }\n\n  /**\n   * In closing tag, after tag name.\n   *\n   * ```markdown\n   * > | a </b> c\n   *          ^\n   * ```\n   *\n   * @type {State}\n   */\n  function tagCloseBetween(code) {\n    if (markdownLineEnding(code)) {\n      returnState = tagCloseBetween\n      return lineEndingBefore(code)\n    }\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return tagCloseBetween\n    }\n    return end(code)\n  }\n\n  /**\n   * After `<x`, in opening tag name.\n   *\n   * ```markdown\n   * > | a <b> c\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function tagOpen(code) {\n    // ASCII alphanumerical and `-`.\n    if (code === 45 || asciiAlphanumeric(code)) {\n      effects.consume(code)\n      return tagOpen\n    }\n    if (code === 47 || code === 62 || markdownLineEndingOrSpace(code)) {\n      return tagOpenBetween(code)\n    }\n    return nok(code)\n  }\n\n  /**\n   * In opening tag, after tag name.\n   *\n   * ```markdown\n   * > | a <b> c\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function tagOpenBetween(code) {\n    if (code === 47) {\n      effects.consume(code)\n      return end\n    }\n\n    // ASCII alphabetical and `:` and `_`.\n    if (code === 58 || code === 95 || asciiAlpha(code)) {\n      effects.consume(code)\n      return tagOpenAttributeName\n    }\n    if (markdownLineEnding(code)) {\n      returnState = tagOpenBetween\n      return lineEndingBefore(code)\n    }\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return tagOpenBetween\n    }\n    return end(code)\n  }\n\n  /**\n   * In attribute name.\n   *\n   * ```markdown\n   * > | a <b c> d\n   *          ^\n   * ```\n   *\n   * @type {State}\n   */\n  function tagOpenAttributeName(code) {\n    // ASCII alphabetical and `-`, `.`, `:`, and `_`.\n    if (\n      code === 45 ||\n      code === 46 ||\n      code === 58 ||\n      code === 95 ||\n      asciiAlphanumeric(code)\n    ) {\n      effects.consume(code)\n      return tagOpenAttributeName\n    }\n    return tagOpenAttributeNameAfter(code)\n  }\n\n  /**\n   * After attribute name, before initializer, the end of the tag, or\n   * whitespace.\n   *\n   * ```markdown\n   * > | a <b c> d\n   *           ^\n   * ```\n   *\n   * @type {State}\n   */\n  function tagOpenAttributeNameAfter(code) {\n    if (code === 61) {\n      effects.consume(code)\n      return tagOpenAttributeValueBefore\n    }\n    if (markdownLineEnding(code)) {\n      returnState = tagOpenAttributeNameAfter\n      return lineEndingBefore(code)\n    }\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return tagOpenAttributeNameAfter\n    }\n    return tagOpenBetween(code)\n  }\n\n  /**\n   * Before unquoted, double quoted, or single quoted attribute value, allowing\n   * whitespace.\n   *\n   * ```markdown\n   * > | a <b c=d> e\n   *            ^\n   * ```\n   *\n   * @type {State}\n   */\n  function tagOpenAttributeValueBefore(code) {\n    if (\n      code === null ||\n      code === 60 ||\n      code === 61 ||\n      code === 62 ||\n      code === 96\n    ) {\n      return nok(code)\n    }\n    if (code === 34 || code === 39) {\n      effects.consume(code)\n      marker = code\n      return tagOpenAttributeValueQuoted\n    }\n    if (markdownLineEnding(code)) {\n      returnState = tagOpenAttributeValueBefore\n      return lineEndingBefore(code)\n    }\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return tagOpenAttributeValueBefore\n    }\n    effects.consume(code)\n    return tagOpenAttributeValueUnquoted\n  }\n\n  /**\n   * In double or single quoted attribute value.\n   *\n   * ```markdown\n   * > | a <b c=\"d\"> e\n   *             ^\n   * ```\n   *\n   * @type {State}\n   */\n  function tagOpenAttributeValueQuoted(code) {\n    if (code === marker) {\n      effects.consume(code)\n      marker = undefined\n      return tagOpenAttributeValueQuotedAfter\n    }\n    if (code === null) {\n      return nok(code)\n    }\n    if (markdownLineEnding(code)) {\n      returnState = tagOpenAttributeValueQuoted\n      return lineEndingBefore(code)\n    }\n    effects.consume(code)\n    return tagOpenAttributeValueQuoted\n  }\n\n  /**\n   * In unquoted attribute value.\n   *\n   * ```markdown\n   * > | a <b c=d> e\n   *            ^\n   * ```\n   *\n   * @type {State}\n   */\n  function tagOpenAttributeValueUnquoted(code) {\n    if (\n      code === null ||\n      code === 34 ||\n      code === 39 ||\n      code === 60 ||\n      code === 61 ||\n      code === 96\n    ) {\n      return nok(code)\n    }\n    if (code === 47 || code === 62 || markdownLineEndingOrSpace(code)) {\n      return tagOpenBetween(code)\n    }\n    effects.consume(code)\n    return tagOpenAttributeValueUnquoted\n  }\n\n  /**\n   * After double or single quoted attribute value, before whitespace or the end\n   * of the tag.\n   *\n   * ```markdown\n   * > | a <b c=\"d\"> e\n   *               ^\n   * ```\n   *\n   * @type {State}\n   */\n  function tagOpenAttributeValueQuotedAfter(code) {\n    if (code === 47 || code === 62 || markdownLineEndingOrSpace(code)) {\n      return tagOpenBetween(code)\n    }\n    return nok(code)\n  }\n\n  /**\n   * In certain circumstances of a tag where only an `>` is allowed.\n   *\n   * ```markdown\n   * > | a <b c=\"d\"> e\n   *               ^\n   * ```\n   *\n   * @type {State}\n   */\n  function end(code) {\n    if (code === 62) {\n      effects.consume(code)\n      effects.exit('htmlTextData')\n      effects.exit('htmlText')\n      return ok\n    }\n    return nok(code)\n  }\n\n  /**\n   * At eol.\n   *\n   * > 👉 **Note**: we can’t have blank lines in text, so no need to worry about\n   * > empty tokens.\n   *\n   * ```markdown\n   * > | a <!--a\n   *            ^\n   *   | b-->\n   * ```\n   *\n   * @type {State}\n   */\n  function lineEndingBefore(code) {\n    effects.exit('htmlTextData')\n    effects.enter('lineEnding')\n    effects.consume(code)\n    effects.exit('lineEnding')\n    return lineEndingAfter\n  }\n\n  /**\n   * After eol, at optional whitespace.\n   *\n   * > 👉 **Note**: we can’t have blank lines in text, so no need to worry about\n   * > empty tokens.\n   *\n   * ```markdown\n   *   | a <!--a\n   * > | b-->\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function lineEndingAfter(code) {\n    // Always populated by defaults.\n\n    return markdownSpace(code)\n      ? factorySpace(\n          effects,\n          lineEndingAfterPrefix,\n          'linePrefix',\n          self.parser.constructs.disable.null.includes('codeIndented')\n            ? undefined\n            : 4\n        )(code)\n      : lineEndingAfterPrefix(code)\n  }\n\n  /**\n   * After eol, after optional whitespace.\n   *\n   * > 👉 **Note**: we can’t have blank lines in text, so no need to worry about\n   * > empty tokens.\n   *\n   * ```markdown\n   *   | a <!--a\n   * > | b-->\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function lineEndingAfterPrefix(code) {\n    effects.enter('htmlTextData')\n    return returnState(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n */\n\nimport {labelEnd} from './label-end.js'\n\n/** @type {Construct} */\nexport const labelStartLink = {\n  name: 'labelStartLink',\n  tokenize: tokenizeLabelStartLink,\n  resolveAll: labelEnd.resolveAll\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeLabelStartLink(effects, ok, nok) {\n  const self = this\n  return start\n\n  /**\n   * Start of label (link) start.\n   *\n   * ```markdown\n   * > | a [b] c\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    effects.enter('labelLink')\n    effects.enter('labelMarker')\n    effects.consume(code)\n    effects.exit('labelMarker')\n    effects.exit('labelLink')\n    return after\n  }\n\n  /** @type {State} */\n  function after(code) {\n    // To do: this isn’t needed in `micromark-extension-gfm-footnote`,\n    // remove.\n    // Hidden footnotes hook.\n    /* c8 ignore next 3 */\n    return code === 94 && '_hiddenFootnoteSupport' in self.parser.constructs\n      ? nok(code)\n      : ok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n */\n\nimport {markdownLineEnding} from 'micromark-util-character'\n/** @type {Construct} */\nexport const hardBreakEscape = {\n  name: 'hardBreakEscape',\n  tokenize: tokenizeHardBreakEscape\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeHardBreakEscape(effects, ok, nok) {\n  return start\n\n  /**\n   * Start of a hard break (escape).\n   *\n   * ```markdown\n   * > | a\\\n   *      ^\n   *   | b\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    effects.enter('hardBreakEscape')\n    effects.consume(code)\n    return after\n  }\n\n  /**\n   * After `\\`, at eol.\n   *\n   * ```markdown\n   * > | a\\\n   *       ^\n   *   | b\n   * ```\n   *\n   *  @type {State}\n   */\n  function after(code) {\n    if (markdownLineEnding(code)) {\n      effects.exit('hardBreakEscape')\n      return ok(code)\n    }\n    return nok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Previous} Previous\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n */\n\nimport {markdownLineEnding} from 'micromark-util-character'\n/** @type {Construct} */\nexport const codeText = {\n  name: 'codeText',\n  tokenize: tokenizeCodeText,\n  resolve: resolveCodeText,\n  previous\n}\n\n// To do: next major: don’t resolve, like `markdown-rs`.\n/** @type {Resolver} */\nfunction resolveCodeText(events) {\n  let tailExitIndex = events.length - 4\n  let headEnterIndex = 3\n  /** @type {number} */\n  let index\n  /** @type {number | undefined} */\n  let enter\n\n  // If we start and end with an EOL or a space.\n  if (\n    (events[headEnterIndex][1].type === 'lineEnding' ||\n      events[headEnterIndex][1].type === 'space') &&\n    (events[tailExitIndex][1].type === 'lineEnding' ||\n      events[tailExitIndex][1].type === 'space')\n  ) {\n    index = headEnterIndex\n\n    // And we have data.\n    while (++index < tailExitIndex) {\n      if (events[index][1].type === 'codeTextData') {\n        // Then we have padding.\n        events[headEnterIndex][1].type = 'codeTextPadding'\n        events[tailExitIndex][1].type = 'codeTextPadding'\n        headEnterIndex += 2\n        tailExitIndex -= 2\n        break\n      }\n    }\n  }\n\n  // Merge adjacent spaces and data.\n  index = headEnterIndex - 1\n  tailExitIndex++\n  while (++index <= tailExitIndex) {\n    if (enter === undefined) {\n      if (index !== tailExitIndex && events[index][1].type !== 'lineEnding') {\n        enter = index\n      }\n    } else if (\n      index === tailExitIndex ||\n      events[index][1].type === 'lineEnding'\n    ) {\n      events[enter][1].type = 'codeTextData'\n      if (index !== enter + 2) {\n        events[enter][1].end = events[index - 1][1].end\n        events.splice(enter + 2, index - enter - 2)\n        tailExitIndex -= index - enter - 2\n        index = enter + 2\n      }\n      enter = undefined\n    }\n  }\n  return events\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Previous}\n */\nfunction previous(code) {\n  // If there is a previous code, there will always be a tail.\n  return (\n    code !== 96 ||\n    this.events[this.events.length - 1][1].type === 'characterEscape'\n  )\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeCodeText(effects, ok, nok) {\n  const self = this\n  let sizeOpen = 0\n  /** @type {number} */\n  let size\n  /** @type {Token} */\n  let token\n  return start\n\n  /**\n   * Start of code (text).\n   *\n   * ```markdown\n   * > | `a`\n   *     ^\n   * > | \\`a`\n   *      ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    effects.enter('codeText')\n    effects.enter('codeTextSequence')\n    return sequenceOpen(code)\n  }\n\n  /**\n   * In opening sequence.\n   *\n   * ```markdown\n   * > | `a`\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function sequenceOpen(code) {\n    if (code === 96) {\n      effects.consume(code)\n      sizeOpen++\n      return sequenceOpen\n    }\n    effects.exit('codeTextSequence')\n    return between(code)\n  }\n\n  /**\n   * Between something and something else.\n   *\n   * ```markdown\n   * > | `a`\n   *      ^^\n   * ```\n   *\n   * @type {State}\n   */\n  function between(code) {\n    // EOF.\n    if (code === null) {\n      return nok(code)\n    }\n\n    // To do: next major: don’t do spaces in resolve, but when compiling,\n    // like `markdown-rs`.\n    // Tabs don’t work, and virtual spaces don’t make sense.\n    if (code === 32) {\n      effects.enter('space')\n      effects.consume(code)\n      effects.exit('space')\n      return between\n    }\n\n    // Closing fence? Could also be data.\n    if (code === 96) {\n      token = effects.enter('codeTextSequence')\n      size = 0\n      return sequenceClose(code)\n    }\n    if (markdownLineEnding(code)) {\n      effects.enter('lineEnding')\n      effects.consume(code)\n      effects.exit('lineEnding')\n      return between\n    }\n\n    // Data.\n    effects.enter('codeTextData')\n    return data(code)\n  }\n\n  /**\n   * In data.\n   *\n   * ```markdown\n   * > | `a`\n   *      ^\n   * ```\n   *\n   * @type {State}\n   */\n  function data(code) {\n    if (\n      code === null ||\n      code === 32 ||\n      code === 96 ||\n      markdownLineEnding(code)\n    ) {\n      effects.exit('codeTextData')\n      return between(code)\n    }\n    effects.consume(code)\n    return data\n  }\n\n  /**\n   * In closing sequence.\n   *\n   * ```markdown\n   * > | `a`\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function sequenceClose(code) {\n    // More.\n    if (code === 96) {\n      effects.consume(code)\n      size++\n      return sequenceClose\n    }\n\n    // Done!\n    if (size === sizeOpen) {\n      effects.exit('codeTextSequence')\n      effects.exit('codeText')\n      return ok(code)\n    }\n\n    // More or less accents: mark as data.\n    token.type = 'codeTextData'\n    return data(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Extension} Extension\n */\n\nimport {\n  attention,\n  autolink,\n  blockQuote,\n  characterEscape,\n  characterReference,\n  codeFenced,\n  codeIndented,\n  codeText,\n  definition,\n  hardBreakEscape,\n  headingAtx,\n  htmlFlow,\n  htmlText,\n  labelEnd,\n  labelStartImage,\n  labelStartLink,\n  lineEnding,\n  list,\n  setextUnderline,\n  thematicBreak\n} from 'micromark-core-commonmark'\nimport {resolver as resolveText} from './initialize/text.js'\n\n/** @satisfies {Extension['document']} */\nexport const document = {\n  [42]: list,\n  [43]: list,\n  [45]: list,\n  [48]: list,\n  [49]: list,\n  [50]: list,\n  [51]: list,\n  [52]: list,\n  [53]: list,\n  [54]: list,\n  [55]: list,\n  [56]: list,\n  [57]: list,\n  [62]: blockQuote\n}\n\n/** @satisfies {Extension['contentInitial']} */\nexport const contentInitial = {\n  [91]: definition\n}\n\n/** @satisfies {Extension['flowInitial']} */\nexport const flowInitial = {\n  [-2]: codeIndented,\n  [-1]: codeIndented,\n  [32]: codeIndented\n}\n\n/** @satisfies {Extension['flow']} */\nexport const flow = {\n  [35]: headingAtx,\n  [42]: thematicBreak,\n  [45]: [setextUnderline, thematicBreak],\n  [60]: htmlFlow,\n  [61]: setextUnderline,\n  [95]: thematicBreak,\n  [96]: codeFenced,\n  [126]: codeFenced\n}\n\n/** @satisfies {Extension['string']} */\nexport const string = {\n  [38]: characterReference,\n  [92]: characterEscape\n}\n\n/** @satisfies {Extension['text']} */\nexport const text = {\n  [-5]: lineEnding,\n  [-4]: lineEnding,\n  [-3]: lineEnding,\n  [33]: labelStartImage,\n  [38]: characterReference,\n  [42]: attention,\n  [60]: [autolink, htmlText],\n  [91]: labelStartLink,\n  [92]: [hardBreakEscape, characterEscape],\n  [93]: labelEnd,\n  [95]: attention,\n  [96]: codeText\n}\n\n/** @satisfies {Extension['insideSpan']} */\nexport const insideSpan = {\n  null: [attention, resolveText]\n}\n\n/** @satisfies {Extension['attentionMarkers']} */\nexport const attentionMarkers = {\n  null: [42, 95]\n}\n\n/** @satisfies {Extension['disable']} */\nexport const disable = {\n  null: []\n}\n","/**\n * @typedef {import('micromark-util-types').Create} Create\n * @typedef {import('micromark-util-types').FullNormalizedExtension} FullNormalizedExtension\n * @typedef {import('micromark-util-types').InitialConstruct} InitialConstruct\n * @typedef {import('micromark-util-types').ParseContext} ParseContext\n * @typedef {import('micromark-util-types').ParseOptions} ParseOptions\n */\n\nimport {combineExtensions} from 'micromark-util-combine-extensions'\nimport {content} from './initialize/content.js'\nimport {document} from './initialize/document.js'\nimport {flow} from './initialize/flow.js'\nimport {string, text} from './initialize/text.js'\nimport {createTokenizer} from './create-tokenizer.js'\nimport * as defaultConstructs from './constructs.js'\n\n/**\n * @param {ParseOptions | null | undefined} [options]\n * @returns {ParseContext}\n */\nexport function parse(options) {\n  const settings = options || {}\n  const constructs =\n    /** @type {FullNormalizedExtension} */\n    combineExtensions([defaultConstructs, ...(settings.extensions || [])])\n\n  /** @type {ParseContext} */\n  const parser = {\n    defined: [],\n    lazy: {},\n    constructs,\n    content: create(content),\n    document: create(document),\n    flow: create(flow),\n    string: create(string),\n    text: create(text)\n  }\n  return parser\n\n  /**\n   * @param {InitialConstruct} initial\n   */\n  function create(initial) {\n    return creator\n    /** @type {Create} */\n    function creator(from) {\n      return createTokenizer(parser, initial, from)\n    }\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Chunk} Chunk\n * @typedef {import('micromark-util-types').Code} Code\n * @typedef {import('micromark-util-types').Encoding} Encoding\n * @typedef {import('micromark-util-types').Value} Value\n */\n\n/**\n * @callback Preprocessor\n * @param {Value} value\n * @param {Encoding | null | undefined} [encoding]\n * @param {boolean | null | undefined} [end=false]\n * @returns {Array<Chunk>}\n */\n\nconst search = /[\\0\\t\\n\\r]/g\n\n/**\n * @returns {Preprocessor}\n */\nexport function preprocess() {\n  let column = 1\n  let buffer = ''\n  /** @type {boolean | undefined} */\n  let start = true\n  /** @type {boolean | undefined} */\n  let atCarriageReturn\n  return preprocessor\n\n  /** @type {Preprocessor} */\n  // eslint-disable-next-line complexity\n  function preprocessor(value, encoding, end) {\n    /** @type {Array<Chunk>} */\n    const chunks = []\n    /** @type {RegExpMatchArray | null} */\n    let match\n    /** @type {number} */\n    let next\n    /** @type {number} */\n    let startPosition\n    /** @type {number} */\n    let endPosition\n    /** @type {Code} */\n    let code\n    value =\n      buffer +\n      (typeof value === 'string'\n        ? value.toString()\n        : new TextDecoder(encoding || undefined).decode(value))\n    startPosition = 0\n    buffer = ''\n    if (start) {\n      // To do: `markdown-rs` actually parses BOMs (byte order mark).\n      if (value.charCodeAt(0) === 65279) {\n        startPosition++\n      }\n      start = undefined\n    }\n    while (startPosition < value.length) {\n      search.lastIndex = startPosition\n      match = search.exec(value)\n      endPosition =\n        match && match.index !== undefined ? match.index : value.length\n      code = value.charCodeAt(endPosition)\n      if (!match) {\n        buffer = value.slice(startPosition)\n        break\n      }\n      if (code === 10 && startPosition === endPosition && atCarriageReturn) {\n        chunks.push(-3)\n        atCarriageReturn = undefined\n      } else {\n        if (atCarriageReturn) {\n          chunks.push(-5)\n          atCarriageReturn = undefined\n        }\n        if (startPosition < endPosition) {\n          chunks.push(value.slice(startPosition, endPosition))\n          column += endPosition - startPosition\n        }\n        switch (code) {\n          case 0: {\n            chunks.push(65533)\n            column++\n            break\n          }\n          case 9: {\n            next = Math.ceil(column / 4) * 4\n            chunks.push(-2)\n            while (column++ < next) chunks.push(-1)\n            break\n          }\n          case 10: {\n            chunks.push(-4)\n            column = 1\n            break\n          }\n          default: {\n            atCarriageReturn = true\n            column = 1\n          }\n        }\n      }\n      startPosition = endPosition + 1\n    }\n    if (end) {\n      if (atCarriageReturn) chunks.push(-5)\n      if (buffer) chunks.push(buffer)\n      chunks.push(null)\n    }\n    return chunks\n  }\n}\n","/**\n * Turn the number (in string form as either hexa- or plain decimal) coming from\n * a numeric character reference into a character.\n *\n * Sort of like `String.fromCodePoint(Number.parseInt(value, base))`, but makes\n * non-characters and control characters safe.\n *\n * @param {string} value\n *   Value to decode.\n * @param {number} base\n *   Numeric base.\n * @returns {string}\n *   Character.\n */\nexport function decodeNumericCharacterReference(value, base) {\n  const code = Number.parseInt(value, base);\n  if (\n  // C0 except for HT, LF, FF, CR, space.\n  code < 9 || code === 11 || code > 13 && code < 32 ||\n  // Control character (DEL) of C0, and C1 controls.\n  code > 126 && code < 160 ||\n  // Lone high surrogates and low surrogates.\n  code > 55_295 && code < 57_344 ||\n  // Noncharacters.\n  code > 64_975 && code < 65_008 || /* eslint-disable no-bitwise */\n  (code & 65_535) === 65_535 || (code & 65_535) === 65_534 || /* eslint-enable no-bitwise */\n  // Out of range\n  code > 1_114_111) {\n    return \"\\uFFFD\";\n  }\n  return String.fromCodePoint(code);\n}","import {decodeNamedCharacterReference} from 'decode-named-character-reference'\nimport {decodeNumericCharacterReference} from 'micromark-util-decode-numeric-character-reference'\nconst characterEscapeOrReference =\n  /\\\\([!-/:-@[-`{-~])|&(#(?:\\d{1,7}|x[\\da-f]{1,6})|[\\da-z]{1,31});/gi\n\n/**\n * Decode markdown strings (which occur in places such as fenced code info\n * strings, destinations, labels, and titles).\n *\n * The “string” content type allows character escapes and -references.\n * This decodes those.\n *\n * @param {string} value\n *   Value to decode.\n * @returns {string}\n *   Decoded value.\n */\nexport function decodeString(value) {\n  return value.replace(characterEscapeOrReference, decode)\n}\n\n/**\n * @param {string} $0\n * @param {string} $1\n * @param {string} $2\n * @returns {string}\n */\nfunction decode($0, $1, $2) {\n  if ($1) {\n    // Escape.\n    return $1\n  }\n\n  // Reference.\n  const head = $2.charCodeAt(0)\n  if (head === 35) {\n    const head = $2.charCodeAt(1)\n    const hex = head === 120 || head === 88\n    return decodeNumericCharacterReference($2.slice(hex ? 2 : 1), hex ? 16 : 10)\n  }\n  return decodeNamedCharacterReference($2) || $0\n}\n","/**\n * @typedef {import('mdast').Break} Break\n * @typedef {import('mdast').Blockquote} Blockquote\n * @typedef {import('mdast').Code} Code\n * @typedef {import('mdast').Definition} Definition\n * @typedef {import('mdast').Emphasis} Emphasis\n * @typedef {import('mdast').Heading} Heading\n * @typedef {import('mdast').Html} Html\n * @typedef {import('mdast').Image} Image\n * @typedef {import('mdast').InlineCode} InlineCode\n * @typedef {import('mdast').Link} Link\n * @typedef {import('mdast').List} List\n * @typedef {import('mdast').ListItem} ListItem\n * @typedef {import('mdast').Nodes} Nodes\n * @typedef {import('mdast').Paragraph} Paragraph\n * @typedef {import('mdast').Parent} Parent\n * @typedef {import('mdast').PhrasingContent} PhrasingContent\n * @typedef {import('mdast').ReferenceType} ReferenceType\n * @typedef {import('mdast').Root} Root\n * @typedef {import('mdast').Strong} Strong\n * @typedef {import('mdast').Text} Text\n * @typedef {import('mdast').ThematicBreak} ThematicBreak\n *\n * @typedef {import('micromark-util-types').Encoding} Encoding\n * @typedef {import('micromark-util-types').Event} Event\n * @typedef {import('micromark-util-types').ParseOptions} ParseOptions\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Value} Value\n *\n * @typedef {import('unist').Point} Point\n *\n * @typedef {import('../index.js').CompileData} CompileData\n */\n\n/**\n * @typedef {Omit<Parent, 'children' | 'type'> & {type: 'fragment', children: Array<PhrasingContent>}} Fragment\n */\n\n/**\n * @callback Transform\n *   Extra transform, to change the AST afterwards.\n * @param {Root} tree\n *   Tree to transform.\n * @returns {Root | null | undefined | void}\n *   New tree or nothing (in which case the current tree is used).\n *\n * @callback Handle\n *   Handle a token.\n * @param {CompileContext} this\n *   Context.\n * @param {Token} token\n *   Current token.\n * @returns {undefined | void}\n *   Nothing.\n *\n * @typedef {Record<string, Handle>} Handles\n *   Token types mapping to handles\n *\n * @callback OnEnterError\n *   Handle the case where the `right` token is open, but it is closed (by the\n *   `left` token) or because we reached the end of the document.\n * @param {Omit<CompileContext, 'sliceSerialize'>} this\n *   Context.\n * @param {Token | undefined} left\n *   Left token.\n * @param {Token} right\n *   Right token.\n * @returns {undefined}\n *   Nothing.\n *\n * @callback OnExitError\n *   Handle the case where the `right` token is open but it is closed by\n *   exiting the `left` token.\n * @param {Omit<CompileContext, 'sliceSerialize'>} this\n *   Context.\n * @param {Token} left\n *   Left token.\n * @param {Token} right\n *   Right token.\n * @returns {undefined}\n *   Nothing.\n *\n * @typedef {[Token, OnEnterError | undefined]} TokenTuple\n *   Open token on the stack, with an optional error handler for when\n *   that token isn’t closed properly.\n */\n\n/**\n * @typedef Config\n *   Configuration.\n *\n *   We have our defaults, but extensions will add more.\n * @property {Array<string>} canContainEols\n *   Token types where line endings are used.\n * @property {Handles} enter\n *   Opening handles.\n * @property {Handles} exit\n *   Closing handles.\n * @property {Array<Transform>} transforms\n *   Tree transforms.\n *\n * @typedef {Partial<Config>} Extension\n *   Change how markdown tokens from micromark are turned into mdast.\n *\n * @typedef CompileContext\n *   mdast compiler context.\n * @property {Array<Fragment | Nodes>} stack\n *   Stack of nodes.\n * @property {Array<TokenTuple>} tokenStack\n *   Stack of tokens.\n * @property {(this: CompileContext) => undefined} buffer\n *   Capture some of the output data.\n * @property {(this: CompileContext) => string} resume\n *   Stop capturing and access the output data.\n * @property {(this: CompileContext, node: Nodes, token: Token, onError?: OnEnterError) => undefined} enter\n *   Enter a node.\n * @property {(this: CompileContext, token: Token, onError?: OnExitError) => undefined} exit\n *   Exit a node.\n * @property {TokenizeContext['sliceSerialize']} sliceSerialize\n *   Get the string value of a token.\n * @property {Config} config\n *   Configuration.\n * @property {CompileData} data\n *   Info passed around; key/value store.\n *\n * @typedef FromMarkdownOptions\n *   Configuration for how to build mdast.\n * @property {Array<Extension | Array<Extension>> | null | undefined} [mdastExtensions]\n *   Extensions for this utility to change how tokens are turned into a tree.\n *\n * @typedef {ParseOptions & FromMarkdownOptions} Options\n *   Configuration.\n */\n\nimport {toString} from 'mdast-util-to-string'\nimport {parse, postprocess, preprocess} from 'micromark'\nimport {decodeNumericCharacterReference} from 'micromark-util-decode-numeric-character-reference'\nimport {decodeString} from 'micromark-util-decode-string'\nimport {normalizeIdentifier} from 'micromark-util-normalize-identifier'\nimport {decodeNamedCharacterReference} from 'decode-named-character-reference'\nimport {stringifyPosition} from 'unist-util-stringify-position'\nconst own = {}.hasOwnProperty\n\n/**\n * Turn markdown into a syntax tree.\n *\n * @overload\n * @param {Value} value\n * @param {Encoding | null | undefined} [encoding]\n * @param {Options | null | undefined} [options]\n * @returns {Root}\n *\n * @overload\n * @param {Value} value\n * @param {Options | null | undefined} [options]\n * @returns {Root}\n *\n * @param {Value} value\n *   Markdown to parse.\n * @param {Encoding | Options | null | undefined} [encoding]\n *   Character encoding for when `value` is `Buffer`.\n * @param {Options | null | undefined} [options]\n *   Configuration.\n * @returns {Root}\n *   mdast tree.\n */\nexport function fromMarkdown(value, encoding, options) {\n  if (typeof encoding !== 'string') {\n    options = encoding\n    encoding = undefined\n  }\n  return compiler(options)(\n    postprocess(\n      parse(options).document().write(preprocess()(value, encoding, true))\n    )\n  )\n}\n\n/**\n * Note this compiler only understand complete buffering, not streaming.\n *\n * @param {Options | null | undefined} [options]\n */\nfunction compiler(options) {\n  /** @type {Config} */\n  const config = {\n    transforms: [],\n    canContainEols: ['emphasis', 'fragment', 'heading', 'paragraph', 'strong'],\n    enter: {\n      autolink: opener(link),\n      autolinkProtocol: onenterdata,\n      autolinkEmail: onenterdata,\n      atxHeading: opener(heading),\n      blockQuote: opener(blockQuote),\n      characterEscape: onenterdata,\n      characterReference: onenterdata,\n      codeFenced: opener(codeFlow),\n      codeFencedFenceInfo: buffer,\n      codeFencedFenceMeta: buffer,\n      codeIndented: opener(codeFlow, buffer),\n      codeText: opener(codeText, buffer),\n      codeTextData: onenterdata,\n      data: onenterdata,\n      codeFlowValue: onenterdata,\n      definition: opener(definition),\n      definitionDestinationString: buffer,\n      definitionLabelString: buffer,\n      definitionTitleString: buffer,\n      emphasis: opener(emphasis),\n      hardBreakEscape: opener(hardBreak),\n      hardBreakTrailing: opener(hardBreak),\n      htmlFlow: opener(html, buffer),\n      htmlFlowData: onenterdata,\n      htmlText: opener(html, buffer),\n      htmlTextData: onenterdata,\n      image: opener(image),\n      label: buffer,\n      link: opener(link),\n      listItem: opener(listItem),\n      listItemValue: onenterlistitemvalue,\n      listOrdered: opener(list, onenterlistordered),\n      listUnordered: opener(list),\n      paragraph: opener(paragraph),\n      reference: onenterreference,\n      referenceString: buffer,\n      resourceDestinationString: buffer,\n      resourceTitleString: buffer,\n      setextHeading: opener(heading),\n      strong: opener(strong),\n      thematicBreak: opener(thematicBreak)\n    },\n    exit: {\n      atxHeading: closer(),\n      atxHeadingSequence: onexitatxheadingsequence,\n      autolink: closer(),\n      autolinkEmail: onexitautolinkemail,\n      autolinkProtocol: onexitautolinkprotocol,\n      blockQuote: closer(),\n      characterEscapeValue: onexitdata,\n      characterReferenceMarkerHexadecimal: onexitcharacterreferencemarker,\n      characterReferenceMarkerNumeric: onexitcharacterreferencemarker,\n      characterReferenceValue: onexitcharacterreferencevalue,\n      codeFenced: closer(onexitcodefenced),\n      codeFencedFence: onexitcodefencedfence,\n      codeFencedFenceInfo: onexitcodefencedfenceinfo,\n      codeFencedFenceMeta: onexitcodefencedfencemeta,\n      codeFlowValue: onexitdata,\n      codeIndented: closer(onexitcodeindented),\n      codeText: closer(onexitcodetext),\n      codeTextData: onexitdata,\n      data: onexitdata,\n      definition: closer(),\n      definitionDestinationString: onexitdefinitiondestinationstring,\n      definitionLabelString: onexitdefinitionlabelstring,\n      definitionTitleString: onexitdefinitiontitlestring,\n      emphasis: closer(),\n      hardBreakEscape: closer(onexithardbreak),\n      hardBreakTrailing: closer(onexithardbreak),\n      htmlFlow: closer(onexithtmlflow),\n      htmlFlowData: onexitdata,\n      htmlText: closer(onexithtmltext),\n      htmlTextData: onexitdata,\n      image: closer(onexitimage),\n      label: onexitlabel,\n      labelText: onexitlabeltext,\n      lineEnding: onexitlineending,\n      link: closer(onexitlink),\n      listItem: closer(),\n      listOrdered: closer(),\n      listUnordered: closer(),\n      paragraph: closer(),\n      referenceString: onexitreferencestring,\n      resourceDestinationString: onexitresourcedestinationstring,\n      resourceTitleString: onexitresourcetitlestring,\n      resource: onexitresource,\n      setextHeading: closer(onexitsetextheading),\n      setextHeadingLineSequence: onexitsetextheadinglinesequence,\n      setextHeadingText: onexitsetextheadingtext,\n      strong: closer(),\n      thematicBreak: closer()\n    }\n  }\n  configure(config, (options || {}).mdastExtensions || [])\n\n  /** @type {CompileData} */\n  const data = {}\n  return compile\n\n  /**\n   * Turn micromark events into an mdast tree.\n   *\n   * @param {Array<Event>} events\n   *   Events.\n   * @returns {Root}\n   *   mdast tree.\n   */\n  function compile(events) {\n    /** @type {Root} */\n    let tree = {\n      type: 'root',\n      children: []\n    }\n    /** @type {Omit<CompileContext, 'sliceSerialize'>} */\n    const context = {\n      stack: [tree],\n      tokenStack: [],\n      config,\n      enter,\n      exit,\n      buffer,\n      resume,\n      data\n    }\n    /** @type {Array<number>} */\n    const listStack = []\n    let index = -1\n    while (++index < events.length) {\n      // We preprocess lists to add `listItem` tokens, and to infer whether\n      // items the list itself are spread out.\n      if (\n        events[index][1].type === 'listOrdered' ||\n        events[index][1].type === 'listUnordered'\n      ) {\n        if (events[index][0] === 'enter') {\n          listStack.push(index)\n        } else {\n          const tail = listStack.pop()\n          index = prepareList(events, tail, index)\n        }\n      }\n    }\n    index = -1\n    while (++index < events.length) {\n      const handler = config[events[index][0]]\n      if (own.call(handler, events[index][1].type)) {\n        handler[events[index][1].type].call(\n          Object.assign(\n            {\n              sliceSerialize: events[index][2].sliceSerialize\n            },\n            context\n          ),\n          events[index][1]\n        )\n      }\n    }\n\n    // Handle tokens still being open.\n    if (context.tokenStack.length > 0) {\n      const tail = context.tokenStack[context.tokenStack.length - 1]\n      const handler = tail[1] || defaultOnError\n      handler.call(context, undefined, tail[0])\n    }\n\n    // Figure out `root` position.\n    tree.position = {\n      start: point(\n        events.length > 0\n          ? events[0][1].start\n          : {\n              line: 1,\n              column: 1,\n              offset: 0\n            }\n      ),\n      end: point(\n        events.length > 0\n          ? events[events.length - 2][1].end\n          : {\n              line: 1,\n              column: 1,\n              offset: 0\n            }\n      )\n    }\n\n    // Call transforms.\n    index = -1\n    while (++index < config.transforms.length) {\n      tree = config.transforms[index](tree) || tree\n    }\n    return tree\n  }\n\n  /**\n   * @param {Array<Event>} events\n   * @param {number} start\n   * @param {number} length\n   * @returns {number}\n   */\n  function prepareList(events, start, length) {\n    let index = start - 1\n    let containerBalance = -1\n    let listSpread = false\n    /** @type {Token | undefined} */\n    let listItem\n    /** @type {number | undefined} */\n    let lineIndex\n    /** @type {number | undefined} */\n    let firstBlankLineIndex\n    /** @type {boolean | undefined} */\n    let atMarker\n    while (++index <= length) {\n      const event = events[index]\n      switch (event[1].type) {\n        case 'listUnordered':\n        case 'listOrdered':\n        case 'blockQuote': {\n          if (event[0] === 'enter') {\n            containerBalance++\n          } else {\n            containerBalance--\n          }\n          atMarker = undefined\n          break\n        }\n        case 'lineEndingBlank': {\n          if (event[0] === 'enter') {\n            if (\n              listItem &&\n              !atMarker &&\n              !containerBalance &&\n              !firstBlankLineIndex\n            ) {\n              firstBlankLineIndex = index\n            }\n            atMarker = undefined\n          }\n          break\n        }\n        case 'linePrefix':\n        case 'listItemValue':\n        case 'listItemMarker':\n        case 'listItemPrefix':\n        case 'listItemPrefixWhitespace': {\n          // Empty.\n\n          break\n        }\n        default: {\n          atMarker = undefined\n        }\n      }\n      if (\n        (!containerBalance &&\n          event[0] === 'enter' &&\n          event[1].type === 'listItemPrefix') ||\n        (containerBalance === -1 &&\n          event[0] === 'exit' &&\n          (event[1].type === 'listUnordered' ||\n            event[1].type === 'listOrdered'))\n      ) {\n        if (listItem) {\n          let tailIndex = index\n          lineIndex = undefined\n          while (tailIndex--) {\n            const tailEvent = events[tailIndex]\n            if (\n              tailEvent[1].type === 'lineEnding' ||\n              tailEvent[1].type === 'lineEndingBlank'\n            ) {\n              if (tailEvent[0] === 'exit') continue\n              if (lineIndex) {\n                events[lineIndex][1].type = 'lineEndingBlank'\n                listSpread = true\n              }\n              tailEvent[1].type = 'lineEnding'\n              lineIndex = tailIndex\n            } else if (\n              tailEvent[1].type === 'linePrefix' ||\n              tailEvent[1].type === 'blockQuotePrefix' ||\n              tailEvent[1].type === 'blockQuotePrefixWhitespace' ||\n              tailEvent[1].type === 'blockQuoteMarker' ||\n              tailEvent[1].type === 'listItemIndent'\n            ) {\n              // Empty\n            } else {\n              break\n            }\n          }\n          if (\n            firstBlankLineIndex &&\n            (!lineIndex || firstBlankLineIndex < lineIndex)\n          ) {\n            listItem._spread = true\n          }\n\n          // Fix position.\n          listItem.end = Object.assign(\n            {},\n            lineIndex ? events[lineIndex][1].start : event[1].end\n          )\n          events.splice(lineIndex || index, 0, ['exit', listItem, event[2]])\n          index++\n          length++\n        }\n\n        // Create a new list item.\n        if (event[1].type === 'listItemPrefix') {\n          /** @type {Token} */\n          const item = {\n            type: 'listItem',\n            _spread: false,\n            start: Object.assign({}, event[1].start),\n            // @ts-expect-error: we’ll add `end` in a second.\n            end: undefined\n          }\n          listItem = item\n          events.splice(index, 0, ['enter', item, event[2]])\n          index++\n          length++\n          firstBlankLineIndex = undefined\n          atMarker = true\n        }\n      }\n    }\n    events[start][1]._spread = listSpread\n    return length\n  }\n\n  /**\n   * Create an opener handle.\n   *\n   * @param {(token: Token) => Nodes} create\n   *   Create a node.\n   * @param {Handle | undefined} [and]\n   *   Optional function to also run.\n   * @returns {Handle}\n   *   Handle.\n   */\n  function opener(create, and) {\n    return open\n\n    /**\n     * @this {CompileContext}\n     * @param {Token} token\n     * @returns {undefined}\n     */\n    function open(token) {\n      enter.call(this, create(token), token)\n      if (and) and.call(this, token)\n    }\n  }\n\n  /**\n   * @this {CompileContext}\n   * @returns {undefined}\n   */\n  function buffer() {\n    this.stack.push({\n      type: 'fragment',\n      children: []\n    })\n  }\n\n  /**\n   * @this {CompileContext}\n   *   Context.\n   * @param {Nodes} node\n   *   Node to enter.\n   * @param {Token} token\n   *   Corresponding token.\n   * @param {OnEnterError | undefined} [errorHandler]\n   *   Handle the case where this token is open, but it is closed by something else.\n   * @returns {undefined}\n   *   Nothing.\n   */\n  function enter(node, token, errorHandler) {\n    const parent = this.stack[this.stack.length - 1]\n    /** @type {Array<Nodes>} */\n    const siblings = parent.children\n    siblings.push(node)\n    this.stack.push(node)\n    this.tokenStack.push([token, errorHandler])\n    node.position = {\n      start: point(token.start),\n      // @ts-expect-error: `end` will be patched later.\n      end: undefined\n    }\n  }\n\n  /**\n   * Create a closer handle.\n   *\n   * @param {Handle | undefined} [and]\n   *   Optional function to also run.\n   * @returns {Handle}\n   *   Handle.\n   */\n  function closer(and) {\n    return close\n\n    /**\n     * @this {CompileContext}\n     * @param {Token} token\n     * @returns {undefined}\n     */\n    function close(token) {\n      if (and) and.call(this, token)\n      exit.call(this, token)\n    }\n  }\n\n  /**\n   * @this {CompileContext}\n   *   Context.\n   * @param {Token} token\n   *   Corresponding token.\n   * @param {OnExitError | undefined} [onExitError]\n   *   Handle the case where another token is open.\n   * @returns {undefined}\n   *   Nothing.\n   */\n  function exit(token, onExitError) {\n    const node = this.stack.pop()\n    const open = this.tokenStack.pop()\n    if (!open) {\n      throw new Error(\n        'Cannot close `' +\n          token.type +\n          '` (' +\n          stringifyPosition({\n            start: token.start,\n            end: token.end\n          }) +\n          '): it’s not open'\n      )\n    } else if (open[0].type !== token.type) {\n      if (onExitError) {\n        onExitError.call(this, token, open[0])\n      } else {\n        const handler = open[1] || defaultOnError\n        handler.call(this, token, open[0])\n      }\n    }\n    node.position.end = point(token.end)\n  }\n\n  /**\n   * @this {CompileContext}\n   * @returns {string}\n   */\n  function resume() {\n    return toString(this.stack.pop())\n  }\n\n  //\n  // Handlers.\n  //\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onenterlistordered() {\n    this.data.expectingFirstListItemValue = true\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onenterlistitemvalue(token) {\n    if (this.data.expectingFirstListItemValue) {\n      const ancestor = this.stack[this.stack.length - 2]\n      ancestor.start = Number.parseInt(this.sliceSerialize(token), 10)\n      this.data.expectingFirstListItemValue = undefined\n    }\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitcodefencedfenceinfo() {\n    const data = this.resume()\n    const node = this.stack[this.stack.length - 1]\n    node.lang = data\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitcodefencedfencemeta() {\n    const data = this.resume()\n    const node = this.stack[this.stack.length - 1]\n    node.meta = data\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitcodefencedfence() {\n    // Exit if this is the closing fence.\n    if (this.data.flowCodeInside) return\n    this.buffer()\n    this.data.flowCodeInside = true\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitcodefenced() {\n    const data = this.resume()\n    const node = this.stack[this.stack.length - 1]\n    node.value = data.replace(/^(\\r?\\n|\\r)|(\\r?\\n|\\r)$/g, '')\n    this.data.flowCodeInside = undefined\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitcodeindented() {\n    const data = this.resume()\n    const node = this.stack[this.stack.length - 1]\n    node.value = data.replace(/(\\r?\\n|\\r)$/g, '')\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitdefinitionlabelstring(token) {\n    const label = this.resume()\n    const node = this.stack[this.stack.length - 1]\n    node.label = label\n    node.identifier = normalizeIdentifier(\n      this.sliceSerialize(token)\n    ).toLowerCase()\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitdefinitiontitlestring() {\n    const data = this.resume()\n    const node = this.stack[this.stack.length - 1]\n    node.title = data\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitdefinitiondestinationstring() {\n    const data = this.resume()\n    const node = this.stack[this.stack.length - 1]\n    node.url = data\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitatxheadingsequence(token) {\n    const node = this.stack[this.stack.length - 1]\n    if (!node.depth) {\n      const depth = this.sliceSerialize(token).length\n      node.depth = depth\n    }\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitsetextheadingtext() {\n    this.data.setextHeadingSlurpLineEnding = true\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitsetextheadinglinesequence(token) {\n    const node = this.stack[this.stack.length - 1]\n    node.depth = this.sliceSerialize(token).codePointAt(0) === 61 ? 1 : 2\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitsetextheading() {\n    this.data.setextHeadingSlurpLineEnding = undefined\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onenterdata(token) {\n    const node = this.stack[this.stack.length - 1]\n    /** @type {Array<Nodes>} */\n    const siblings = node.children\n    let tail = siblings[siblings.length - 1]\n    if (!tail || tail.type !== 'text') {\n      // Add a new text node.\n      tail = text()\n      tail.position = {\n        start: point(token.start),\n        // @ts-expect-error: we’ll add `end` later.\n        end: undefined\n      }\n      siblings.push(tail)\n    }\n    this.stack.push(tail)\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexitdata(token) {\n    const tail = this.stack.pop()\n    tail.value += this.sliceSerialize(token)\n    tail.position.end = point(token.end)\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexitlineending(token) {\n    const context = this.stack[this.stack.length - 1]\n    // If we’re at a hard break, include the line ending in there.\n    if (this.data.atHardBreak) {\n      const tail = context.children[context.children.length - 1]\n      tail.position.end = point(token.end)\n      this.data.atHardBreak = undefined\n      return\n    }\n    if (\n      !this.data.setextHeadingSlurpLineEnding &&\n      config.canContainEols.includes(context.type)\n    ) {\n      onenterdata.call(this, token)\n      onexitdata.call(this, token)\n    }\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexithardbreak() {\n    this.data.atHardBreak = true\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexithtmlflow() {\n    const data = this.resume()\n    const node = this.stack[this.stack.length - 1]\n    node.value = data\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexithtmltext() {\n    const data = this.resume()\n    const node = this.stack[this.stack.length - 1]\n    node.value = data\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexitcodetext() {\n    const data = this.resume()\n    const node = this.stack[this.stack.length - 1]\n    node.value = data\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexitlink() {\n    const node = this.stack[this.stack.length - 1]\n    // Note: there are also `identifier` and `label` fields on this link node!\n    // These are used / cleaned here.\n    // To do: clean.\n    if (this.data.inReference) {\n      /** @type {ReferenceType} */\n      const referenceType = this.data.referenceType || 'shortcut'\n      node.type += 'Reference'\n      // @ts-expect-error: mutate.\n      node.referenceType = referenceType\n      // @ts-expect-error: mutate.\n      delete node.url\n      delete node.title\n    } else {\n      // @ts-expect-error: mutate.\n      delete node.identifier\n      // @ts-expect-error: mutate.\n      delete node.label\n    }\n    this.data.referenceType = undefined\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexitimage() {\n    const node = this.stack[this.stack.length - 1]\n    // Note: there are also `identifier` and `label` fields on this link node!\n    // These are used / cleaned here.\n    // To do: clean.\n    if (this.data.inReference) {\n      /** @type {ReferenceType} */\n      const referenceType = this.data.referenceType || 'shortcut'\n      node.type += 'Reference'\n      // @ts-expect-error: mutate.\n      node.referenceType = referenceType\n      // @ts-expect-error: mutate.\n      delete node.url\n      delete node.title\n    } else {\n      // @ts-expect-error: mutate.\n      delete node.identifier\n      // @ts-expect-error: mutate.\n      delete node.label\n    }\n    this.data.referenceType = undefined\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexitlabeltext(token) {\n    const string = this.sliceSerialize(token)\n    const ancestor = this.stack[this.stack.length - 2]\n    // @ts-expect-error: stash this on the node, as it might become a reference\n    // later.\n    ancestor.label = decodeString(string)\n    // @ts-expect-error: same as above.\n    ancestor.identifier = normalizeIdentifier(string).toLowerCase()\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexitlabel() {\n    const fragment = this.stack[this.stack.length - 1]\n    const value = this.resume()\n    const node = this.stack[this.stack.length - 1]\n    // Assume a reference.\n    this.data.inReference = true\n    if (node.type === 'link') {\n      /** @type {Array<PhrasingContent>} */\n      const children = fragment.children\n      node.children = children\n    } else {\n      node.alt = value\n    }\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexitresourcedestinationstring() {\n    const data = this.resume()\n    const node = this.stack[this.stack.length - 1]\n    node.url = data\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexitresourcetitlestring() {\n    const data = this.resume()\n    const node = this.stack[this.stack.length - 1]\n    node.title = data\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexitresource() {\n    this.data.inReference = undefined\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onenterreference() {\n    this.data.referenceType = 'collapsed'\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexitreferencestring(token) {\n    const label = this.resume()\n    const node = this.stack[this.stack.length - 1]\n    // @ts-expect-error: stash this on the node, as it might become a reference\n    // later.\n    node.label = label\n    // @ts-expect-error: same as above.\n    node.identifier = normalizeIdentifier(\n      this.sliceSerialize(token)\n    ).toLowerCase()\n    this.data.referenceType = 'full'\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexitcharacterreferencemarker(token) {\n    this.data.characterReferenceType = token.type\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitcharacterreferencevalue(token) {\n    const data = this.sliceSerialize(token)\n    const type = this.data.characterReferenceType\n    /** @type {string} */\n    let value\n    if (type) {\n      value = decodeNumericCharacterReference(\n        data,\n        type === 'characterReferenceMarkerNumeric' ? 10 : 16\n      )\n      this.data.characterReferenceType = undefined\n    } else {\n      const result = decodeNamedCharacterReference(data)\n      value = result\n    }\n    const tail = this.stack.pop()\n    tail.value += value\n    tail.position.end = point(token.end)\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitautolinkprotocol(token) {\n    onexitdata.call(this, token)\n    const node = this.stack[this.stack.length - 1]\n    node.url = this.sliceSerialize(token)\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitautolinkemail(token) {\n    onexitdata.call(this, token)\n    const node = this.stack[this.stack.length - 1]\n    node.url = 'mailto:' + this.sliceSerialize(token)\n  }\n\n  //\n  // Creaters.\n  //\n\n  /** @returns {Blockquote} */\n  function blockQuote() {\n    return {\n      type: 'blockquote',\n      children: []\n    }\n  }\n\n  /** @returns {Code} */\n  function codeFlow() {\n    return {\n      type: 'code',\n      lang: null,\n      meta: null,\n      value: ''\n    }\n  }\n\n  /** @returns {InlineCode} */\n  function codeText() {\n    return {\n      type: 'inlineCode',\n      value: ''\n    }\n  }\n\n  /** @returns {Definition} */\n  function definition() {\n    return {\n      type: 'definition',\n      identifier: '',\n      label: null,\n      title: null,\n      url: ''\n    }\n  }\n\n  /** @returns {Emphasis} */\n  function emphasis() {\n    return {\n      type: 'emphasis',\n      children: []\n    }\n  }\n\n  /** @returns {Heading} */\n  function heading() {\n    return {\n      type: 'heading',\n      // @ts-expect-error `depth` will be set later.\n      depth: 0,\n      children: []\n    }\n  }\n\n  /** @returns {Break} */\n  function hardBreak() {\n    return {\n      type: 'break'\n    }\n  }\n\n  /** @returns {Html} */\n  function html() {\n    return {\n      type: 'html',\n      value: ''\n    }\n  }\n\n  /** @returns {Image} */\n  function image() {\n    return {\n      type: 'image',\n      title: null,\n      url: '',\n      alt: null\n    }\n  }\n\n  /** @returns {Link} */\n  function link() {\n    return {\n      type: 'link',\n      title: null,\n      url: '',\n      children: []\n    }\n  }\n\n  /**\n   * @param {Token} token\n   * @returns {List}\n   */\n  function list(token) {\n    return {\n      type: 'list',\n      ordered: token.type === 'listOrdered',\n      start: null,\n      spread: token._spread,\n      children: []\n    }\n  }\n\n  /**\n   * @param {Token} token\n   * @returns {ListItem}\n   */\n  function listItem(token) {\n    return {\n      type: 'listItem',\n      spread: token._spread,\n      checked: null,\n      children: []\n    }\n  }\n\n  /** @returns {Paragraph} */\n  function paragraph() {\n    return {\n      type: 'paragraph',\n      children: []\n    }\n  }\n\n  /** @returns {Strong} */\n  function strong() {\n    return {\n      type: 'strong',\n      children: []\n    }\n  }\n\n  /** @returns {Text} */\n  function text() {\n    return {\n      type: 'text',\n      value: ''\n    }\n  }\n\n  /** @returns {ThematicBreak} */\n  function thematicBreak() {\n    return {\n      type: 'thematicBreak'\n    }\n  }\n}\n\n/**\n * Copy a point-like value.\n *\n * @param {Point} d\n *   Point-like value.\n * @returns {Point}\n *   unist point.\n */\nfunction point(d) {\n  return {\n    line: d.line,\n    column: d.column,\n    offset: d.offset\n  }\n}\n\n/**\n * @param {Config} combined\n * @param {Array<Array<Extension> | Extension>} extensions\n * @returns {undefined}\n */\nfunction configure(combined, extensions) {\n  let index = -1\n  while (++index < extensions.length) {\n    const value = extensions[index]\n    if (Array.isArray(value)) {\n      configure(combined, value)\n    } else {\n      extension(combined, value)\n    }\n  }\n}\n\n/**\n * @param {Config} combined\n * @param {Extension} extension\n * @returns {undefined}\n */\nfunction extension(combined, extension) {\n  /** @type {keyof Extension} */\n  let key\n  for (key in extension) {\n    if (own.call(extension, key)) {\n      switch (key) {\n        case 'canContainEols': {\n          const right = extension[key]\n          if (right) {\n            combined[key].push(...right)\n          }\n          break\n        }\n        case 'transforms': {\n          const right = extension[key]\n          if (right) {\n            combined[key].push(...right)\n          }\n          break\n        }\n        case 'enter':\n        case 'exit': {\n          const right = extension[key]\n          if (right) {\n            Object.assign(combined[key], right)\n          }\n          break\n        }\n        // No default\n      }\n    }\n  }\n}\n\n/** @type {OnEnterError} */\nfunction defaultOnError(left, right) {\n  if (left) {\n    throw new Error(\n      'Cannot close `' +\n        left.type +\n        '` (' +\n        stringifyPosition({\n          start: left.start,\n          end: left.end\n        }) +\n        '): a different token (`' +\n        right.type +\n        '`, ' +\n        stringifyPosition({\n          start: right.start,\n          end: right.end\n        }) +\n        ') is open'\n    )\n  } else {\n    throw new Error(\n      'Cannot close document, a token (`' +\n        right.type +\n        '`, ' +\n        stringifyPosition({\n          start: right.start,\n          end: right.end\n        }) +\n        ') is still open'\n    )\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Event} Event\n */\n\nimport {subtokenize} from 'micromark-util-subtokenize'\n\n/**\n * @param {Array<Event>} events\n * @returns {Array<Event>}\n */\nexport function postprocess(events) {\n  while (!subtokenize(events)) {\n    // Empty\n  }\n  return events\n}\n","/**\n * @typedef {import('mdast').Root} Root\n * @typedef {import('mdast-util-from-markdown').Options} FromMarkdownOptions\n * @typedef {import('unified').Parser<Root>} Parser\n * @typedef {import('unified').Processor<Root>} Processor\n */\n\n/**\n * @typedef {Omit<FromMarkdownOptions, 'extensions' | 'mdastExtensions'>} Options\n */\n\nimport {fromMarkdown} from 'mdast-util-from-markdown'\n\n/**\n * Aadd support for parsing from markdown.\n *\n * @param {Readonly<Options> | null | undefined} [options]\n *   Configuration (optional).\n * @returns {undefined}\n *   Nothing.\n */\nexport default function remarkParse(options) {\n  /** @type {Processor} */\n  // @ts-expect-error: TS in JSDoc generates wrong types if `this` is typed regularly.\n  const self = this\n\n  self.parser = parser\n\n  /**\n   * @type {Parser}\n   */\n  function parser(doc) {\n    return fromMarkdown(doc, {\n      ...self.data('settings'),\n      ...options,\n      // Note: these options are not in the readme.\n      // The goal is for them to be set by plugins on `data` instead of being\n      // passed by users.\n      extensions: self.data('micromarkExtensions') || [],\n      mdastExtensions: self.data('fromMarkdownExtensions') || []\n    })\n  }\n}\n","export const VOID       = -1;\nexport const PRIMITIVE  = 0;\nexport const ARRAY      = 1;\nexport const OBJECT     = 2;\nexport const DATE       = 3;\nexport const REGEXP     = 4;\nexport const MAP        = 5;\nexport const SET        = 6;\nexport const ERROR      = 7;\nexport const BIGINT     = 8;\n// export const SYMBOL = 9;\n","import {\n  VOID, PRIMITIVE,\n  ARRAY, OBJECT,\n  DATE, REGEXP, MAP, SET,\n  ERROR, BIGINT\n} from './types.js';\n\nconst env = typeof self === 'object' ? self : globalThis;\n\nconst deserializer = ($, _) => {\n  const as = (out, index) => {\n    $.set(index, out);\n    return out;\n  };\n\n  const unpair = index => {\n    if ($.has(index))\n      return $.get(index);\n\n    const [type, value] = _[index];\n    switch (type) {\n      case PRIMITIVE:\n      case VOID:\n        return as(value, index);\n      case ARRAY: {\n        const arr = as([], index);\n        for (const index of value)\n          arr.push(unpair(index));\n        return arr;\n      }\n      case OBJECT: {\n        const object = as({}, index);\n        for (const [key, index] of value)\n          object[unpair(key)] = unpair(index);\n        return object;\n      }\n      case DATE:\n        return as(new Date(value), index);\n      case REGEXP: {\n        const {source, flags} = value;\n        return as(new RegExp(source, flags), index);\n      }\n      case MAP: {\n        const map = as(new Map, index);\n        for (const [key, index] of value)\n          map.set(unpair(key), unpair(index));\n        return map;\n      }\n      case SET: {\n        const set = as(new Set, index);\n        for (const index of value)\n          set.add(unpair(index));\n        return set;\n      }\n      case ERROR: {\n        const {name, message} = value;\n        return as(new env[name](message), index);\n      }\n      case BIGINT:\n        return as(BigInt(value), index);\n      case 'BigInt':\n        return as(Object(BigInt(value)), index);\n    }\n    return as(new env[type](value), index);\n  };\n\n  return unpair;\n};\n\n/**\n * @typedef {Array<string,any>} Record a type representation\n */\n\n/**\n * Returns a deserialized value from a serialized array of Records.\n * @param {Record[]} serialized a previously serialized value.\n * @returns {any}\n */\nexport const deserialize = serialized => deserializer(new Map, serialized)(0);\n","import {\n  VOID, PRIMITIVE,\n  ARRAY, OBJECT,\n  DATE, REGEXP, MAP, SET,\n  ERROR, BIGINT\n} from './types.js';\n\nconst EMPTY = '';\n\nconst {toString} = {};\nconst {keys} = Object;\n\nconst typeOf = value => {\n  const type = typeof value;\n  if (type !== 'object' || !value)\n    return [PRIMITIVE, type];\n\n  const asString = toString.call(value).slice(8, -1);\n  switch (asString) {\n    case 'Array':\n      return [ARRAY, EMPTY];\n    case 'Object':\n      return [OBJECT, EMPTY];\n    case 'Date':\n      return [DATE, EMPTY];\n    case 'RegExp':\n      return [REGEXP, EMPTY];\n    case 'Map':\n      return [MAP, EMPTY];\n    case 'Set':\n      return [SET, EMPTY];\n  }\n\n  if (asString.includes('Array'))\n    return [ARRAY, asString];\n\n  if (asString.includes('Error'))\n    return [ERROR, asString];\n\n  return [OBJECT, asString];\n};\n\nconst shouldSkip = ([TYPE, type]) => (\n  TYPE === PRIMITIVE &&\n  (type === 'function' || type === 'symbol')\n);\n\nconst serializer = (strict, json, $, _) => {\n\n  const as = (out, value) => {\n    const index = _.push(out) - 1;\n    $.set(value, index);\n    return index;\n  };\n\n  const pair = value => {\n    if ($.has(value))\n      return $.get(value);\n\n    let [TYPE, type] = typeOf(value);\n    switch (TYPE) {\n      case PRIMITIVE: {\n        let entry = value;\n        switch (type) {\n          case 'bigint':\n            TYPE = BIGINT;\n            entry = value.toString();\n            break;\n          case 'function':\n          case 'symbol':\n            if (strict)\n              throw new TypeError('unable to serialize ' + type);\n            entry = null;\n            break;\n          case 'undefined':\n            return as([VOID], value);\n        }\n        return as([TYPE, entry], value);\n      }\n      case ARRAY: {\n        if (type)\n          return as([type, [...value]], value);\n  \n        const arr = [];\n        const index = as([TYPE, arr], value);\n        for (const entry of value)\n          arr.push(pair(entry));\n        return index;\n      }\n      case OBJECT: {\n        if (type) {\n          switch (type) {\n            case 'BigInt':\n              return as([type, value.toString()], value);\n            case 'Boolean':\n            case 'Number':\n            case 'String':\n              return as([type, value.valueOf()], value);\n          }\n        }\n\n        if (json && ('toJSON' in value))\n          return pair(value.toJSON());\n\n        const entries = [];\n        const index = as([TYPE, entries], value);\n        for (const key of keys(value)) {\n          if (strict || !shouldSkip(typeOf(value[key])))\n            entries.push([pair(key), pair(value[key])]);\n        }\n        return index;\n      }\n      case DATE:\n        return as([TYPE, value.toISOString()], value);\n      case REGEXP: {\n        const {source, flags} = value;\n        return as([TYPE, {source, flags}], value);\n      }\n      case MAP: {\n        const entries = [];\n        const index = as([TYPE, entries], value);\n        for (const [key, entry] of value) {\n          if (strict || !(shouldSkip(typeOf(key)) || shouldSkip(typeOf(entry))))\n            entries.push([pair(key), pair(entry)]);\n        }\n        return index;\n      }\n      case SET: {\n        const entries = [];\n        const index = as([TYPE, entries], value);\n        for (const entry of value) {\n          if (strict || !shouldSkip(typeOf(entry)))\n            entries.push(pair(entry));\n        }\n        return index;\n      }\n    }\n\n    const {message} = value;\n    return as([TYPE, {name: type, message}], value);\n  };\n\n  return pair;\n};\n\n/**\n * @typedef {Array<string,any>} Record a type representation\n */\n\n/**\n * Returns an array of serialized Records.\n * @param {any} value a serializable value.\n * @param {{json?: boolean, lossy?: boolean}?} options an object with a `lossy` or `json` property that,\n *  if `true`, will not throw errors on incompatible types, and behave more\n *  like JSON stringify would behave. Symbol and Function will be discarded.\n * @returns {Record[]}\n */\n export const serialize = (value, {json, lossy} = {}) => {\n  const _ = [];\n  return serializer(!(json || lossy), !!json, new Map, _)(value), _;\n};\n","import {deserialize} from './deserialize.js';\nimport {serialize} from './serialize.js';\n\n/**\n * @typedef {Array<string,any>} Record a type representation\n */\n\n/**\n * Returns an array of serialized Records.\n * @param {any} any a serializable value.\n * @param {{transfer?: any[], json?: boolean, lossy?: boolean}?} options an object with\n * a transfer option (ignored when polyfilled) and/or non standard fields that\n * fallback to the polyfill if present.\n * @returns {Record[]}\n */\nexport default typeof structuredClone === \"function\" ?\n  /* c8 ignore start */\n  (any, options) => (\n    options && ('json' in options || 'lossy' in options) ?\n      deserialize(serialize(any, options)) : structuredClone(any)\n  ) :\n  (any, options) => deserialize(serialize(any, options));\n  /* c8 ignore stop */\n\nexport {deserialize, serialize};\n","import {asciiAlphanumeric} from 'micromark-util-character'\nimport {encode} from 'micromark-util-encode'\n/**\n * Make a value safe for injection as a URL.\n *\n * This encodes unsafe characters with percent-encoding and skips already\n * encoded sequences (see `normalizeUri`).\n * Further unsafe characters are encoded as character references (see\n * `micromark-util-encode`).\n *\n * A regex of allowed protocols can be given, in which case the URL is\n * sanitized.\n * For example, `/^(https?|ircs?|mailto|xmpp)$/i` can be used for `a[href]`, or\n * `/^https?$/i` for `img[src]` (this is what `github.com` allows).\n * If the URL includes an unknown protocol (one not matched by `protocol`, such\n * as a dangerous example, `javascript:`), the value is ignored.\n *\n * @param {string | null | undefined} url\n *   URI to sanitize.\n * @param {RegExp | null | undefined} [protocol]\n *   Allowed protocols.\n * @returns {string}\n *   Sanitized URI.\n */\nexport function sanitizeUri(url, protocol) {\n  const value = encode(normalizeUri(url || ''))\n  if (!protocol) {\n    return value\n  }\n  const colon = value.indexOf(':')\n  const questionMark = value.indexOf('?')\n  const numberSign = value.indexOf('#')\n  const slash = value.indexOf('/')\n  if (\n    // If there is no protocol, it’s relative.\n    colon < 0 ||\n    // If the first colon is after a `?`, `#`, or `/`, it’s not a protocol.\n    (slash > -1 && colon > slash) ||\n    (questionMark > -1 && colon > questionMark) ||\n    (numberSign > -1 && colon > numberSign) ||\n    // It is a protocol, it should be allowed.\n    protocol.test(value.slice(0, colon))\n  ) {\n    return value\n  }\n  return ''\n}\n\n/**\n * Normalize a URL.\n *\n * Encode unsafe characters with percent-encoding, skipping already encoded\n * sequences.\n *\n * @param {string} value\n *   URI to normalize.\n * @returns {string}\n *   Normalized URI.\n */\nexport function normalizeUri(value) {\n  /** @type {Array<string>} */\n  const result = []\n  let index = -1\n  let start = 0\n  let skip = 0\n  while (++index < value.length) {\n    const code = value.charCodeAt(index)\n    /** @type {string} */\n    let replace = ''\n\n    // A correct percent encoded value.\n    if (\n      code === 37 &&\n      asciiAlphanumeric(value.charCodeAt(index + 1)) &&\n      asciiAlphanumeric(value.charCodeAt(index + 2))\n    ) {\n      skip = 2\n    }\n    // ASCII.\n    else if (code < 128) {\n      if (!/[!#$&-;=?-Z_a-z~]/.test(String.fromCharCode(code))) {\n        replace = String.fromCharCode(code)\n      }\n    }\n    // Astral.\n    else if (code > 55_295 && code < 57_344) {\n      const next = value.charCodeAt(index + 1)\n\n      // A correct surrogate pair.\n      if (code < 56_320 && next > 56_319 && next < 57_344) {\n        replace = String.fromCharCode(code, next)\n        skip = 1\n      }\n      // Lone surrogate.\n      else {\n        replace = '\\uFFFD'\n      }\n    }\n    // Unicode.\n    else {\n      replace = String.fromCharCode(code)\n    }\n    if (replace) {\n      result.push(value.slice(start, index), encodeURIComponent(replace))\n      start = index + skip + 1\n      replace = ''\n    }\n    if (skip) {\n      index += skip\n      skip = 0\n    }\n  }\n  return result.join('') + value.slice(start)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').ElementContent} ElementContent\n *\n * @typedef {import('./state.js').State} State\n */\n\n/**\n * @callback FootnoteBackContentTemplate\n *   Generate content for the backreference dynamically.\n *\n *   For the following markdown:\n *\n *   ```markdown\n *   Alpha[^micromark], bravo[^micromark], and charlie[^remark].\n *\n *   [^remark]: things about remark\n *   [^micromark]: things about micromark\n *   ```\n *\n *   This function will be called with:\n *\n *   *  `0` and `0` for the backreference from `things about micromark` to\n *      `alpha`, as it is the first used definition, and the first call to it\n *   *  `0` and `1` for the backreference from `things about micromark` to\n *      `bravo`, as it is the first used definition, and the second call to it\n *   *  `1` and `0` for the backreference from `things about remark` to\n *      `charlie`, as it is the second used definition\n * @param {number} referenceIndex\n *   Index of the definition in the order that they are first referenced,\n *   0-indexed.\n * @param {number} rereferenceIndex\n *   Index of calls to the same definition, 0-indexed.\n * @returns {Array<ElementContent> | ElementContent | string}\n *   Content for the backreference when linking back from definitions to their\n *   reference.\n *\n * @callback FootnoteBackLabelTemplate\n *   Generate a back label dynamically.\n *\n *   For the following markdown:\n *\n *   ```markdown\n *   Alpha[^micromark], bravo[^micromark], and charlie[^remark].\n *\n *   [^remark]: things about remark\n *   [^micromark]: things about micromark\n *   ```\n *\n *   This function will be called with:\n *\n *   *  `0` and `0` for the backreference from `things about micromark` to\n *      `alpha`, as it is the first used definition, and the first call to it\n *   *  `0` and `1` for the backreference from `things about micromark` to\n *      `bravo`, as it is the first used definition, and the second call to it\n *   *  `1` and `0` for the backreference from `things about remark` to\n *      `charlie`, as it is the second used definition\n * @param {number} referenceIndex\n *   Index of the definition in the order that they are first referenced,\n *   0-indexed.\n * @param {number} rereferenceIndex\n *   Index of calls to the same definition, 0-indexed.\n * @returns {string}\n *   Back label to use when linking back from definitions to their reference.\n */\n\nimport structuredClone from '@ungap/structured-clone'\nimport {normalizeUri} from 'micromark-util-sanitize-uri'\n\n/**\n * Generate the default content that GitHub uses on backreferences.\n *\n * @param {number} _\n *   Index of the definition in the order that they are first referenced,\n *   0-indexed.\n * @param {number} rereferenceIndex\n *   Index of calls to the same definition, 0-indexed.\n * @returns {Array<ElementContent>}\n *   Content.\n */\nexport function defaultFootnoteBackContent(_, rereferenceIndex) {\n  /** @type {Array<ElementContent>} */\n  const result = [{type: 'text', value: '↩'}]\n\n  if (rereferenceIndex > 1) {\n    result.push({\n      type: 'element',\n      tagName: 'sup',\n      properties: {},\n      children: [{type: 'text', value: String(rereferenceIndex)}]\n    })\n  }\n\n  return result\n}\n\n/**\n * Generate the default label that GitHub uses on backreferences.\n *\n * @param {number} referenceIndex\n *   Index of the definition in the order that they are first referenced,\n *   0-indexed.\n * @param {number} rereferenceIndex\n *   Index of calls to the same definition, 0-indexed.\n * @returns {string}\n *   Label.\n */\nexport function defaultFootnoteBackLabel(referenceIndex, rereferenceIndex) {\n  return (\n    'Back to reference ' +\n    (referenceIndex + 1) +\n    (rereferenceIndex > 1 ? '-' + rereferenceIndex : '')\n  )\n}\n\n/**\n * Generate a hast footer for called footnote definitions.\n *\n * @param {State} state\n *   Info passed around.\n * @returns {Element | undefined}\n *   `section` element or `undefined`.\n */\n// eslint-disable-next-line complexity\nexport function footer(state) {\n  const clobberPrefix =\n    typeof state.options.clobberPrefix === 'string'\n      ? state.options.clobberPrefix\n      : 'user-content-'\n  const footnoteBackContent =\n    state.options.footnoteBackContent || defaultFootnoteBackContent\n  const footnoteBackLabel =\n    state.options.footnoteBackLabel || defaultFootnoteBackLabel\n  const footnoteLabel = state.options.footnoteLabel || 'Footnotes'\n  const footnoteLabelTagName = state.options.footnoteLabelTagName || 'h2'\n  const footnoteLabelProperties = state.options.footnoteLabelProperties || {\n    className: ['sr-only']\n  }\n  /** @type {Array<ElementContent>} */\n  const listItems = []\n  let referenceIndex = -1\n\n  while (++referenceIndex < state.footnoteOrder.length) {\n    const def = state.footnoteById.get(state.footnoteOrder[referenceIndex])\n\n    if (!def) {\n      continue\n    }\n\n    const content = state.all(def)\n    const id = String(def.identifier).toUpperCase()\n    const safeId = normalizeUri(id.toLowerCase())\n    let rereferenceIndex = 0\n    /** @type {Array<ElementContent>} */\n    const backReferences = []\n    const counts = state.footnoteCounts.get(id)\n\n    // eslint-disable-next-line no-unmodified-loop-condition\n    while (counts !== undefined && ++rereferenceIndex <= counts) {\n      if (backReferences.length > 0) {\n        backReferences.push({type: 'text', value: ' '})\n      }\n\n      let children =\n        typeof footnoteBackContent === 'string'\n          ? footnoteBackContent\n          : footnoteBackContent(referenceIndex, rereferenceIndex)\n\n      if (typeof children === 'string') {\n        children = {type: 'text', value: children}\n      }\n\n      backReferences.push({\n        type: 'element',\n        tagName: 'a',\n        properties: {\n          href:\n            '#' +\n            clobberPrefix +\n            'fnref-' +\n            safeId +\n            (rereferenceIndex > 1 ? '-' + rereferenceIndex : ''),\n          dataFootnoteBackref: '',\n          ariaLabel:\n            typeof footnoteBackLabel === 'string'\n              ? footnoteBackLabel\n              : footnoteBackLabel(referenceIndex, rereferenceIndex),\n          className: ['data-footnote-backref']\n        },\n        children: Array.isArray(children) ? children : [children]\n      })\n    }\n\n    const tail = content[content.length - 1]\n\n    if (tail && tail.type === 'element' && tail.tagName === 'p') {\n      const tailTail = tail.children[tail.children.length - 1]\n      if (tailTail && tailTail.type === 'text') {\n        tailTail.value += ' '\n      } else {\n        tail.children.push({type: 'text', value: ' '})\n      }\n\n      tail.children.push(...backReferences)\n    } else {\n      content.push(...backReferences)\n    }\n\n    /** @type {Element} */\n    const listItem = {\n      type: 'element',\n      tagName: 'li',\n      properties: {id: clobberPrefix + 'fn-' + safeId},\n      children: state.wrap(content, true)\n    }\n\n    state.patch(def, listItem)\n\n    listItems.push(listItem)\n  }\n\n  if (listItems.length === 0) {\n    return\n  }\n\n  return {\n    type: 'element',\n    tagName: 'section',\n    properties: {dataFootnotes: true, className: ['footnotes']},\n    children: [\n      {\n        type: 'element',\n        tagName: footnoteLabelTagName,\n        properties: {\n          ...structuredClone(footnoteLabelProperties),\n          id: 'footnote-label'\n        },\n        children: [{type: 'text', value: footnoteLabel}]\n      },\n      {type: 'text', value: '\\n'},\n      {\n        type: 'element',\n        tagName: 'ol',\n        properties: {},\n        children: state.wrap(listItems, true)\n      },\n      {type: 'text', value: '\\n'}\n    ]\n  }\n}\n","/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Parent} Parent\n */\n\n/**\n * @template Fn\n * @template Fallback\n * @typedef {Fn extends (value: any) => value is infer Thing ? Thing : Fallback} Predicate\n */\n\n/**\n * @callback Check\n *   Check that an arbitrary value is a node.\n * @param {unknown} this\n *   The given context.\n * @param {unknown} [node]\n *   Anything (typically a node).\n * @param {number | null | undefined} [index]\n *   The node’s position in its parent.\n * @param {Parent | null | undefined} [parent]\n *   The node’s parent.\n * @returns {boolean}\n *   Whether this is a node and passes a test.\n *\n * @typedef {Record<string, unknown> | Node} Props\n *   Object to check for equivalence.\n *\n *   Note: `Node` is included as it is common but is not indexable.\n *\n * @typedef {Array<Props | TestFunction | string> | Props | TestFunction | string | null | undefined} Test\n *   Check for an arbitrary node.\n *\n * @callback TestFunction\n *   Check if a node passes a test.\n * @param {unknown} this\n *   The given context.\n * @param {Node} node\n *   A node.\n * @param {number | undefined} [index]\n *   The node’s position in its parent.\n * @param {Parent | undefined} [parent]\n *   The node’s parent.\n * @returns {boolean | undefined | void}\n *   Whether this node passes the test.\n *\n *   Note: `void` is included until TS sees no return as `undefined`.\n */\n\n/**\n * Check if `node` is a `Node` and whether it passes the given test.\n *\n * @param {unknown} node\n *   Thing to check, typically `Node`.\n * @param {Test} test\n *   A check for a specific node.\n * @param {number | null | undefined} index\n *   The node’s position in its parent.\n * @param {Parent | null | undefined} parent\n *   The node’s parent.\n * @param {unknown} context\n *   Context object (`this`) to pass to `test` functions.\n * @returns {boolean}\n *   Whether `node` is a node and passes a test.\n */\nexport const is =\n  // Note: overloads in JSDoc can’t yet use different `@template`s.\n  /**\n   * @type {(\n   *   (<Condition extends string>(node: unknown, test: Condition, index?: number | null | undefined, parent?: Parent | null | undefined, context?: unknown) => node is Node & {type: Condition}) &\n   *   (<Condition extends Props>(node: unknown, test: Condition, index?: number | null | undefined, parent?: Parent | null | undefined, context?: unknown) => node is Node & Condition) &\n   *   (<Condition extends TestFunction>(node: unknown, test: Condition, index?: number | null | undefined, parent?: Parent | null | undefined, context?: unknown) => node is Node & Predicate<Condition, Node>) &\n   *   ((node?: null | undefined) => false) &\n   *   ((node: unknown, test?: null | undefined, index?: number | null | undefined, parent?: Parent | null | undefined, context?: unknown) => node is Node) &\n   *   ((node: unknown, test?: Test, index?: number | null | undefined, parent?: Parent | null | undefined, context?: unknown) => boolean)\n   * )}\n   */\n  (\n    /**\n     * @param {unknown} [node]\n     * @param {Test} [test]\n     * @param {number | null | undefined} [index]\n     * @param {Parent | null | undefined} [parent]\n     * @param {unknown} [context]\n     * @returns {boolean}\n     */\n    // eslint-disable-next-line max-params\n    function (node, test, index, parent, context) {\n      const check = convert(test)\n\n      if (\n        index !== undefined &&\n        index !== null &&\n        (typeof index !== 'number' ||\n          index < 0 ||\n          index === Number.POSITIVE_INFINITY)\n      ) {\n        throw new Error('Expected positive finite index')\n      }\n\n      if (\n        parent !== undefined &&\n        parent !== null &&\n        (!is(parent) || !parent.children)\n      ) {\n        throw new Error('Expected parent node')\n      }\n\n      if (\n        (parent === undefined || parent === null) !==\n        (index === undefined || index === null)\n      ) {\n        throw new Error('Expected both parent and index')\n      }\n\n      return looksLikeANode(node)\n        ? check.call(context, node, index, parent)\n        : false\n    }\n  )\n\n/**\n * Generate an assertion from a test.\n *\n * Useful if you’re going to test many nodes, for example when creating a\n * utility where something else passes a compatible test.\n *\n * The created function is a bit faster because it expects valid input only:\n * a `node`, `index`, and `parent`.\n *\n * @param {Test} test\n *   *   when nullish, checks if `node` is a `Node`.\n *   *   when `string`, works like passing `(node) => node.type === test`.\n *   *   when `function` checks if function passed the node is true.\n *   *   when `object`, checks that all keys in test are in node, and that they have (strictly) equal values.\n *   *   when `array`, checks if any one of the subtests pass.\n * @returns {Check}\n *   An assertion.\n */\nexport const convert =\n  // Note: overloads in JSDoc can’t yet use different `@template`s.\n  /**\n   * @type {(\n   *   (<Condition extends string>(test: Condition) => (node: unknown, index?: number | null | undefined, parent?: Parent | null | undefined, context?: unknown) => node is Node & {type: Condition}) &\n   *   (<Condition extends Props>(test: Condition) => (node: unknown, index?: number | null | undefined, parent?: Parent | null | undefined, context?: unknown) => node is Node & Condition) &\n   *   (<Condition extends TestFunction>(test: Condition) => (node: unknown, index?: number | null | undefined, parent?: Parent | null | undefined, context?: unknown) => node is Node & Predicate<Condition, Node>) &\n   *   ((test?: null | undefined) => (node?: unknown, index?: number | null | undefined, parent?: Parent | null | undefined, context?: unknown) => node is Node) &\n   *   ((test?: Test) => Check)\n   * )}\n   */\n  (\n    /**\n     * @param {Test} [test]\n     * @returns {Check}\n     */\n    function (test) {\n      if (test === null || test === undefined) {\n        return ok\n      }\n\n      if (typeof test === 'function') {\n        return castFactory(test)\n      }\n\n      if (typeof test === 'object') {\n        return Array.isArray(test) ? anyFactory(test) : propsFactory(test)\n      }\n\n      if (typeof test === 'string') {\n        return typeFactory(test)\n      }\n\n      throw new Error('Expected function, string, or object as test')\n    }\n  )\n\n/**\n * @param {Array<Props | TestFunction | string>} tests\n * @returns {Check}\n */\nfunction anyFactory(tests) {\n  /** @type {Array<Check>} */\n  const checks = []\n  let index = -1\n\n  while (++index < tests.length) {\n    checks[index] = convert(tests[index])\n  }\n\n  return castFactory(any)\n\n  /**\n   * @this {unknown}\n   * @type {TestFunction}\n   */\n  function any(...parameters) {\n    let index = -1\n\n    while (++index < checks.length) {\n      if (checks[index].apply(this, parameters)) return true\n    }\n\n    return false\n  }\n}\n\n/**\n * Turn an object into a test for a node with a certain fields.\n *\n * @param {Props} check\n * @returns {Check}\n */\nfunction propsFactory(check) {\n  const checkAsRecord = /** @type {Record<string, unknown>} */ (check)\n\n  return castFactory(all)\n\n  /**\n   * @param {Node} node\n   * @returns {boolean}\n   */\n  function all(node) {\n    const nodeAsRecord = /** @type {Record<string, unknown>} */ (\n      /** @type {unknown} */ (node)\n    )\n\n    /** @type {string} */\n    let key\n\n    for (key in check) {\n      if (nodeAsRecord[key] !== checkAsRecord[key]) return false\n    }\n\n    return true\n  }\n}\n\n/**\n * Turn a string into a test for a node with a certain type.\n *\n * @param {string} check\n * @returns {Check}\n */\nfunction typeFactory(check) {\n  return castFactory(type)\n\n  /**\n   * @param {Node} node\n   */\n  function type(node) {\n    return node && node.type === check\n  }\n}\n\n/**\n * Turn a custom test into a test for a node that passes that test.\n *\n * @param {TestFunction} testFunction\n * @returns {Check}\n */\nfunction castFactory(testFunction) {\n  return check\n\n  /**\n   * @this {unknown}\n   * @type {Check}\n   */\n  function check(value, index, parent) {\n    return Boolean(\n      looksLikeANode(value) &&\n        testFunction.call(\n          this,\n          value,\n          typeof index === 'number' ? index : undefined,\n          parent || undefined\n        )\n    )\n  }\n}\n\nfunction ok() {\n  return true\n}\n\n/**\n * @param {unknown} value\n * @returns {value is Node}\n */\nfunction looksLikeANode(value) {\n  return value !== null && typeof value === 'object' && 'type' in value\n}\n","/**\n * @typedef {import('unist').Node} UnistNode\n * @typedef {import('unist').Parent} UnistParent\n */\n\n/**\n * @typedef {Exclude<import('unist-util-is').Test, undefined> | undefined} Test\n *   Test from `unist-util-is`.\n *\n *   Note: we have remove and add `undefined`, because otherwise when generating\n *   automatic `.d.ts` files, TS tries to flatten paths from a local perspective,\n *   which doesn’t work when publishing on npm.\n */\n\n/**\n * @typedef {(\n *   Fn extends (value: any) => value is infer Thing\n *   ? Thing\n *   : Fallback\n * )} Predicate\n *   Get the value of a type guard `Fn`.\n * @template Fn\n *   Value; typically function that is a type guard (such as `(x): x is Y`).\n * @template Fallback\n *   Value to yield if `Fn` is not a type guard.\n */\n\n/**\n * @typedef {(\n *   Check extends null | undefined // No test.\n *   ? Value\n *   : Value extends {type: Check} // String (type) test.\n *   ? Value\n *   : Value extends Check // Partial test.\n *   ? Value\n *   : Check extends Function // Function test.\n *   ? Predicate<Check, Value> extends Value\n *     ? Predicate<Check, Value>\n *     : never\n *   : never // Some other test?\n * )} MatchesOne\n *   Check whether a node matches a primitive check in the type system.\n * @template Value\n *   Value; typically unist `Node`.\n * @template Check\n *   Value; typically `unist-util-is`-compatible test, but not arrays.\n */\n\n/**\n * @typedef {(\n *   Check extends Array<any>\n *   ? MatchesOne<Value, Check[keyof Check]>\n *   : MatchesOne<Value, Check>\n * )} Matches\n *   Check whether a node matches a check in the type system.\n * @template Value\n *   Value; typically unist `Node`.\n * @template Check\n *   Value; typically `unist-util-is`-compatible test.\n */\n\n/**\n * @typedef {0 | 1 | 2 | 3 | 4 | 5 | 6 | 7 | 8 | 9 | 10} Uint\n *   Number; capped reasonably.\n */\n\n/**\n * @typedef {I extends 0 ? 1 : I extends 1 ? 2 : I extends 2 ? 3 : I extends 3 ? 4 : I extends 4 ? 5 : I extends 5 ? 6 : I extends 6 ? 7 : I extends 7 ? 8 : I extends 8 ? 9 : 10} Increment\n *   Increment a number in the type system.\n * @template {Uint} [I=0]\n *   Index.\n */\n\n/**\n * @typedef {(\n *   Node extends UnistParent\n *   ? Node extends {children: Array<infer Children>}\n *     ? Child extends Children ? Node : never\n *     : never\n *   : never\n * )} InternalParent\n *   Collect nodes that can be parents of `Child`.\n * @template {UnistNode} Node\n *   All node types in a tree.\n * @template {UnistNode} Child\n *   Node to search for.\n */\n\n/**\n * @typedef {InternalParent<InclusiveDescendant<Tree>, Child>} Parent\n *   Collect nodes in `Tree` that can be parents of `Child`.\n * @template {UnistNode} Tree\n *   All node types in a tree.\n * @template {UnistNode} Child\n *   Node to search for.\n */\n\n/**\n * @typedef {(\n *   Depth extends Max\n *   ? never\n *   :\n *     | InternalParent<Node, Child>\n *     | InternalAncestor<Node, InternalParent<Node, Child>, Max, Increment<Depth>>\n * )} InternalAncestor\n *   Collect nodes in `Tree` that can be ancestors of `Child`.\n * @template {UnistNode} Node\n *   All node types in a tree.\n * @template {UnistNode} Child\n *   Node to search for.\n * @template {Uint} [Max=10]\n *   Max; searches up to this depth.\n * @template {Uint} [Depth=0]\n *   Current depth.\n */\n\n/**\n * @typedef {InternalAncestor<InclusiveDescendant<Tree>, Child>} Ancestor\n *   Collect nodes in `Tree` that can be ancestors of `Child`.\n * @template {UnistNode} Tree\n *   All node types in a tree.\n * @template {UnistNode} Child\n *   Node to search for.\n */\n\n/**\n * @typedef {(\n *   Tree extends UnistParent\n *     ? Depth extends Max\n *       ? Tree\n *       : Tree | InclusiveDescendant<Tree['children'][number], Max, Increment<Depth>>\n *     : Tree\n * )} InclusiveDescendant\n *   Collect all (inclusive) descendants of `Tree`.\n *\n *   > 👉 **Note**: for performance reasons, this seems to be the fastest way to\n *   > recurse without actually running into an infinite loop, which the\n *   > previous version did.\n *   >\n *   > Practically, a max of `2` is typically enough assuming a `Root` is\n *   > passed, but it doesn’t improve performance.\n *   > It gets higher with `List > ListItem > Table > TableRow > TableCell`.\n *   > Using up to `10` doesn’t hurt or help either.\n * @template {UnistNode} Tree\n *   Tree type.\n * @template {Uint} [Max=10]\n *   Max; searches up to this depth.\n * @template {Uint} [Depth=0]\n *   Current depth.\n */\n\n/**\n * @typedef {'skip' | boolean} Action\n *   Union of the action types.\n *\n * @typedef {number} Index\n *   Move to the sibling at `index` next (after node itself is completely\n *   traversed).\n *\n *   Useful if mutating the tree, such as removing the node the visitor is\n *   currently on, or any of its previous siblings.\n *   Results less than 0 or greater than or equal to `children.length` stop\n *   traversing the parent.\n *\n * @typedef {[(Action | null | undefined | void)?, (Index | null | undefined)?]} ActionTuple\n *   List with one or two values, the first an action, the second an index.\n *\n * @typedef {Action | ActionTuple | Index | null | undefined | void} VisitorResult\n *   Any value that can be returned from a visitor.\n */\n\n/**\n * @callback Visitor\n *   Handle a node (matching `test`, if given).\n *\n *   Visitors are free to transform `node`.\n *   They can also transform the parent of node (the last of `ancestors`).\n *\n *   Replacing `node` itself, if `SKIP` is not returned, still causes its\n *   descendants to be walked (which is a bug).\n *\n *   When adding or removing previous siblings of `node` (or next siblings, in\n *   case of reverse), the `Visitor` should return a new `Index` to specify the\n *   sibling to traverse after `node` is traversed.\n *   Adding or removing next siblings of `node` (or previous siblings, in case\n *   of reverse) is handled as expected without needing to return a new `Index`.\n *\n *   Removing the children property of an ancestor still results in them being\n *   traversed.\n * @param {Visited} node\n *   Found node.\n * @param {Array<VisitedParents>} ancestors\n *   Ancestors of `node`.\n * @returns {VisitorResult}\n *   What to do next.\n *\n *   An `Index` is treated as a tuple of `[CONTINUE, Index]`.\n *   An `Action` is treated as a tuple of `[Action]`.\n *\n *   Passing a tuple back only makes sense if the `Action` is `SKIP`.\n *   When the `Action` is `EXIT`, that action can be returned.\n *   When the `Action` is `CONTINUE`, `Index` can be returned.\n * @template {UnistNode} [Visited=UnistNode]\n *   Visited node type.\n * @template {UnistParent} [VisitedParents=UnistParent]\n *   Ancestor type.\n */\n\n/**\n * @typedef {Visitor<Matches<InclusiveDescendant<Tree>, Check>, Ancestor<Tree, Matches<InclusiveDescendant<Tree>, Check>>>} BuildVisitor\n *   Build a typed `Visitor` function from a tree and a test.\n *\n *   It will infer which values are passed as `node` and which as `parents`.\n * @template {UnistNode} [Tree=UnistNode]\n *   Tree type.\n * @template {Test} [Check=Test]\n *   Test type.\n */\n\nimport {convert} from 'unist-util-is'\nimport {color} from 'unist-util-visit-parents/do-not-use-color'\n\n/** @type {Readonly<ActionTuple>} */\nconst empty = []\n\n/**\n * Continue traversing as normal.\n */\nexport const CONTINUE = true\n\n/**\n * Stop traversing immediately.\n */\nexport const EXIT = false\n\n/**\n * Do not traverse this node’s children.\n */\nexport const SKIP = 'skip'\n\n/**\n * Visit nodes, with ancestral information.\n *\n * This algorithm performs *depth-first* *tree traversal* in *preorder*\n * (**NLR**) or if `reverse` is given, in *reverse preorder* (**NRL**).\n *\n * You can choose for which nodes `visitor` is called by passing a `test`.\n * For complex tests, you should test yourself in `visitor`, as it will be\n * faster and will have improved type information.\n *\n * Walking the tree is an intensive task.\n * Make use of the return values of the visitor when possible.\n * Instead of walking a tree multiple times, walk it once, use `unist-util-is`\n * to check if a node matches, and then perform different operations.\n *\n * You can change the tree.\n * See `Visitor` for more info.\n *\n * @overload\n * @param {Tree} tree\n * @param {Check} check\n * @param {BuildVisitor<Tree, Check>} visitor\n * @param {boolean | null | undefined} [reverse]\n * @returns {undefined}\n *\n * @overload\n * @param {Tree} tree\n * @param {BuildVisitor<Tree>} visitor\n * @param {boolean | null | undefined} [reverse]\n * @returns {undefined}\n *\n * @param {UnistNode} tree\n *   Tree to traverse.\n * @param {Visitor | Test} test\n *   `unist-util-is`-compatible test\n * @param {Visitor | boolean | null | undefined} [visitor]\n *   Handle each node.\n * @param {boolean | null | undefined} [reverse]\n *   Traverse in reverse preorder (NRL) instead of the default preorder (NLR).\n * @returns {undefined}\n *   Nothing.\n *\n * @template {UnistNode} Tree\n *   Node type.\n * @template {Test} Check\n *   `unist-util-is`-compatible test.\n */\nexport function visitParents(tree, test, visitor, reverse) {\n  /** @type {Test} */\n  let check\n\n  if (typeof test === 'function' && typeof visitor !== 'function') {\n    reverse = visitor\n    // @ts-expect-error no visitor given, so `visitor` is test.\n    visitor = test\n  } else {\n    // @ts-expect-error visitor given, so `test` isn’t a visitor.\n    check = test\n  }\n\n  const is = convert(check)\n  const step = reverse ? -1 : 1\n\n  factory(tree, undefined, [])()\n\n  /**\n   * @param {UnistNode} node\n   * @param {number | undefined} index\n   * @param {Array<UnistParent>} parents\n   */\n  function factory(node, index, parents) {\n    const value = /** @type {Record<string, unknown>} */ (\n      node && typeof node === 'object' ? node : {}\n    )\n\n    if (typeof value.type === 'string') {\n      const name =\n        // `hast`\n        typeof value.tagName === 'string'\n          ? value.tagName\n          : // `xast`\n          typeof value.name === 'string'\n          ? value.name\n          : undefined\n\n      Object.defineProperty(visit, 'name', {\n        value:\n          'node (' + color(node.type + (name ? '<' + name + '>' : '')) + ')'\n      })\n    }\n\n    return visit\n\n    function visit() {\n      /** @type {Readonly<ActionTuple>} */\n      let result = empty\n      /** @type {Readonly<ActionTuple>} */\n      let subresult\n      /** @type {number} */\n      let offset\n      /** @type {Array<UnistParent>} */\n      let grandparents\n\n      if (!test || is(node, index, parents[parents.length - 1] || undefined)) {\n        // @ts-expect-error: `visitor` is now a visitor.\n        result = toResult(visitor(node, parents))\n\n        if (result[0] === EXIT) {\n          return result\n        }\n      }\n\n      if ('children' in node && node.children) {\n        const nodeAsParent = /** @type {UnistParent} */ (node)\n\n        if (nodeAsParent.children && result[0] !== SKIP) {\n          offset = (reverse ? nodeAsParent.children.length : -1) + step\n          grandparents = parents.concat(nodeAsParent)\n\n          while (offset > -1 && offset < nodeAsParent.children.length) {\n            const child = nodeAsParent.children[offset]\n\n            subresult = factory(child, offset, grandparents)()\n\n            if (subresult[0] === EXIT) {\n              return subresult\n            }\n\n            offset =\n              typeof subresult[1] === 'number' ? subresult[1] : offset + step\n          }\n        }\n      }\n\n      return result\n    }\n  }\n}\n\n/**\n * Turn a return value into a clean result.\n *\n * @param {VisitorResult} value\n *   Valid return values from visitors.\n * @returns {Readonly<ActionTuple>}\n *   Clean result.\n */\nfunction toResult(value) {\n  if (Array.isArray(value)) {\n    return value\n  }\n\n  if (typeof value === 'number') {\n    return [CONTINUE, value]\n  }\n\n  return value === null || value === undefined ? empty : [value]\n}\n","/**\n * @typedef {import('unist').Node} UnistNode\n * @typedef {import('unist').Parent} UnistParent\n * @typedef {import('unist-util-visit-parents').VisitorResult} VisitorResult\n */\n\n/**\n * @typedef {Exclude<import('unist-util-is').Test, undefined> | undefined} Test\n *   Test from `unist-util-is`.\n *\n *   Note: we have remove and add `undefined`, because otherwise when generating\n *   automatic `.d.ts` files, TS tries to flatten paths from a local perspective,\n *   which doesn’t work when publishing on npm.\n */\n\n// To do: use types from `unist-util-visit-parents` when it’s released.\n\n/**\n * @typedef {(\n *   Fn extends (value: any) => value is infer Thing\n *   ? Thing\n *   : Fallback\n * )} Predicate\n *   Get the value of a type guard `Fn`.\n * @template Fn\n *   Value; typically function that is a type guard (such as `(x): x is Y`).\n * @template Fallback\n *   Value to yield if `Fn` is not a type guard.\n */\n\n/**\n * @typedef {(\n *   Check extends null | undefined // No test.\n *   ? Value\n *   : Value extends {type: Check} // String (type) test.\n *   ? Value\n *   : Value extends Check // Partial test.\n *   ? Value\n *   : Check extends Function // Function test.\n *   ? Predicate<Check, Value> extends Value\n *     ? Predicate<Check, Value>\n *     : never\n *   : never // Some other test?\n * )} MatchesOne\n *   Check whether a node matches a primitive check in the type system.\n * @template Value\n *   Value; typically unist `Node`.\n * @template Check\n *   Value; typically `unist-util-is`-compatible test, but not arrays.\n */\n\n/**\n * @typedef {(\n *   Check extends Array<any>\n *   ? MatchesOne<Value, Check[keyof Check]>\n *   : MatchesOne<Value, Check>\n * )} Matches\n *   Check whether a node matches a check in the type system.\n * @template Value\n *   Value; typically unist `Node`.\n * @template Check\n *   Value; typically `unist-util-is`-compatible test.\n */\n\n/**\n * @typedef {0 | 1 | 2 | 3 | 4 | 5 | 6 | 7 | 8 | 9 | 10} Uint\n *   Number; capped reasonably.\n */\n\n/**\n * @typedef {I extends 0 ? 1 : I extends 1 ? 2 : I extends 2 ? 3 : I extends 3 ? 4 : I extends 4 ? 5 : I extends 5 ? 6 : I extends 6 ? 7 : I extends 7 ? 8 : I extends 8 ? 9 : 10} Increment\n *   Increment a number in the type system.\n * @template {Uint} [I=0]\n *   Index.\n */\n\n/**\n * @typedef {(\n *   Node extends UnistParent\n *   ? Node extends {children: Array<infer Children>}\n *     ? Child extends Children ? Node : never\n *     : never\n *   : never\n * )} InternalParent\n *   Collect nodes that can be parents of `Child`.\n * @template {UnistNode} Node\n *   All node types in a tree.\n * @template {UnistNode} Child\n *   Node to search for.\n */\n\n/**\n * @typedef {InternalParent<InclusiveDescendant<Tree>, Child>} Parent\n *   Collect nodes in `Tree` that can be parents of `Child`.\n * @template {UnistNode} Tree\n *   All node types in a tree.\n * @template {UnistNode} Child\n *   Node to search for.\n */\n\n/**\n * @typedef {(\n *   Depth extends Max\n *   ? never\n *   :\n *     | InternalParent<Node, Child>\n *     | InternalAncestor<Node, InternalParent<Node, Child>, Max, Increment<Depth>>\n * )} InternalAncestor\n *   Collect nodes in `Tree` that can be ancestors of `Child`.\n * @template {UnistNode} Node\n *   All node types in a tree.\n * @template {UnistNode} Child\n *   Node to search for.\n * @template {Uint} [Max=10]\n *   Max; searches up to this depth.\n * @template {Uint} [Depth=0]\n *   Current depth.\n */\n\n/**\n * @typedef {(\n *   Tree extends UnistParent\n *     ? Depth extends Max\n *       ? Tree\n *       : Tree | InclusiveDescendant<Tree['children'][number], Max, Increment<Depth>>\n *     : Tree\n * )} InclusiveDescendant\n *   Collect all (inclusive) descendants of `Tree`.\n *\n *   > 👉 **Note**: for performance reasons, this seems to be the fastest way to\n *   > recurse without actually running into an infinite loop, which the\n *   > previous version did.\n *   >\n *   > Practically, a max of `2` is typically enough assuming a `Root` is\n *   > passed, but it doesn’t improve performance.\n *   > It gets higher with `List > ListItem > Table > TableRow > TableCell`.\n *   > Using up to `10` doesn’t hurt or help either.\n * @template {UnistNode} Tree\n *   Tree type.\n * @template {Uint} [Max=10]\n *   Max; searches up to this depth.\n * @template {Uint} [Depth=0]\n *   Current depth.\n */\n\n/**\n * @callback Visitor\n *   Handle a node (matching `test`, if given).\n *\n *   Visitors are free to transform `node`.\n *   They can also transform `parent`.\n *\n *   Replacing `node` itself, if `SKIP` is not returned, still causes its\n *   descendants to be walked (which is a bug).\n *\n *   When adding or removing previous siblings of `node` (or next siblings, in\n *   case of reverse), the `Visitor` should return a new `Index` to specify the\n *   sibling to traverse after `node` is traversed.\n *   Adding or removing next siblings of `node` (or previous siblings, in case\n *   of reverse) is handled as expected without needing to return a new `Index`.\n *\n *   Removing the children property of `parent` still results in them being\n *   traversed.\n * @param {Visited} node\n *   Found node.\n * @param {Visited extends UnistNode ? number | undefined : never} index\n *   Index of `node` in `parent`.\n * @param {Ancestor extends UnistParent ? Ancestor | undefined : never} parent\n *   Parent of `node`.\n * @returns {VisitorResult}\n *   What to do next.\n *\n *   An `Index` is treated as a tuple of `[CONTINUE, Index]`.\n *   An `Action` is treated as a tuple of `[Action]`.\n *\n *   Passing a tuple back only makes sense if the `Action` is `SKIP`.\n *   When the `Action` is `EXIT`, that action can be returned.\n *   When the `Action` is `CONTINUE`, `Index` can be returned.\n * @template {UnistNode} [Visited=UnistNode]\n *   Visited node type.\n * @template {UnistParent} [Ancestor=UnistParent]\n *   Ancestor type.\n */\n\n/**\n * @typedef {Visitor<Visited, Parent<Ancestor, Visited>>} BuildVisitorFromMatch\n *   Build a typed `Visitor` function from a node and all possible parents.\n *\n *   It will infer which values are passed as `node` and which as `parent`.\n * @template {UnistNode} Visited\n *   Node type.\n * @template {UnistParent} Ancestor\n *   Parent type.\n */\n\n/**\n * @typedef {(\n *   BuildVisitorFromMatch<\n *     Matches<Descendant, Check>,\n *     Extract<Descendant, UnistParent>\n *   >\n * )} BuildVisitorFromDescendants\n *   Build a typed `Visitor` function from a list of descendants and a test.\n *\n *   It will infer which values are passed as `node` and which as `parent`.\n * @template {UnistNode} Descendant\n *   Node type.\n * @template {Test} Check\n *   Test type.\n */\n\n/**\n * @typedef {(\n *   BuildVisitorFromDescendants<\n *     InclusiveDescendant<Tree>,\n *     Check\n *   >\n * )} BuildVisitor\n *   Build a typed `Visitor` function from a tree and a test.\n *\n *   It will infer which values are passed as `node` and which as `parent`.\n * @template {UnistNode} [Tree=UnistNode]\n *   Node type.\n * @template {Test} [Check=Test]\n *   Test type.\n */\n\nimport {visitParents} from 'unist-util-visit-parents'\n\nexport {CONTINUE, EXIT, SKIP} from 'unist-util-visit-parents'\n\n/**\n * Visit nodes.\n *\n * This algorithm performs *depth-first* *tree traversal* in *preorder*\n * (**NLR**) or if `reverse` is given, in *reverse preorder* (**NRL**).\n *\n * You can choose for which nodes `visitor` is called by passing a `test`.\n * For complex tests, you should test yourself in `visitor`, as it will be\n * faster and will have improved type information.\n *\n * Walking the tree is an intensive task.\n * Make use of the return values of the visitor when possible.\n * Instead of walking a tree multiple times, walk it once, use `unist-util-is`\n * to check if a node matches, and then perform different operations.\n *\n * You can change the tree.\n * See `Visitor` for more info.\n *\n * @overload\n * @param {Tree} tree\n * @param {Check} check\n * @param {BuildVisitor<Tree, Check>} visitor\n * @param {boolean | null | undefined} [reverse]\n * @returns {undefined}\n *\n * @overload\n * @param {Tree} tree\n * @param {BuildVisitor<Tree>} visitor\n * @param {boolean | null | undefined} [reverse]\n * @returns {undefined}\n *\n * @param {UnistNode} tree\n *   Tree to traverse.\n * @param {Visitor | Test} testOrVisitor\n *   `unist-util-is`-compatible test (optional, omit to pass a visitor).\n * @param {Visitor | boolean | null | undefined} [visitorOrReverse]\n *   Handle each node (when test is omitted, pass `reverse`).\n * @param {boolean | null | undefined} [maybeReverse=false]\n *   Traverse in reverse preorder (NRL) instead of the default preorder (NLR).\n * @returns {undefined}\n *   Nothing.\n *\n * @template {UnistNode} Tree\n *   Node type.\n * @template {Test} Check\n *   `unist-util-is`-compatible test.\n */\nexport function visit(tree, testOrVisitor, visitorOrReverse, maybeReverse) {\n  /** @type {boolean | null | undefined} */\n  let reverse\n  /** @type {Test} */\n  let test\n  /** @type {Visitor} */\n  let visitor\n\n  if (\n    typeof testOrVisitor === 'function' &&\n    typeof visitorOrReverse !== 'function'\n  ) {\n    test = undefined\n    visitor = testOrVisitor\n    reverse = visitorOrReverse\n  } else {\n    // @ts-expect-error: assume the overload with test was given.\n    test = testOrVisitor\n    // @ts-expect-error: assume the overload with test was given.\n    visitor = visitorOrReverse\n    reverse = maybeReverse\n  }\n\n  visitParents(tree, test, overload, reverse)\n\n  /**\n   * @param {UnistNode} node\n   * @param {Array<UnistParent>} parents\n   */\n  function overload(node, parents) {\n    const parent = parents[parents.length - 1]\n    const index = parent ? parent.children.indexOf(node) : undefined\n    return visitor(node, index, parent)\n  }\n}\n","/**\n * @typedef {import('hast').ElementContent} ElementContent\n *\n * @typedef {import('mdast').Nodes} Nodes\n * @typedef {import('mdast').Reference} Reference\n *\n * @typedef {import('./state.js').State} State\n */\n\n// Make VS Code show references to the above types.\n''\n\n/**\n * Return the content of a reference without definition as plain text.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Extract<Nodes, Reference>} node\n *   Reference node (image, link).\n * @returns {Array<ElementContent>}\n *   hast content.\n */\nexport function revert(state, node) {\n  const subtype = node.referenceType\n  let suffix = ']'\n\n  if (subtype === 'collapsed') {\n    suffix += '[]'\n  } else if (subtype === 'full') {\n    suffix += '[' + (node.label || node.identifier) + ']'\n  }\n\n  if (node.type === 'imageReference') {\n    return [{type: 'text', value: '![' + node.alt + suffix}]\n  }\n\n  const contents = state.all(node)\n  const head = contents[0]\n\n  if (head && head.type === 'text') {\n    head.value = '[' + head.value\n  } else {\n    contents.unshift({type: 'text', value: '['})\n  }\n\n  const tail = contents[contents.length - 1]\n\n  if (tail && tail.type === 'text') {\n    tail.value += suffix\n  } else {\n    contents.push({type: 'text', value: suffix})\n  }\n\n  return contents\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').ElementContent} ElementContent\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('mdast').ListItem} ListItem\n * @typedef {import('mdast').Parents} Parents\n * @typedef {import('../state.js').State} State\n */\n\n// Make VS Code show references to the above types.\n''\n\n/**\n * Turn an mdast `listItem` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {ListItem} node\n *   mdast node.\n * @param {Parents | undefined} parent\n *   Parent of `node`.\n * @returns {Element}\n *   hast node.\n */\nexport function listItem(state, node, parent) {\n  const results = state.all(node)\n  const loose = parent ? listLoose(parent) : listItemLoose(node)\n  /** @type {Properties} */\n  const properties = {}\n  /** @type {Array<ElementContent>} */\n  const children = []\n\n  if (typeof node.checked === 'boolean') {\n    const head = results[0]\n    /** @type {Element} */\n    let paragraph\n\n    if (head && head.type === 'element' && head.tagName === 'p') {\n      paragraph = head\n    } else {\n      paragraph = {type: 'element', tagName: 'p', properties: {}, children: []}\n      results.unshift(paragraph)\n    }\n\n    if (paragraph.children.length > 0) {\n      paragraph.children.unshift({type: 'text', value: ' '})\n    }\n\n    paragraph.children.unshift({\n      type: 'element',\n      tagName: 'input',\n      properties: {type: 'checkbox', checked: node.checked, disabled: true},\n      children: []\n    })\n\n    // According to github-markdown-css, this class hides bullet.\n    // See: <https://github.com/sindresorhus/github-markdown-css>.\n    properties.className = ['task-list-item']\n  }\n\n  let index = -1\n\n  while (++index < results.length) {\n    const child = results[index]\n\n    // Add eols before nodes, except if this is a loose, first paragraph.\n    if (\n      loose ||\n      index !== 0 ||\n      child.type !== 'element' ||\n      child.tagName !== 'p'\n    ) {\n      children.push({type: 'text', value: '\\n'})\n    }\n\n    if (child.type === 'element' && child.tagName === 'p' && !loose) {\n      children.push(...child.children)\n    } else {\n      children.push(child)\n    }\n  }\n\n  const tail = results[results.length - 1]\n\n  // Add a final eol.\n  if (tail && (loose || tail.type !== 'element' || tail.tagName !== 'p')) {\n    children.push({type: 'text', value: '\\n'})\n  }\n\n  /** @type {Element} */\n  const result = {type: 'element', tagName: 'li', properties, children}\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n\n/**\n * @param {Parents} node\n * @return {Boolean}\n */\nfunction listLoose(node) {\n  let loose = false\n  if (node.type === 'list') {\n    loose = node.spread || false\n    const children = node.children\n    let index = -1\n\n    while (!loose && ++index < children.length) {\n      loose = listItemLoose(children[index])\n    }\n  }\n\n  return loose\n}\n\n/**\n * @param {ListItem} node\n * @return {Boolean}\n */\nfunction listItemLoose(node) {\n  const spread = node.spread\n\n  return spread === null || spread === undefined\n    ? node.children.length > 1\n    : spread\n}\n","const tab = 9 /* `\\t` */\nconst space = 32 /* ` ` */\n\n/**\n * Remove initial and final spaces and tabs at the line breaks in `value`.\n * Does not trim initial and final spaces and tabs of the value itself.\n *\n * @param {string} value\n *   Value to trim.\n * @returns {string}\n *   Trimmed value.\n */\nexport function trimLines(value) {\n  const source = String(value)\n  const search = /\\r?\\n|\\r/g\n  let match = search.exec(source)\n  let last = 0\n  /** @type {Array<string>} */\n  const lines = []\n\n  while (match) {\n    lines.push(\n      trimLine(source.slice(last, match.index), last > 0, true),\n      match[0]\n    )\n\n    last = match.index + match[0].length\n    match = search.exec(source)\n  }\n\n  lines.push(trimLine(source.slice(last), last > 0, false))\n\n  return lines.join('')\n}\n\n/**\n * @param {string} value\n *   Line to trim.\n * @param {boolean} start\n *   Whether to trim the start of the line.\n * @param {boolean} end\n *   Whether to trim the end of the line.\n * @returns {string}\n *   Trimmed line.\n */\nfunction trimLine(value, start, end) {\n  let startIndex = 0\n  let endIndex = value.length\n\n  if (start) {\n    let code = value.codePointAt(startIndex)\n\n    while (code === tab || code === space) {\n      startIndex++\n      code = value.codePointAt(startIndex)\n    }\n  }\n\n  if (end) {\n    let code = value.codePointAt(endIndex - 1)\n\n    while (code === tab || code === space) {\n      endIndex--\n      code = value.codePointAt(endIndex - 1)\n    }\n  }\n\n  return endIndex > startIndex ? value.slice(startIndex, endIndex) : ''\n}\n","import {blockquote} from './blockquote.js'\nimport {hardBreak} from './break.js'\nimport {code} from './code.js'\nimport {strikethrough} from './delete.js'\nimport {emphasis} from './emphasis.js'\nimport {footnoteReference} from './footnote-reference.js'\nimport {heading} from './heading.js'\nimport {html} from './html.js'\nimport {imageReference} from './image-reference.js'\nimport {image} from './image.js'\nimport {inlineCode} from './inline-code.js'\nimport {linkReference} from './link-reference.js'\nimport {link} from './link.js'\nimport {listItem} from './list-item.js'\nimport {list} from './list.js'\nimport {paragraph} from './paragraph.js'\nimport {root} from './root.js'\nimport {strong} from './strong.js'\nimport {table} from './table.js'\nimport {tableRow} from './table-row.js'\nimport {tableCell} from './table-cell.js'\nimport {text} from './text.js'\nimport {thematicBreak} from './thematic-break.js'\n\n/**\n * Default handlers for nodes.\n *\n * @satisfies {import('../state.js').Handlers}\n */\nexport const handlers = {\n  blockquote,\n  break: hardBreak,\n  code,\n  delete: strikethrough,\n  emphasis,\n  footnoteReference,\n  heading,\n  html,\n  imageReference,\n  image,\n  inlineCode,\n  linkReference,\n  link,\n  listItem,\n  list,\n  paragraph,\n  // @ts-expect-error: root is different, but hard to type.\n  root,\n  strong,\n  table,\n  tableCell,\n  tableRow,\n  text,\n  thematicBreak,\n  toml: ignore,\n  yaml: ignore,\n  definition: ignore,\n  footnoteDefinition: ignore\n}\n\n// Return nothing for nodes that are ignored.\nfunction ignore() {\n  return undefined\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('mdast').Blockquote} Blockquote\n * @typedef {import('../state.js').State} State\n */\n\n// Make VS Code show references to the above types.\n''\n\n/**\n * Turn an mdast `blockquote` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Blockquote} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function blockquote(state, node) {\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: 'blockquote',\n    properties: {},\n    children: state.wrap(state.all(node), true)\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').Text} Text\n * @typedef {import('mdast').Break} Break\n * @typedef {import('../state.js').State} State\n */\n\n// Make VS Code show references to the above types.\n''\n\n/**\n * Turn an mdast `break` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Break} node\n *   mdast node.\n * @returns {Array<Element | Text>}\n *   hast element content.\n */\nexport function hardBreak(state, node) {\n  /** @type {Element} */\n  const result = {type: 'element', tagName: 'br', properties: {}, children: []}\n  state.patch(node, result)\n  return [state.applyData(node, result), {type: 'text', value: '\\n'}]\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('mdast').Code} Code\n * @typedef {import('../state.js').State} State\n */\n\n// Make VS Code show references to the above types.\n''\n\n/**\n * Turn an mdast `code` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Code} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function code(state, node) {\n  const value = node.value ? node.value + '\\n' : ''\n  /** @type {Properties} */\n  const properties = {}\n\n  if (node.lang) {\n    properties.className = ['language-' + node.lang]\n  }\n\n  // Create `<code>`.\n  /** @type {Element} */\n  let result = {\n    type: 'element',\n    tagName: 'code',\n    properties,\n    children: [{type: 'text', value}]\n  }\n\n  if (node.meta) {\n    result.data = {meta: node.meta}\n  }\n\n  state.patch(node, result)\n  result = state.applyData(node, result)\n\n  // Create `<pre>`.\n  result = {type: 'element', tagName: 'pre', properties: {}, children: [result]}\n  state.patch(node, result)\n  return result\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('mdast').Delete} Delete\n * @typedef {import('../state.js').State} State\n */\n\n// Make VS Code show references to the above types.\n''\n\n/**\n * Turn an mdast `delete` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Delete} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function strikethrough(state, node) {\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: 'del',\n    properties: {},\n    children: state.all(node)\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('mdast').Emphasis} Emphasis\n * @typedef {import('../state.js').State} State\n */\n\n// Make VS Code show references to the above types.\n''\n\n/**\n * Turn an mdast `emphasis` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Emphasis} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function emphasis(state, node) {\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: 'em',\n    properties: {},\n    children: state.all(node)\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('mdast').FootnoteReference} FootnoteReference\n * @typedef {import('../state.js').State} State\n */\n\nimport {normalizeUri} from 'micromark-util-sanitize-uri'\n\n/**\n * Turn an mdast `footnoteReference` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {FootnoteReference} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function footnoteReference(state, node) {\n  const clobberPrefix =\n    typeof state.options.clobberPrefix === 'string'\n      ? state.options.clobberPrefix\n      : 'user-content-'\n  const id = String(node.identifier).toUpperCase()\n  const safeId = normalizeUri(id.toLowerCase())\n  const index = state.footnoteOrder.indexOf(id)\n  /** @type {number} */\n  let counter\n\n  let reuseCounter = state.footnoteCounts.get(id)\n\n  if (reuseCounter === undefined) {\n    reuseCounter = 0\n    state.footnoteOrder.push(id)\n    counter = state.footnoteOrder.length\n  } else {\n    counter = index + 1\n  }\n\n  reuseCounter += 1\n  state.footnoteCounts.set(id, reuseCounter)\n\n  /** @type {Element} */\n  const link = {\n    type: 'element',\n    tagName: 'a',\n    properties: {\n      href: '#' + clobberPrefix + 'fn-' + safeId,\n      id:\n        clobberPrefix +\n        'fnref-' +\n        safeId +\n        (reuseCounter > 1 ? '-' + reuseCounter : ''),\n      dataFootnoteRef: true,\n      ariaDescribedBy: ['footnote-label']\n    },\n    children: [{type: 'text', value: String(counter)}]\n  }\n  state.patch(node, link)\n\n  /** @type {Element} */\n  const sup = {\n    type: 'element',\n    tagName: 'sup',\n    properties: {},\n    children: [link]\n  }\n  state.patch(node, sup)\n  return state.applyData(node, sup)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('mdast').Heading} Heading\n * @typedef {import('../state.js').State} State\n */\n\n// Make VS Code show references to the above types.\n''\n\n/**\n * Turn an mdast `heading` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Heading} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function heading(state, node) {\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: 'h' + node.depth,\n    properties: {},\n    children: state.all(node)\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('mdast').Html} Html\n * @typedef {import('../state.js').State} State\n * @typedef {import('../../index.js').Raw} Raw\n */\n\n// Make VS Code show references to the above types.\n''\n\n/**\n * Turn an mdast `html` node into hast (`raw` node in dangerous mode, otherwise\n * nothing).\n *\n * @param {State} state\n *   Info passed around.\n * @param {Html} node\n *   mdast node.\n * @returns {Element | Raw | undefined}\n *   hast node.\n */\nexport function html(state, node) {\n  if (state.options.allowDangerousHtml) {\n    /** @type {Raw} */\n    const result = {type: 'raw', value: node.value}\n    state.patch(node, result)\n    return state.applyData(node, result)\n  }\n\n  return undefined\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').ElementContent} ElementContent\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('mdast').ImageReference} ImageReference\n * @typedef {import('../state.js').State} State\n */\n\nimport {normalizeUri} from 'micromark-util-sanitize-uri'\nimport {revert} from '../revert.js'\n\n/**\n * Turn an mdast `imageReference` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {ImageReference} node\n *   mdast node.\n * @returns {Array<ElementContent> | ElementContent}\n *   hast node.\n */\nexport function imageReference(state, node) {\n  const id = String(node.identifier).toUpperCase()\n  const def = state.definitionById.get(id)\n\n  if (!def) {\n    return revert(state, node)\n  }\n\n  /** @type {Properties} */\n  const properties = {src: normalizeUri(def.url || ''), alt: node.alt}\n\n  if (def.title !== null && def.title !== undefined) {\n    properties.title = def.title\n  }\n\n  /** @type {Element} */\n  const result = {type: 'element', tagName: 'img', properties, children: []}\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('mdast').Image} Image\n * @typedef {import('../state.js').State} State\n */\n\nimport {normalizeUri} from 'micromark-util-sanitize-uri'\n\n/**\n * Turn an mdast `image` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Image} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function image(state, node) {\n  /** @type {Properties} */\n  const properties = {src: normalizeUri(node.url)}\n\n  if (node.alt !== null && node.alt !== undefined) {\n    properties.alt = node.alt\n  }\n\n  if (node.title !== null && node.title !== undefined) {\n    properties.title = node.title\n  }\n\n  /** @type {Element} */\n  const result = {type: 'element', tagName: 'img', properties, children: []}\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').Text} Text\n * @typedef {import('mdast').InlineCode} InlineCode\n * @typedef {import('../state.js').State} State\n */\n\n// Make VS Code show references to the above types.\n''\n\n/**\n * Turn an mdast `inlineCode` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {InlineCode} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function inlineCode(state, node) {\n  /** @type {Text} */\n  const text = {type: 'text', value: node.value.replace(/\\r?\\n|\\r/g, ' ')}\n  state.patch(node, text)\n\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: 'code',\n    properties: {},\n    children: [text]\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').ElementContent} ElementContent\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('mdast').LinkReference} LinkReference\n * @typedef {import('../state.js').State} State\n */\n\nimport {normalizeUri} from 'micromark-util-sanitize-uri'\nimport {revert} from '../revert.js'\n\n/**\n * Turn an mdast `linkReference` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {LinkReference} node\n *   mdast node.\n * @returns {Array<ElementContent> | ElementContent}\n *   hast node.\n */\nexport function linkReference(state, node) {\n  const id = String(node.identifier).toUpperCase()\n  const def = state.definitionById.get(id)\n\n  if (!def) {\n    return revert(state, node)\n  }\n\n  /** @type {Properties} */\n  const properties = {href: normalizeUri(def.url || '')}\n\n  if (def.title !== null && def.title !== undefined) {\n    properties.title = def.title\n  }\n\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: 'a',\n    properties,\n    children: state.all(node)\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('mdast').Link} Link\n * @typedef {import('../state.js').State} State\n */\n\nimport {normalizeUri} from 'micromark-util-sanitize-uri'\n\n/**\n * Turn an mdast `link` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Link} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function link(state, node) {\n  /** @type {Properties} */\n  const properties = {href: normalizeUri(node.url)}\n\n  if (node.title !== null && node.title !== undefined) {\n    properties.title = node.title\n  }\n\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: 'a',\n    properties,\n    children: state.all(node)\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('mdast').List} List\n * @typedef {import('../state.js').State} State\n */\n\n// Make VS Code show references to the above types.\n''\n\n/**\n * Turn an mdast `list` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {List} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function list(state, node) {\n  /** @type {Properties} */\n  const properties = {}\n  const results = state.all(node)\n  let index = -1\n\n  if (typeof node.start === 'number' && node.start !== 1) {\n    properties.start = node.start\n  }\n\n  // Like GitHub, add a class for custom styling.\n  while (++index < results.length) {\n    const child = results[index]\n\n    if (\n      child.type === 'element' &&\n      child.tagName === 'li' &&\n      child.properties &&\n      Array.isArray(child.properties.className) &&\n      child.properties.className.includes('task-list-item')\n    ) {\n      properties.className = ['contains-task-list']\n      break\n    }\n  }\n\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: node.ordered ? 'ol' : 'ul',\n    properties,\n    children: state.wrap(results, true)\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('mdast').Paragraph} Paragraph\n * @typedef {import('../state.js').State} State\n */\n\n// Make VS Code show references to the above types.\n''\n\n/**\n * Turn an mdast `paragraph` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Paragraph} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function paragraph(state, node) {\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: 'p',\n    properties: {},\n    children: state.all(node)\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Parents} HastParents\n * @typedef {import('hast').Root} HastRoot\n * @typedef {import('mdast').Root} MdastRoot\n * @typedef {import('../state.js').State} State\n */\n\n// Make VS Code show references to the above types.\n''\n\n/**\n * Turn an mdast `root` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {MdastRoot} node\n *   mdast node.\n * @returns {HastParents}\n *   hast node.\n */\nexport function root(state, node) {\n  /** @type {HastRoot} */\n  const result = {type: 'root', children: state.wrap(state.all(node))}\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('mdast').Strong} Strong\n * @typedef {import('../state.js').State} State\n */\n\n// Make VS Code show references to the above types.\n''\n\n/**\n * Turn an mdast `strong` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Strong} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function strong(state, node) {\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: 'strong',\n    properties: {},\n    children: state.all(node)\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('mdast').Table} Table\n * @typedef {import('../state.js').State} State\n */\n\nimport {pointEnd, pointStart} from 'unist-util-position'\n\n/**\n * Turn an mdast `table` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Table} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function table(state, node) {\n  const rows = state.all(node)\n  const firstRow = rows.shift()\n  /** @type {Array<Element>} */\n  const tableContent = []\n\n  if (firstRow) {\n    /** @type {Element} */\n    const head = {\n      type: 'element',\n      tagName: 'thead',\n      properties: {},\n      children: state.wrap([firstRow], true)\n    }\n    state.patch(node.children[0], head)\n    tableContent.push(head)\n  }\n\n  if (rows.length > 0) {\n    /** @type {Element} */\n    const body = {\n      type: 'element',\n      tagName: 'tbody',\n      properties: {},\n      children: state.wrap(rows, true)\n    }\n\n    const start = pointStart(node.children[1])\n    const end = pointEnd(node.children[node.children.length - 1])\n    if (start && end) body.position = {start, end}\n    tableContent.push(body)\n  }\n\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: 'table',\n    properties: {},\n    children: state.wrap(tableContent, true)\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('mdast').TableCell} TableCell\n * @typedef {import('../state.js').State} State\n */\n\n// Make VS Code show references to the above types.\n''\n\n/**\n * Turn an mdast `tableCell` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {TableCell} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function tableCell(state, node) {\n  // Note: this function is normally not called: see `table-row` for how rows\n  // and their cells are compiled.\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: 'td', // Assume body cell.\n    properties: {},\n    children: state.all(node)\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').ElementContent} ElementContent\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('mdast').Parents} Parents\n * @typedef {import('mdast').TableRow} TableRow\n * @typedef {import('../state.js').State} State\n */\n\n// Make VS Code show references to the above types.\n''\n\n/**\n * Turn an mdast `tableRow` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {TableRow} node\n *   mdast node.\n * @param {Parents | undefined} parent\n *   Parent of `node`.\n * @returns {Element}\n *   hast node.\n */\nexport function tableRow(state, node, parent) {\n  const siblings = parent ? parent.children : undefined\n  // Generate a body row when without parent.\n  const rowIndex = siblings ? siblings.indexOf(node) : 1\n  const tagName = rowIndex === 0 ? 'th' : 'td'\n  // To do: option to use `style`?\n  const align = parent && parent.type === 'table' ? parent.align : undefined\n  const length = align ? align.length : node.children.length\n  let cellIndex = -1\n  /** @type {Array<ElementContent>} */\n  const cells = []\n\n  while (++cellIndex < length) {\n    // Note: can also be undefined.\n    const cell = node.children[cellIndex]\n    /** @type {Properties} */\n    const properties = {}\n    const alignValue = align ? align[cellIndex] : undefined\n\n    if (alignValue) {\n      properties.align = alignValue\n    }\n\n    /** @type {Element} */\n    let result = {type: 'element', tagName, properties, children: []}\n\n    if (cell) {\n      result.children = state.all(cell)\n      state.patch(cell, result)\n      result = state.applyData(cell, result)\n    }\n\n    cells.push(result)\n  }\n\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: 'tr',\n    properties: {},\n    children: state.wrap(cells, true)\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} HastElement\n * @typedef {import('hast').Text} HastText\n * @typedef {import('mdast').Text} MdastText\n * @typedef {import('../state.js').State} State\n */\n\nimport {trimLines} from 'trim-lines'\n\n/**\n * Turn an mdast `text` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {MdastText} node\n *   mdast node.\n * @returns {HastElement | HastText}\n *   hast node.\n */\nexport function text(state, node) {\n  /** @type {HastText} */\n  const result = {type: 'text', value: trimLines(String(node.value))}\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('mdast').ThematicBreak} ThematicBreak\n * @typedef {import('../state.js').State} State\n */\n\n// Make VS Code show references to the above types.\n''\n\n/**\n * Turn an mdast `thematicBreak` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {ThematicBreak} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function thematicBreak(state, node) {\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: 'hr',\n    properties: {},\n    children: []\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} HastElement\n * @typedef {import('hast').ElementContent} HastElementContent\n * @typedef {import('hast').Nodes} HastNodes\n * @typedef {import('hast').Properties} HastProperties\n * @typedef {import('hast').RootContent} HastRootContent\n * @typedef {import('hast').Text} HastText\n *\n * @typedef {import('mdast').Definition} MdastDefinition\n * @typedef {import('mdast').FootnoteDefinition} MdastFootnoteDefinition\n * @typedef {import('mdast').Nodes} MdastNodes\n * @typedef {import('mdast').Parents} MdastParents\n *\n * @typedef {import('vfile').VFile} VFile\n *\n * @typedef {import('./footer.js').FootnoteBackContentTemplate} FootnoteBackContentTemplate\n * @typedef {import('./footer.js').FootnoteBackLabelTemplate} FootnoteBackLabelTemplate\n */\n\n/**\n * @callback Handler\n *   Handle a node.\n * @param {State} state\n *   Info passed around.\n * @param {any} node\n *   mdast node to handle.\n * @param {MdastParents | undefined} parent\n *   Parent of `node`.\n * @returns {Array<HastElementContent> | HastElementContent | undefined}\n *   hast node.\n *\n * @typedef {Partial<Record<MdastNodes['type'], Handler>>} Handlers\n *   Handle nodes.\n *\n * @typedef Options\n *   Configuration (optional).\n * @property {boolean | null | undefined} [allowDangerousHtml=false]\n *   Whether to persist raw HTML in markdown in the hast tree (default:\n *   `false`).\n * @property {string | null | undefined} [clobberPrefix='user-content-']\n *   Prefix to use before the `id` property on footnotes to prevent them from\n *   *clobbering* (default: `'user-content-'`).\n *\n *   Pass `''` for trusted markdown and when you are careful with\n *   polyfilling.\n *   You could pass a different prefix.\n *\n *   DOM clobbering is this:\n *\n *   ```html\n *   <p id=\"x\"></p>\n *   <script>alert(x) // `x` now refers to the `p#x` DOM element</script>\n *   ```\n *\n *   The above example shows that elements are made available by browsers, by\n *   their ID, on the `window` object.\n *   This is a security risk because you might be expecting some other variable\n *   at that place.\n *   It can also break polyfills.\n *   Using a prefix solves these problems.\n * @property {VFile | null | undefined} [file]\n *   Corresponding virtual file representing the input document (optional).\n * @property {FootnoteBackContentTemplate | string | null | undefined} [footnoteBackContent]\n *   Content of the backreference back to references (default: `defaultFootnoteBackContent`).\n *\n *   The default value is:\n *\n *   ```js\n *   function defaultFootnoteBackContent(_, rereferenceIndex) {\n *     const result = [{type: 'text', value: '↩'}]\n *\n *     if (rereferenceIndex > 1) {\n *       result.push({\n *         type: 'element',\n *         tagName: 'sup',\n *         properties: {},\n *         children: [{type: 'text', value: String(rereferenceIndex)}]\n *       })\n *     }\n *\n *     return result\n *   }\n *   ```\n *\n *   This content is used in the `a` element of each backreference (the `↩`\n *   links).\n * @property {FootnoteBackLabelTemplate | string | null | undefined} [footnoteBackLabel]\n *   Label to describe the backreference back to references (default:\n *   `defaultFootnoteBackLabel`).\n *\n *   The default value is:\n *\n *   ```js\n *   function defaultFootnoteBackLabel(referenceIndex, rereferenceIndex) {\n *    return (\n *      'Back to reference ' +\n *      (referenceIndex + 1) +\n *      (rereferenceIndex > 1 ? '-' + rereferenceIndex : '')\n *    )\n *   }\n *   ```\n *\n *   Change it when the markdown is not in English.\n *\n *   This label is used in the `ariaLabel` property on each backreference\n *   (the `↩` links).\n *   It affects users of assistive technology.\n * @property {string | null | undefined} [footnoteLabel='Footnotes']\n *   Textual label to use for the footnotes section (default: `'Footnotes'`).\n *\n *   Change it when the markdown is not in English.\n *\n *   This label is typically hidden visually (assuming a `sr-only` CSS class\n *   is defined that does that) and so affects screen readers only.\n *   If you do have such a class, but want to show this section to everyone,\n *   pass different properties with the `footnoteLabelProperties` option.\n * @property {HastProperties | null | undefined} [footnoteLabelProperties={className: ['sr-only']}]\n *   Properties to use on the footnote label (default: `{className:\n *   ['sr-only']}`).\n *\n *   Change it to show the label and add other properties.\n *\n *   This label is typically hidden visually (assuming an `sr-only` CSS class\n *   is defined that does that) and so affects screen readers only.\n *   If you do have such a class, but want to show this section to everyone,\n *   pass an empty string.\n *   You can also add different properties.\n *\n *   > 👉 **Note**: `id: 'footnote-label'` is always added, because footnote\n *   > calls use it with `aria-describedby` to provide an accessible label.\n * @property {string | null | undefined} [footnoteLabelTagName='h2']\n *   HTML tag name to use for the footnote label element (default: `'h2'`).\n *\n *   Change it to match your document structure.\n *\n *   This label is typically hidden visually (assuming a `sr-only` CSS class\n *   is defined that does that) and so affects screen readers only.\n *   If you do have such a class, but want to show this section to everyone,\n *   pass different properties with the `footnoteLabelProperties` option.\n * @property {Handlers | null | undefined} [handlers]\n *   Extra handlers for nodes (optional).\n * @property {Array<MdastNodes['type']> | null | undefined} [passThrough]\n *   List of custom mdast node types to pass through (keep) in hast (note that\n *   the node itself is passed, but eventual children are transformed)\n *   (optional).\n * @property {Handler | null | undefined} [unknownHandler]\n *   Handler for all unknown nodes (optional).\n *\n * @typedef State\n *   Info passed around.\n * @property {(node: MdastNodes) => Array<HastElementContent>} all\n *   Transform the children of an mdast parent to hast.\n * @property {<Type extends HastNodes>(from: MdastNodes, to: Type) => HastElement | Type} applyData\n *   Honor the `data` of `from`, and generate an element instead of `node`.\n * @property {Map<string, MdastDefinition>} definitionById\n *   Definitions by their identifier.\n * @property {Map<string, MdastFootnoteDefinition>} footnoteById\n *   Footnote definitions by their identifier.\n * @property {Map<string, number>} footnoteCounts\n *   Counts for how often the same footnote was called.\n * @property {Array<string>} footnoteOrder\n *   Identifiers of order when footnote calls first appear in tree order.\n * @property {Handlers} handlers\n *   Applied handlers.\n * @property {(node: MdastNodes, parent: MdastParents | undefined) => Array<HastElementContent> | HastElementContent | undefined} one\n *   Transform an mdast node to hast.\n * @property {Options} options\n *   Configuration.\n * @property {(from: MdastNodes, node: HastNodes) => undefined} patch\n *   Copy a node’s positional info.\n * @property {<Type extends HastRootContent>(nodes: Array<Type>, loose?: boolean | undefined) => Array<HastText | Type>} wrap\n *   Wrap `nodes` with line endings between each node, adds initial/final line endings when `loose`.\n */\n\nimport structuredClone from '@ungap/structured-clone'\nimport {visit} from 'unist-util-visit'\nimport {position} from 'unist-util-position'\nimport {handlers as defaultHandlers} from './handlers/index.js'\n\nconst own = {}.hasOwnProperty\n\n/** @type {Options} */\nconst emptyOptions = {}\n\n/**\n * Create `state` from an mdast tree.\n *\n * @param {MdastNodes} tree\n *   mdast node to transform.\n * @param {Options | null | undefined} [options]\n *   Configuration (optional).\n * @returns {State}\n *   `state` function.\n */\nexport function createState(tree, options) {\n  const settings = options || emptyOptions\n  /** @type {Map<string, MdastDefinition>} */\n  const definitionById = new Map()\n  /** @type {Map<string, MdastFootnoteDefinition>} */\n  const footnoteById = new Map()\n  /** @type {Map<string, number>} */\n  const footnoteCounts = new Map()\n  /** @type {Handlers} */\n  // @ts-expect-error: the root handler returns a root.\n  // Hard to type.\n  const handlers = {...defaultHandlers, ...settings.handlers}\n\n  /** @type {State} */\n  const state = {\n    all,\n    applyData,\n    definitionById,\n    footnoteById,\n    footnoteCounts,\n    footnoteOrder: [],\n    handlers,\n    one,\n    options: settings,\n    patch,\n    wrap\n  }\n\n  visit(tree, function (node) {\n    if (node.type === 'definition' || node.type === 'footnoteDefinition') {\n      const map = node.type === 'definition' ? definitionById : footnoteById\n      const id = String(node.identifier).toUpperCase()\n\n      // Mimick CM behavior of link definitions.\n      // See: <https://github.com/syntax-tree/mdast-util-definitions/blob/9032189/lib/index.js#L20-L21>.\n      if (!map.has(id)) {\n        // @ts-expect-error: node type matches map.\n        map.set(id, node)\n      }\n    }\n  })\n\n  return state\n\n  /**\n   * Transform an mdast node into a hast node.\n   *\n   * @param {MdastNodes} node\n   *   mdast node.\n   * @param {MdastParents | undefined} [parent]\n   *   Parent of `node`.\n   * @returns {Array<HastElementContent> | HastElementContent | undefined}\n   *   Resulting hast node.\n   */\n  function one(node, parent) {\n    const type = node.type\n    const handle = state.handlers[type]\n\n    if (own.call(state.handlers, type) && handle) {\n      return handle(state, node, parent)\n    }\n\n    if (state.options.passThrough && state.options.passThrough.includes(type)) {\n      if ('children' in node) {\n        const {children, ...shallow} = node\n        const result = structuredClone(shallow)\n        // @ts-expect-error: TS doesn’t understand…\n        result.children = state.all(node)\n        // @ts-expect-error: TS doesn’t understand…\n        return result\n      }\n\n      // @ts-expect-error: it’s custom.\n      return structuredClone(node)\n    }\n\n    const unknown = state.options.unknownHandler || defaultUnknownHandler\n\n    return unknown(state, node, parent)\n  }\n\n  /**\n   * Transform the children of an mdast node into hast nodes.\n   *\n   * @param {MdastNodes} parent\n   *   mdast node to compile\n   * @returns {Array<HastElementContent>}\n   *   Resulting hast nodes.\n   */\n  function all(parent) {\n    /** @type {Array<HastElementContent>} */\n    const values = []\n\n    if ('children' in parent) {\n      const nodes = parent.children\n      let index = -1\n      while (++index < nodes.length) {\n        const result = state.one(nodes[index], parent)\n\n        // To do: see if we van clean this? Can we merge texts?\n        if (result) {\n          if (index && nodes[index - 1].type === 'break') {\n            if (!Array.isArray(result) && result.type === 'text') {\n              result.value = trimMarkdownSpaceStart(result.value)\n            }\n\n            if (!Array.isArray(result) && result.type === 'element') {\n              const head = result.children[0]\n\n              if (head && head.type === 'text') {\n                head.value = trimMarkdownSpaceStart(head.value)\n              }\n            }\n          }\n\n          if (Array.isArray(result)) {\n            values.push(...result)\n          } else {\n            values.push(result)\n          }\n        }\n      }\n    }\n\n    return values\n  }\n}\n\n/**\n * Copy a node’s positional info.\n *\n * @param {MdastNodes} from\n *   mdast node to copy from.\n * @param {HastNodes} to\n *   hast node to copy into.\n * @returns {undefined}\n *   Nothing.\n */\nfunction patch(from, to) {\n  if (from.position) to.position = position(from)\n}\n\n/**\n * Honor the `data` of `from` and maybe generate an element instead of `to`.\n *\n * @template {HastNodes} Type\n *   Node type.\n * @param {MdastNodes} from\n *   mdast node to use data from.\n * @param {Type} to\n *   hast node to change.\n * @returns {HastElement | Type}\n *   Nothing.\n */\nfunction applyData(from, to) {\n  /** @type {HastElement | Type} */\n  let result = to\n\n  // Handle `data.hName`, `data.hProperties, `data.hChildren`.\n  if (from && from.data) {\n    const hName = from.data.hName\n    const hChildren = from.data.hChildren\n    const hProperties = from.data.hProperties\n\n    if (typeof hName === 'string') {\n      // Transforming the node resulted in an element with a different name\n      // than wanted:\n      if (result.type === 'element') {\n        result.tagName = hName\n      }\n      // Transforming the node resulted in a non-element, which happens for\n      // raw, text, and root nodes (unless custom handlers are passed).\n      // The intent of `hName` is to create an element, but likely also to keep\n      // the content around (otherwise: pass `hChildren`).\n      else {\n        /** @type {Array<HastElementContent>} */\n        // @ts-expect-error: assume no doctypes in `root`.\n        const children = 'children' in result ? result.children : [result]\n        result = {type: 'element', tagName: hName, properties: {}, children}\n      }\n    }\n\n    if (result.type === 'element' && hProperties) {\n      Object.assign(result.properties, structuredClone(hProperties))\n    }\n\n    if (\n      'children' in result &&\n      result.children &&\n      hChildren !== null &&\n      hChildren !== undefined\n    ) {\n      result.children = hChildren\n    }\n  }\n\n  return result\n}\n\n/**\n * Transform an unknown node.\n *\n * @param {State} state\n *   Info passed around.\n * @param {MdastNodes} node\n *   Unknown mdast node.\n * @returns {HastElement | HastText}\n *   Resulting hast node.\n */\nfunction defaultUnknownHandler(state, node) {\n  const data = node.data || {}\n  /** @type {HastElement | HastText} */\n  const result =\n    'value' in node &&\n    !(own.call(data, 'hProperties') || own.call(data, 'hChildren'))\n      ? {type: 'text', value: node.value}\n      : {\n          type: 'element',\n          tagName: 'div',\n          properties: {},\n          children: state.all(node)\n        }\n\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n\n/**\n * Wrap `nodes` with line endings between each node.\n *\n * @template {HastRootContent} Type\n *   Node type.\n * @param {Array<Type>} nodes\n *   List of nodes to wrap.\n * @param {boolean | undefined} [loose=false]\n *   Whether to add line endings at start and end (default: `false`).\n * @returns {Array<HastText | Type>}\n *   Wrapped nodes.\n */\nexport function wrap(nodes, loose) {\n  /** @type {Array<HastText | Type>} */\n  const result = []\n  let index = -1\n\n  if (loose) {\n    result.push({type: 'text', value: '\\n'})\n  }\n\n  while (++index < nodes.length) {\n    if (index) result.push({type: 'text', value: '\\n'})\n    result.push(nodes[index])\n  }\n\n  if (loose && nodes.length > 0) {\n    result.push({type: 'text', value: '\\n'})\n  }\n\n  return result\n}\n\n/**\n * Trim spaces and tabs at the start of `value`.\n *\n * @param {string} value\n *   Value to trim.\n * @returns {string}\n *   Result.\n */\nfunction trimMarkdownSpaceStart(value) {\n  let index = 0\n  let code = value.charCodeAt(index)\n\n  while (code === 9 || code === 32) {\n    index++\n    code = value.charCodeAt(index)\n  }\n\n  return value.slice(index)\n}\n","/**\n * @typedef {import('hast').Nodes} HastNodes\n * @typedef {import('mdast').Nodes} MdastNodes\n * @typedef {import('./state.js').Options} Options\n */\n\nimport {ok as assert} from 'devlop'\nimport {footer} from './footer.js'\nimport {createState} from './state.js'\n\n/**\n * Transform mdast to hast.\n *\n * ##### Notes\n *\n * ###### HTML\n *\n * Raw HTML is available in mdast as `html` nodes and can be embedded in hast\n * as semistandard `raw` nodes.\n * Most utilities ignore `raw` nodes but two notable ones don’t:\n *\n * *   `hast-util-to-html` also has an option `allowDangerousHtml` which will\n *     output the raw HTML.\n *     This is typically discouraged as noted by the option name but is useful\n *     if you completely trust authors\n * *   `hast-util-raw` can handle the raw embedded HTML strings by parsing them\n *     into standard hast nodes (`element`, `text`, etc).\n *     This is a heavy task as it needs a full HTML parser, but it is the only\n *     way to support untrusted content\n *\n * ###### Footnotes\n *\n * Many options supported here relate to footnotes.\n * Footnotes are not specified by CommonMark, which we follow by default.\n * They are supported by GitHub, so footnotes can be enabled in markdown with\n * `mdast-util-gfm`.\n *\n * The options `footnoteBackLabel` and `footnoteLabel` define natural language\n * that explains footnotes, which is hidden for sighted users but shown to\n * assistive technology.\n * When your page is not in English, you must define translated values.\n *\n * Back references use ARIA attributes, but the section label itself uses a\n * heading that is hidden with an `sr-only` class.\n * To show it to sighted users, define different attributes in\n * `footnoteLabelProperties`.\n *\n * ###### Clobbering\n *\n * Footnotes introduces a problem, as it links footnote calls to footnote\n * definitions on the page through `id` attributes generated from user content,\n * which results in DOM clobbering.\n *\n * DOM clobbering is this:\n *\n * ```html\n * <p id=x></p>\n * <script>alert(x) // `x` now refers to the DOM `p#x` element</script>\n * ```\n *\n * Elements by their ID are made available by browsers on the `window` object,\n * which is a security risk.\n * Using a prefix solves this problem.\n *\n * More information on how to handle clobbering and the prefix is explained in\n * Example: headings (DOM clobbering) in `rehype-sanitize`.\n *\n * ###### Unknown nodes\n *\n * Unknown nodes are nodes with a type that isn’t in `handlers` or `passThrough`.\n * The default behavior for unknown nodes is:\n *\n * *   when the node has a `value` (and doesn’t have `data.hName`,\n *     `data.hProperties`, or `data.hChildren`, see later), create a hast `text`\n *     node\n * *   otherwise, create a `<div>` element (which could be changed with\n *     `data.hName`), with its children mapped from mdast to hast as well\n *\n * This behavior can be changed by passing an `unknownHandler`.\n *\n * @param {MdastNodes} tree\n *   mdast tree.\n * @param {Options | null | undefined} [options]\n *   Configuration (optional).\n * @returns {HastNodes}\n *   hast tree.\n */\nexport function toHast(tree, options) {\n  const state = createState(tree, options)\n  const node = state.one(tree, undefined)\n  const foot = footer(state)\n  /** @type {HastNodes} */\n  const result = Array.isArray(node)\n    ? {type: 'root', children: node}\n    : node || {type: 'root', children: []}\n\n  if (foot) {\n    // If there’s a footer, there were definitions, meaning block\n    // content.\n    // So `result` is a parent node.\n    assert('children' in result)\n    result.children.push({type: 'text', value: '\\n'}, foot)\n  }\n\n  return result\n}\n","// Include `data` fields in mdast and `raw` nodes in hast.\n/// <reference types=\"mdast-util-to-hast\" />\n\n/**\n * @typedef {import('hast').Root} HastRoot\n * @typedef {import('mdast').Root} MdastRoot\n * @typedef {import('mdast-util-to-hast').Options} ToHastOptions\n * @typedef {import('unified').Processor} Processor\n * @typedef {import('vfile').VFile} VFile\n */\n\n/**\n * @typedef {Omit<ToHastOptions, 'file'>} Options\n *\n * @callback TransformBridge\n *   Bridge-mode.\n *\n *   Runs the destination with the new hast tree.\n *   Discards result.\n * @param {MdastRoot} tree\n *   Tree.\n * @param {VFile} file\n *   File.\n * @returns {Promise<undefined>}\n *   Nothing.\n *\n * @callback TransformMutate\n *  Mutate-mode.\n *\n *  Further transformers run on the hast tree.\n * @param {MdastRoot} tree\n *   Tree.\n * @param {VFile} file\n *   File.\n * @returns {HastRoot}\n *   Tree (hast).\n */\n\nimport {toHast} from 'mdast-util-to-hast'\n\n/**\n * Turn markdown into HTML.\n *\n * ##### Notes\n *\n * ###### Signature\n *\n * *   if a processor is given, runs the (rehype) plugins used on it with a\n *     hast tree, then discards the result (*bridge mode*)\n * *   otherwise, returns a hast tree, the plugins used after `remarkRehype`\n *     are rehype plugins (*mutate mode*)\n *\n * > 👉 **Note**: It’s highly unlikely that you want to pass a `processor`.\n *\n * ###### HTML\n *\n * Raw HTML is available in mdast as `html` nodes and can be embedded in hast\n * as semistandard `raw` nodes.\n * Most plugins ignore `raw` nodes but two notable ones don’t:\n *\n * *   `rehype-stringify` also has an option `allowDangerousHtml` which will\n *     output the raw HTML.\n *     This is typically discouraged as noted by the option name but is useful if\n *     you completely trust authors\n * *   `rehype-raw` can handle the raw embedded HTML strings by parsing them\n *     into standard hast nodes (`element`, `text`, etc).\n *     This is a heavy task as it needs a full HTML parser, but it is the only way\n *     to support untrusted content\n *\n * ###### Footnotes\n *\n * Many options supported here relate to footnotes.\n * Footnotes are not specified by CommonMark, which we follow by default.\n * They are supported by GitHub, so footnotes can be enabled in markdown with\n * `remark-gfm`.\n *\n * The options `footnoteBackLabel` and `footnoteLabel` define natural language\n * that explains footnotes, which is hidden for sighted users but shown to\n * assistive technology.\n * When your page is not in English, you must define translated values.\n *\n * Back references use ARIA attributes, but the section label itself uses a\n * heading that is hidden with an `sr-only` class.\n * To show it to sighted users, define different attributes in\n * `footnoteLabelProperties`.\n *\n * ###### Clobbering\n *\n * Footnotes introduces a problem, as it links footnote calls to footnote\n * definitions on the page through `id` attributes generated from user content,\n * which results in DOM clobbering.\n *\n * DOM clobbering is this:\n *\n * ```html\n * <p id=x></p>\n * <script>alert(x) // `x` now refers to the DOM `p#x` element</script>\n * ```\n *\n * Elements by their ID are made available by browsers on the `window` object,\n * which is a security risk.\n * Using a prefix solves this problem.\n *\n * More information on how to handle clobbering and the prefix is explained in\n * *Example: headings (DOM clobbering)* in `rehype-sanitize`.\n *\n * ###### Unknown nodes\n *\n * Unknown nodes are nodes with a type that isn’t in `handlers` or `passThrough`.\n * The default behavior for unknown nodes is:\n *\n * *   when the node has a `value` (and doesn’t have `data.hName`,\n *     `data.hProperties`, or `data.hChildren`, see later), create a hast `text`\n *     node\n * *   otherwise, create a `<div>` element (which could be changed with\n *     `data.hName`), with its children mapped from mdast to hast as well\n *\n * This behavior can be changed by passing an `unknownHandler`.\n *\n * @overload\n * @param {Processor} processor\n * @param {Readonly<Options> | null | undefined} [options]\n * @returns {TransformBridge}\n *\n * @overload\n * @param {Readonly<Options> | null | undefined} [options]\n * @returns {TransformMutate}\n *\n * @param {Readonly<Options> | Processor | null | undefined} [destination]\n *   Processor or configuration (optional).\n * @param {Readonly<Options> | null | undefined} [options]\n *   When a processor was given, configuration (optional).\n * @returns {TransformBridge | TransformMutate}\n *   Transform.\n */\nexport default function remarkRehype(destination, options) {\n  if (destination && 'run' in destination) {\n    /**\n     * @type {TransformBridge}\n     */\n    return async function (tree, file) {\n      // Cast because root in -> root out.\n      const hastTree = /** @type {HastRoot} */ (\n        toHast(tree, {file, ...options})\n      )\n      await destination.run(hastTree, file)\n    }\n  }\n\n  /**\n   * @type {TransformMutate}\n   */\n  return function (tree, file) {\n    // Cast because root in -> root out.\n    return /** @type {HastRoot} */ (\n      toHast(tree, {file, ...(options || destination)})\n    )\n  }\n}\n","/**\n * Throw a given error.\n *\n * @param {Error|null|undefined} [error]\n *   Maybe error.\n * @returns {asserts error is null|undefined}\n */\nexport function bail(error) {\n  if (error) {\n    throw error\n  }\n}\n","export default function isPlainObject(value) {\n\tif (typeof value !== 'object' || value === null) {\n\t\treturn false;\n\t}\n\n\tconst prototype = Object.getPrototypeOf(value);\n\treturn (prototype === null || prototype === Object.prototype || Object.getPrototypeOf(prototype) === null) && !(Symbol.toStringTag in value) && !(Symbol.iterator in value);\n}\n","// To do: remove `void`s\n// To do: remove `null` from output of our APIs, allow it as user APIs.\n\n/**\n * @typedef {(error?: Error | null | undefined, ...output: Array<any>) => void} Callback\n *   Callback.\n *\n * @typedef {(...input: Array<any>) => any} Middleware\n *   Ware.\n *\n * @typedef Pipeline\n *   Pipeline.\n * @property {Run} run\n *   Run the pipeline.\n * @property {Use} use\n *   Add middleware.\n *\n * @typedef {(...input: Array<any>) => void} Run\n *   Call all middleware.\n *\n *   Calls `done` on completion with either an error or the output of the\n *   last middleware.\n *\n *   > 👉 **Note**: as the length of input defines whether async functions get a\n *   > `next` function,\n *   > it’s recommended to keep `input` at one value normally.\n\n *\n * @typedef {(fn: Middleware) => Pipeline} Use\n *   Add middleware.\n */\n\n/**\n * Create new middleware.\n *\n * @returns {Pipeline}\n *   Pipeline.\n */\nexport function trough() {\n  /** @type {Array<Middleware>} */\n  const fns = []\n  /** @type {Pipeline} */\n  const pipeline = {run, use}\n\n  return pipeline\n\n  /** @type {Run} */\n  function run(...values) {\n    let middlewareIndex = -1\n    /** @type {Callback} */\n    const callback = values.pop()\n\n    if (typeof callback !== 'function') {\n      throw new TypeError('Expected function as last argument, not ' + callback)\n    }\n\n    next(null, ...values)\n\n    /**\n     * Run the next `fn`, or we’re done.\n     *\n     * @param {Error | null | undefined} error\n     * @param {Array<any>} output\n     */\n    function next(error, ...output) {\n      const fn = fns[++middlewareIndex]\n      let index = -1\n\n      if (error) {\n        callback(error)\n        return\n      }\n\n      // Copy non-nullish input into values.\n      while (++index < values.length) {\n        if (output[index] === null || output[index] === undefined) {\n          output[index] = values[index]\n        }\n      }\n\n      // Save the newly created `output` for the next call.\n      values = output\n\n      // Next or done.\n      if (fn) {\n        wrap(fn, next)(...output)\n      } else {\n        callback(null, ...output)\n      }\n    }\n  }\n\n  /** @type {Use} */\n  function use(middelware) {\n    if (typeof middelware !== 'function') {\n      throw new TypeError(\n        'Expected `middelware` to be a function, not ' + middelware\n      )\n    }\n\n    fns.push(middelware)\n    return pipeline\n  }\n}\n\n/**\n * Wrap `middleware` into a uniform interface.\n *\n * You can pass all input to the resulting function.\n * `callback` is then called with the output of `middleware`.\n *\n * If `middleware` accepts more arguments than the later given in input,\n * an extra `done` function is passed to it after that input,\n * which must be called by `middleware`.\n *\n * The first value in `input` is the main input value.\n * All other input values are the rest input values.\n * The values given to `callback` are the input values,\n * merged with every non-nullish output value.\n *\n * * if `middleware` throws an error,\n *   returns a promise that is rejected,\n *   or calls the given `done` function with an error,\n *   `callback` is called with that error\n * * if `middleware` returns a value or returns a promise that is resolved,\n *   that value is the main output value\n * * if `middleware` calls `done`,\n *   all non-nullish values except for the first one (the error) overwrite the\n *   output values\n *\n * @param {Middleware} middleware\n *   Function to wrap.\n * @param {Callback} callback\n *   Callback called with the output of `middleware`.\n * @returns {Run}\n *   Wrapped middleware.\n */\nexport function wrap(middleware, callback) {\n  /** @type {boolean} */\n  let called\n\n  return wrapped\n\n  /**\n   * Call `middleware`.\n   * @this {any}\n   * @param {Array<any>} parameters\n   * @returns {void}\n   */\n  function wrapped(...parameters) {\n    const fnExpectsCallback = middleware.length > parameters.length\n    /** @type {any} */\n    let result\n\n    if (fnExpectsCallback) {\n      parameters.push(done)\n    }\n\n    try {\n      result = middleware.apply(this, parameters)\n    } catch (error) {\n      const exception = /** @type {Error} */ (error)\n\n      // Well, this is quite the pickle.\n      // `middleware` received a callback and called it synchronously, but that\n      // threw an error.\n      // The only thing left to do is to throw the thing instead.\n      if (fnExpectsCallback && called) {\n        throw exception\n      }\n\n      return done(exception)\n    }\n\n    if (!fnExpectsCallback) {\n      if (result && result.then && typeof result.then === 'function') {\n        result.then(then, done)\n      } else if (result instanceof Error) {\n        done(result)\n      } else {\n        then(result)\n      }\n    }\n  }\n\n  /**\n   * Call `callback`, only once.\n   *\n   * @type {Callback}\n   */\n  function done(error, ...output) {\n    if (!called) {\n      called = true\n      callback(error, ...output)\n    }\n  }\n\n  /**\n   * Call `done` with one value.\n   *\n   * @param {any} [value]\n   */\n  function then(value) {\n    done(null, value)\n  }\n}\n","// A derivative work based on:\n// <https://github.com/browserify/path-browserify>.\n// Which is licensed:\n//\n// MIT License\n//\n// Copyright (c) 2013 James Halliday\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy of\n// this software and associated documentation files (the \"Software\"), to deal in\n// the Software without restriction, including without limitation the rights to\n// use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of\n// the Software, and to permit persons to whom the Software is furnished to do so,\n// subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in all\n// copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS\n// FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR\n// COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER\n// IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN\n// CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n// A derivative work based on:\n//\n// Parts of that are extracted from Node’s internal `path` module:\n// <https://github.com/nodejs/node/blob/master/lib/path.js>.\n// Which is licensed:\n//\n// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\nexport const path = {basename, dirname, extname, join, sep: '/'}\n\n/* eslint-disable max-depth, complexity */\n\n/**\n * Get the basename from a path.\n *\n * @param {string} path\n *   File path.\n * @param {string | null | undefined} [ext]\n *   Extension to strip.\n * @returns {string}\n *   Stem or basename.\n */\nfunction basename(path, ext) {\n  if (ext !== undefined && typeof ext !== 'string') {\n    throw new TypeError('\"ext\" argument must be a string')\n  }\n\n  assertPath(path)\n  let start = 0\n  let end = -1\n  let index = path.length\n  /** @type {boolean | undefined} */\n  let seenNonSlash\n\n  if (ext === undefined || ext.length === 0 || ext.length > path.length) {\n    while (index--) {\n      if (path.codePointAt(index) === 47 /* `/` */) {\n        // If we reached a path separator that was not part of a set of path\n        // separators at the end of the string, stop now.\n        if (seenNonSlash) {\n          start = index + 1\n          break\n        }\n      } else if (end < 0) {\n        // We saw the first non-path separator, mark this as the end of our\n        // path component.\n        seenNonSlash = true\n        end = index + 1\n      }\n    }\n\n    return end < 0 ? '' : path.slice(start, end)\n  }\n\n  if (ext === path) {\n    return ''\n  }\n\n  let firstNonSlashEnd = -1\n  let extIndex = ext.length - 1\n\n  while (index--) {\n    if (path.codePointAt(index) === 47 /* `/` */) {\n      // If we reached a path separator that was not part of a set of path\n      // separators at the end of the string, stop now.\n      if (seenNonSlash) {\n        start = index + 1\n        break\n      }\n    } else {\n      if (firstNonSlashEnd < 0) {\n        // We saw the first non-path separator, remember this index in case\n        // we need it if the extension ends up not matching.\n        seenNonSlash = true\n        firstNonSlashEnd = index + 1\n      }\n\n      if (extIndex > -1) {\n        // Try to match the explicit extension.\n        if (path.codePointAt(index) === ext.codePointAt(extIndex--)) {\n          if (extIndex < 0) {\n            // We matched the extension, so mark this as the end of our path\n            // component\n            end = index\n          }\n        } else {\n          // Extension does not match, so our result is the entire path\n          // component\n          extIndex = -1\n          end = firstNonSlashEnd\n        }\n      }\n    }\n  }\n\n  if (start === end) {\n    end = firstNonSlashEnd\n  } else if (end < 0) {\n    end = path.length\n  }\n\n  return path.slice(start, end)\n}\n\n/**\n * Get the dirname from a path.\n *\n * @param {string} path\n *   File path.\n * @returns {string}\n *   File path.\n */\nfunction dirname(path) {\n  assertPath(path)\n\n  if (path.length === 0) {\n    return '.'\n  }\n\n  let end = -1\n  let index = path.length\n  /** @type {boolean | undefined} */\n  let unmatchedSlash\n\n  // Prefix `--` is important to not run on `0`.\n  while (--index) {\n    if (path.codePointAt(index) === 47 /* `/` */) {\n      if (unmatchedSlash) {\n        end = index\n        break\n      }\n    } else if (!unmatchedSlash) {\n      // We saw the first non-path separator\n      unmatchedSlash = true\n    }\n  }\n\n  return end < 0\n    ? path.codePointAt(0) === 47 /* `/` */\n      ? '/'\n      : '.'\n    : end === 1 && path.codePointAt(0) === 47 /* `/` */\n    ? '//'\n    : path.slice(0, end)\n}\n\n/**\n * Get an extname from a path.\n *\n * @param {string} path\n *   File path.\n * @returns {string}\n *   Extname.\n */\nfunction extname(path) {\n  assertPath(path)\n\n  let index = path.length\n\n  let end = -1\n  let startPart = 0\n  let startDot = -1\n  // Track the state of characters (if any) we see before our first dot and\n  // after any path separator we find.\n  let preDotState = 0\n  /** @type {boolean | undefined} */\n  let unmatchedSlash\n\n  while (index--) {\n    const code = path.codePointAt(index)\n\n    if (code === 47 /* `/` */) {\n      // If we reached a path separator that was not part of a set of path\n      // separators at the end of the string, stop now.\n      if (unmatchedSlash) {\n        startPart = index + 1\n        break\n      }\n\n      continue\n    }\n\n    if (end < 0) {\n      // We saw the first non-path separator, mark this as the end of our\n      // extension.\n      unmatchedSlash = true\n      end = index + 1\n    }\n\n    if (code === 46 /* `.` */) {\n      // If this is our first dot, mark it as the start of our extension.\n      if (startDot < 0) {\n        startDot = index\n      } else if (preDotState !== 1) {\n        preDotState = 1\n      }\n    } else if (startDot > -1) {\n      // We saw a non-dot and non-path separator before our dot, so we should\n      // have a good chance at having a non-empty extension.\n      preDotState = -1\n    }\n  }\n\n  if (\n    startDot < 0 ||\n    end < 0 ||\n    // We saw a non-dot character immediately before the dot.\n    preDotState === 0 ||\n    // The (right-most) trimmed path component is exactly `..`.\n    (preDotState === 1 && startDot === end - 1 && startDot === startPart + 1)\n  ) {\n    return ''\n  }\n\n  return path.slice(startDot, end)\n}\n\n/**\n * Join segments from a path.\n *\n * @param {Array<string>} segments\n *   Path segments.\n * @returns {string}\n *   File path.\n */\nfunction join(...segments) {\n  let index = -1\n  /** @type {string | undefined} */\n  let joined\n\n  while (++index < segments.length) {\n    assertPath(segments[index])\n\n    if (segments[index]) {\n      joined =\n        joined === undefined ? segments[index] : joined + '/' + segments[index]\n    }\n  }\n\n  return joined === undefined ? '.' : normalize(joined)\n}\n\n/**\n * Normalize a basic file path.\n *\n * @param {string} path\n *   File path.\n * @returns {string}\n *   File path.\n */\n// Note: `normalize` is not exposed as `path.normalize`, so some code is\n// manually removed from it.\nfunction normalize(path) {\n  assertPath(path)\n\n  const absolute = path.codePointAt(0) === 47 /* `/` */\n\n  // Normalize the path according to POSIX rules.\n  let value = normalizeString(path, !absolute)\n\n  if (value.length === 0 && !absolute) {\n    value = '.'\n  }\n\n  if (value.length > 0 && path.codePointAt(path.length - 1) === 47 /* / */) {\n    value += '/'\n  }\n\n  return absolute ? '/' + value : value\n}\n\n/**\n * Resolve `.` and `..` elements in a path with directory names.\n *\n * @param {string} path\n *   File path.\n * @param {boolean} allowAboveRoot\n *   Whether `..` can move above root.\n * @returns {string}\n *   File path.\n */\nfunction normalizeString(path, allowAboveRoot) {\n  let result = ''\n  let lastSegmentLength = 0\n  let lastSlash = -1\n  let dots = 0\n  let index = -1\n  /** @type {number | undefined} */\n  let code\n  /** @type {number} */\n  let lastSlashIndex\n\n  while (++index <= path.length) {\n    if (index < path.length) {\n      code = path.codePointAt(index)\n    } else if (code === 47 /* `/` */) {\n      break\n    } else {\n      code = 47 /* `/` */\n    }\n\n    if (code === 47 /* `/` */) {\n      if (lastSlash === index - 1 || dots === 1) {\n        // Empty.\n      } else if (lastSlash !== index - 1 && dots === 2) {\n        if (\n          result.length < 2 ||\n          lastSegmentLength !== 2 ||\n          result.codePointAt(result.length - 1) !== 46 /* `.` */ ||\n          result.codePointAt(result.length - 2) !== 46 /* `.` */\n        ) {\n          if (result.length > 2) {\n            lastSlashIndex = result.lastIndexOf('/')\n\n            if (lastSlashIndex !== result.length - 1) {\n              if (lastSlashIndex < 0) {\n                result = ''\n                lastSegmentLength = 0\n              } else {\n                result = result.slice(0, lastSlashIndex)\n                lastSegmentLength = result.length - 1 - result.lastIndexOf('/')\n              }\n\n              lastSlash = index\n              dots = 0\n              continue\n            }\n          } else if (result.length > 0) {\n            result = ''\n            lastSegmentLength = 0\n            lastSlash = index\n            dots = 0\n            continue\n          }\n        }\n\n        if (allowAboveRoot) {\n          result = result.length > 0 ? result + '/..' : '..'\n          lastSegmentLength = 2\n        }\n      } else {\n        if (result.length > 0) {\n          result += '/' + path.slice(lastSlash + 1, index)\n        } else {\n          result = path.slice(lastSlash + 1, index)\n        }\n\n        lastSegmentLength = index - lastSlash - 1\n      }\n\n      lastSlash = index\n      dots = 0\n    } else if (code === 46 /* `.` */ && dots > -1) {\n      dots++\n    } else {\n      dots = -1\n    }\n  }\n\n  return result\n}\n\n/**\n * Make sure `path` is a string.\n *\n * @param {string} path\n *   File path.\n * @returns {asserts path is string}\n *   Nothing.\n */\nfunction assertPath(path) {\n  if (typeof path !== 'string') {\n    throw new TypeError(\n      'Path must be a string. Received ' + JSON.stringify(path)\n    )\n  }\n}\n\n/* eslint-enable max-depth, complexity */\n","// Somewhat based on:\n// <https://github.com/defunctzombie/node-process/blob/master/browser.js>.\n// But I don’t think one tiny line of code can be copyrighted. 😅\nexport const proc = {cwd}\n\nfunction cwd() {\n  return '/'\n}\n","/**\n * Checks if a value has the shape of a WHATWG URL object.\n *\n * Using a symbol or instanceof would not be able to recognize URL objects\n * coming from other implementations (e.g. in Electron), so instead we are\n * checking some well known properties for a lack of a better test.\n *\n * We use `href` and `protocol` as they are the only properties that are\n * easy to retrieve and calculate due to the lazy nature of the getters.\n *\n * We check for auth attribute to distinguish legacy url instance with\n * WHATWG URL instance.\n *\n * @param {unknown} fileUrlOrPath\n *   File path or URL.\n * @returns {fileUrlOrPath is URL}\n *   Whether it’s a URL.\n */\n// From: <https://github.com/nodejs/node/blob/6a3403c/lib/internal/url.js#L720>\nexport function isUrl(fileUrlOrPath) {\n  return Boolean(\n    fileUrlOrPath !== null &&\n      typeof fileUrlOrPath === 'object' &&\n      'href' in fileUrlOrPath &&\n      fileUrlOrPath.href &&\n      'protocol' in fileUrlOrPath &&\n      fileUrlOrPath.protocol &&\n      // @ts-expect-error: indexing is fine.\n      fileUrlOrPath.auth === undefined\n  )\n}\n","import {isUrl} from './minurl.shared.js'\n\nexport {isUrl} from './minurl.shared.js'\n\n// See: <https://github.com/nodejs/node/blob/6a3403c/lib/internal/url.js>\n\n/**\n * @param {URL | string} path\n *   File URL.\n * @returns {string}\n *   File URL.\n */\nexport function urlToPath(path) {\n  if (typeof path === 'string') {\n    path = new URL(path)\n  } else if (!isUrl(path)) {\n    /** @type {NodeJS.ErrnoException} */\n    const error = new TypeError(\n      'The \"path\" argument must be of type string or an instance of URL. Received `' +\n        path +\n        '`'\n    )\n    error.code = 'ERR_INVALID_ARG_TYPE'\n    throw error\n  }\n\n  if (path.protocol !== 'file:') {\n    /** @type {NodeJS.ErrnoException} */\n    const error = new TypeError('The URL must be of scheme file')\n    error.code = 'ERR_INVALID_URL_SCHEME'\n    throw error\n  }\n\n  return getPathFromURLPosix(path)\n}\n\n/**\n * Get a path from a POSIX URL.\n *\n * @param {URL} url\n *   URL.\n * @returns {string}\n *   File path.\n */\nfunction getPathFromURLPosix(url) {\n  if (url.hostname !== '') {\n    /** @type {NodeJS.ErrnoException} */\n    const error = new TypeError(\n      'File URL host must be \"localhost\" or empty on darwin'\n    )\n    error.code = 'ERR_INVALID_FILE_URL_HOST'\n    throw error\n  }\n\n  const pathname = url.pathname\n  let index = -1\n\n  while (++index < pathname.length) {\n    if (\n      pathname.codePointAt(index) === 37 /* `%` */ &&\n      pathname.codePointAt(index + 1) === 50 /* `2` */\n    ) {\n      const third = pathname.codePointAt(index + 2)\n      if (third === 70 /* `F` */ || third === 102 /* `f` */) {\n        /** @type {NodeJS.ErrnoException} */\n        const error = new TypeError(\n          'File URL path must not include encoded / characters'\n        )\n        error.code = 'ERR_INVALID_FILE_URL_PATH'\n        throw error\n      }\n    }\n  }\n\n  return decodeURIComponent(pathname)\n}\n","/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Point} Point\n * @typedef {import('unist').Position} Position\n * @typedef {import('vfile-message').Options} MessageOptions\n * @typedef {import('../index.js').Data} Data\n * @typedef {import('../index.js').Value} Value\n */\n\n/**\n * @typedef {object & {type: string, position?: Position | undefined}} NodeLike\n *\n * @typedef {Options | URL | VFile | Value} Compatible\n *   Things that can be passed to the constructor.\n *\n * @typedef VFileCoreOptions\n *   Set multiple values.\n * @property {string | null | undefined} [basename]\n *   Set `basename` (name).\n * @property {string | null | undefined} [cwd]\n *   Set `cwd` (working directory).\n * @property {Data | null | undefined} [data]\n *   Set `data` (associated info).\n * @property {string | null | undefined} [dirname]\n *   Set `dirname` (path w/o basename).\n * @property {string | null | undefined} [extname]\n *   Set `extname` (extension with dot).\n * @property {Array<string> | null | undefined} [history]\n *   Set `history` (paths the file moved between).\n * @property {URL | string | null | undefined} [path]\n *   Set `path` (current path).\n * @property {string | null | undefined} [stem]\n *   Set `stem` (name without extension).\n * @property {Value | null | undefined} [value]\n *   Set `value` (the contents of the file).\n *\n * @typedef Map\n *   Raw source map.\n *\n *   See:\n *   <https://github.com/mozilla/source-map/blob/60adcb0/source-map.d.ts#L15-L23>.\n * @property {number} version\n *   Which version of the source map spec this map is following.\n * @property {Array<string>} sources\n *   An array of URLs to the original source files.\n * @property {Array<string>} names\n *   An array of identifiers which can be referenced by individual mappings.\n * @property {string | undefined} [sourceRoot]\n *   The URL root from which all sources are relative.\n * @property {Array<string> | undefined} [sourcesContent]\n *   An array of contents of the original source files.\n * @property {string} mappings\n *   A string of base64 VLQs which contain the actual mappings.\n * @property {string} file\n *   The generated file this source map is associated with.\n *\n * @typedef {Record<string, unknown> & VFileCoreOptions} Options\n *   Configuration.\n *\n *   A bunch of keys that will be shallow copied over to the new file.\n *\n * @typedef {Record<string, unknown>} ReporterSettings\n *   Configuration for reporters.\n */\n\n/**\n * @template [Settings=ReporterSettings]\n *   Options type.\n * @callback Reporter\n *   Type for a reporter.\n * @param {Array<VFile>} files\n *   Files to report.\n * @param {Settings} options\n *   Configuration.\n * @returns {string}\n *   Report.\n */\n\nimport {VFileMessage} from 'vfile-message'\nimport {path} from 'vfile/do-not-use-conditional-minpath'\nimport {proc} from 'vfile/do-not-use-conditional-minproc'\nimport {urlToPath, isUrl} from 'vfile/do-not-use-conditional-minurl'\n\n/**\n * Order of setting (least specific to most), we need this because otherwise\n * `{stem: 'a', path: '~/b.js'}` would throw, as a path is needed before a\n * stem can be set.\n */\nconst order = /** @type {const} */ ([\n  'history',\n  'path',\n  'basename',\n  'stem',\n  'extname',\n  'dirname'\n])\n\nexport class VFile {\n  /**\n   * Create a new virtual file.\n   *\n   * `options` is treated as:\n   *\n   * *   `string` or `Uint8Array` — `{value: options}`\n   * *   `URL` — `{path: options}`\n   * *   `VFile` — shallow copies its data over to the new file\n   * *   `object` — all fields are shallow copied over to the new file\n   *\n   * Path related fields are set in the following order (least specific to\n   * most specific): `history`, `path`, `basename`, `stem`, `extname`,\n   * `dirname`.\n   *\n   * You cannot set `dirname` or `extname` without setting either `history`,\n   * `path`, `basename`, or `stem` too.\n   *\n   * @param {Compatible | null | undefined} [value]\n   *   File value.\n   * @returns\n   *   New instance.\n   */\n  constructor(value) {\n    /** @type {Options | VFile} */\n    let options\n\n    if (!value) {\n      options = {}\n    } else if (isUrl(value)) {\n      options = {path: value}\n    } else if (typeof value === 'string' || isUint8Array(value)) {\n      options = {value}\n    } else {\n      options = value\n    }\n\n    /* eslint-disable no-unused-expressions */\n\n    /**\n     * Base of `path` (default: `process.cwd()` or `'/'` in browsers).\n     *\n     * @type {string}\n     */\n    this.cwd = proc.cwd()\n\n    /**\n     * Place to store custom info (default: `{}`).\n     *\n     * It’s OK to store custom data directly on the file but moving it to\n     * `data` is recommended.\n     *\n     * @type {Data}\n     */\n    this.data = {}\n\n    /**\n     * List of file paths the file moved between.\n     *\n     * The first is the original path and the last is the current path.\n     *\n     * @type {Array<string>}\n     */\n    this.history = []\n\n    /**\n     * List of messages associated with the file.\n     *\n     * @type {Array<VFileMessage>}\n     */\n    this.messages = []\n\n    /**\n     * Raw value.\n     *\n     * @type {Value}\n     */\n    this.value\n\n    // The below are non-standard, they are “well-known”.\n    // As in, used in several tools.\n    /**\n     * Source map.\n     *\n     * This type is equivalent to the `RawSourceMap` type from the `source-map`\n     * module.\n     *\n     * @type {Map | null | undefined}\n     */\n    this.map\n\n    /**\n     * Custom, non-string, compiled, representation.\n     *\n     * This is used by unified to store non-string results.\n     * One example is when turning markdown into React nodes.\n     *\n     * @type {unknown}\n     */\n    this.result\n\n    /**\n     * Whether a file was saved to disk.\n     *\n     * This is used by vfile reporters.\n     *\n     * @type {boolean}\n     */\n    this.stored\n    /* eslint-enable no-unused-expressions */\n\n    // Set path related properties in the correct order.\n    let index = -1\n\n    while (++index < order.length) {\n      const prop = order[index]\n\n      // Note: we specifically use `in` instead of `hasOwnProperty` to accept\n      // `vfile`s too.\n      if (\n        prop in options &&\n        options[prop] !== undefined &&\n        options[prop] !== null\n      ) {\n        // @ts-expect-error: TS doesn’t understand basic reality.\n        this[prop] = prop === 'history' ? [...options[prop]] : options[prop]\n      }\n    }\n\n    /** @type {string} */\n    let prop\n\n    // Set non-path related properties.\n    for (prop in options) {\n      // @ts-expect-error: fine to set other things.\n      if (!order.includes(prop)) {\n        // @ts-expect-error: fine to set other things.\n        this[prop] = options[prop]\n      }\n    }\n  }\n\n  /**\n   * Get the basename (including extname) (example: `'index.min.js'`).\n   *\n   * @returns {string | undefined}\n   *   Basename.\n   */\n  get basename() {\n    return typeof this.path === 'string' ? path.basename(this.path) : undefined\n  }\n\n  /**\n   * Set basename (including extname) (`'index.min.js'`).\n   *\n   * Cannot contain path separators (`'/'` on unix, macOS, and browsers, `'\\'`\n   * on windows).\n   * Cannot be nullified (use `file.path = file.dirname` instead).\n   *\n   * @param {string} basename\n   *   Basename.\n   * @returns {undefined}\n   *   Nothing.\n   */\n  set basename(basename) {\n    assertNonEmpty(basename, 'basename')\n    assertPart(basename, 'basename')\n    this.path = path.join(this.dirname || '', basename)\n  }\n\n  /**\n   * Get the parent path (example: `'~'`).\n   *\n   * @returns {string | undefined}\n   *   Dirname.\n   */\n  get dirname() {\n    return typeof this.path === 'string' ? path.dirname(this.path) : undefined\n  }\n\n  /**\n   * Set the parent path (example: `'~'`).\n   *\n   * Cannot be set if there’s no `path` yet.\n   *\n   * @param {string | undefined} dirname\n   *   Dirname.\n   * @returns {undefined}\n   *   Nothing.\n   */\n  set dirname(dirname) {\n    assertPath(this.basename, 'dirname')\n    this.path = path.join(dirname || '', this.basename)\n  }\n\n  /**\n   * Get the extname (including dot) (example: `'.js'`).\n   *\n   * @returns {string | undefined}\n   *   Extname.\n   */\n  get extname() {\n    return typeof this.path === 'string' ? path.extname(this.path) : undefined\n  }\n\n  /**\n   * Set the extname (including dot) (example: `'.js'`).\n   *\n   * Cannot contain path separators (`'/'` on unix, macOS, and browsers, `'\\'`\n   * on windows).\n   * Cannot be set if there’s no `path` yet.\n   *\n   * @param {string | undefined} extname\n   *   Extname.\n   * @returns {undefined}\n   *   Nothing.\n   */\n  set extname(extname) {\n    assertPart(extname, 'extname')\n    assertPath(this.dirname, 'extname')\n\n    if (extname) {\n      if (extname.codePointAt(0) !== 46 /* `.` */) {\n        throw new Error('`extname` must start with `.`')\n      }\n\n      if (extname.includes('.', 1)) {\n        throw new Error('`extname` cannot contain multiple dots')\n      }\n    }\n\n    this.path = path.join(this.dirname, this.stem + (extname || ''))\n  }\n\n  /**\n   * Get the full path (example: `'~/index.min.js'`).\n   *\n   * @returns {string}\n   *   Path.\n   */\n  get path() {\n    return this.history[this.history.length - 1]\n  }\n\n  /**\n   * Set the full path (example: `'~/index.min.js'`).\n   *\n   * Cannot be nullified.\n   * You can set a file URL (a `URL` object with a `file:` protocol) which will\n   * be turned into a path with `url.fileURLToPath`.\n   *\n   * @param {URL | string} path\n   *   Path.\n   * @returns {undefined}\n   *   Nothing.\n   */\n  set path(path) {\n    if (isUrl(path)) {\n      path = urlToPath(path)\n    }\n\n    assertNonEmpty(path, 'path')\n\n    if (this.path !== path) {\n      this.history.push(path)\n    }\n  }\n\n  /**\n   * Get the stem (basename w/o extname) (example: `'index.min'`).\n   *\n   * @returns {string | undefined}\n   *   Stem.\n   */\n  get stem() {\n    return typeof this.path === 'string'\n      ? path.basename(this.path, this.extname)\n      : undefined\n  }\n\n  /**\n   * Set the stem (basename w/o extname) (example: `'index.min'`).\n   *\n   * Cannot contain path separators (`'/'` on unix, macOS, and browsers, `'\\'`\n   * on windows).\n   * Cannot be nullified (use `file.path = file.dirname` instead).\n   *\n   * @param {string} stem\n   *   Stem.\n   * @returns {undefined}\n   *   Nothing.\n   */\n  set stem(stem) {\n    assertNonEmpty(stem, 'stem')\n    assertPart(stem, 'stem')\n    this.path = path.join(this.dirname || '', stem + (this.extname || ''))\n  }\n\n  // Normal prototypal methods.\n  /**\n   * Create a fatal message for `reason` associated with the file.\n   *\n   * The `fatal` field of the message is set to `true` (error; file not usable)\n   * and the `file` field is set to the current file path.\n   * The message is added to the `messages` field on `file`.\n   *\n   * > 🪦 **Note**: also has obsolete signatures.\n   *\n   * @overload\n   * @param {string} reason\n   * @param {MessageOptions | null | undefined} [options]\n   * @returns {never}\n   *\n   * @overload\n   * @param {string} reason\n   * @param {Node | NodeLike | null | undefined} parent\n   * @param {string | null | undefined} [origin]\n   * @returns {never}\n   *\n   * @overload\n   * @param {string} reason\n   * @param {Point | Position | null | undefined} place\n   * @param {string | null | undefined} [origin]\n   * @returns {never}\n   *\n   * @overload\n   * @param {string} reason\n   * @param {string | null | undefined} [origin]\n   * @returns {never}\n   *\n   * @overload\n   * @param {Error | VFileMessage} cause\n   * @param {Node | NodeLike | null | undefined} parent\n   * @param {string | null | undefined} [origin]\n   * @returns {never}\n   *\n   * @overload\n   * @param {Error | VFileMessage} cause\n   * @param {Point | Position | null | undefined} place\n   * @param {string | null | undefined} [origin]\n   * @returns {never}\n   *\n   * @overload\n   * @param {Error | VFileMessage} cause\n   * @param {string | null | undefined} [origin]\n   * @returns {never}\n   *\n   * @param {Error | VFileMessage | string} causeOrReason\n   *   Reason for message, should use markdown.\n   * @param {Node | NodeLike | MessageOptions | Point | Position | string | null | undefined} [optionsOrParentOrPlace]\n   *   Configuration (optional).\n   * @param {string | null | undefined} [origin]\n   *   Place in code where the message originates (example:\n   *   `'my-package:my-rule'` or `'my-rule'`).\n   * @returns {never}\n   *   Never.\n   * @throws {VFileMessage}\n   *   Message.\n   */\n  fail(causeOrReason, optionsOrParentOrPlace, origin) {\n    // @ts-expect-error: the overloads are fine.\n    const message = this.message(causeOrReason, optionsOrParentOrPlace, origin)\n\n    message.fatal = true\n\n    throw message\n  }\n\n  /**\n   * Create an info message for `reason` associated with the file.\n   *\n   * The `fatal` field of the message is set to `undefined` (info; change\n   * likely not needed) and the `file` field is set to the current file path.\n   * The message is added to the `messages` field on `file`.\n   *\n   * > 🪦 **Note**: also has obsolete signatures.\n   *\n   * @overload\n   * @param {string} reason\n   * @param {MessageOptions | null | undefined} [options]\n   * @returns {VFileMessage}\n   *\n   * @overload\n   * @param {string} reason\n   * @param {Node | NodeLike | null | undefined} parent\n   * @param {string | null | undefined} [origin]\n   * @returns {VFileMessage}\n   *\n   * @overload\n   * @param {string} reason\n   * @param {Point | Position | null | undefined} place\n   * @param {string | null | undefined} [origin]\n   * @returns {VFileMessage}\n   *\n   * @overload\n   * @param {string} reason\n   * @param {string | null | undefined} [origin]\n   * @returns {VFileMessage}\n   *\n   * @overload\n   * @param {Error | VFileMessage} cause\n   * @param {Node | NodeLike | null | undefined} parent\n   * @param {string | null | undefined} [origin]\n   * @returns {VFileMessage}\n   *\n   * @overload\n   * @param {Error | VFileMessage} cause\n   * @param {Point | Position | null | undefined} place\n   * @param {string | null | undefined} [origin]\n   * @returns {VFileMessage}\n   *\n   * @overload\n   * @param {Error | VFileMessage} cause\n   * @param {string | null | undefined} [origin]\n   * @returns {VFileMessage}\n   *\n   * @param {Error | VFileMessage | string} causeOrReason\n   *   Reason for message, should use markdown.\n   * @param {Node | NodeLike | MessageOptions | Point | Position | string | null | undefined} [optionsOrParentOrPlace]\n   *   Configuration (optional).\n   * @param {string | null | undefined} [origin]\n   *   Place in code where the message originates (example:\n   *   `'my-package:my-rule'` or `'my-rule'`).\n   * @returns {VFileMessage}\n   *   Message.\n   */\n  info(causeOrReason, optionsOrParentOrPlace, origin) {\n    // @ts-expect-error: the overloads are fine.\n    const message = this.message(causeOrReason, optionsOrParentOrPlace, origin)\n\n    message.fatal = undefined\n\n    return message\n  }\n\n  /**\n   * Create a message for `reason` associated with the file.\n   *\n   * The `fatal` field of the message is set to `false` (warning; change may be\n   * needed) and the `file` field is set to the current file path.\n   * The message is added to the `messages` field on `file`.\n   *\n   * > 🪦 **Note**: also has obsolete signatures.\n   *\n   * @overload\n   * @param {string} reason\n   * @param {MessageOptions | null | undefined} [options]\n   * @returns {VFileMessage}\n   *\n   * @overload\n   * @param {string} reason\n   * @param {Node | NodeLike | null | undefined} parent\n   * @param {string | null | undefined} [origin]\n   * @returns {VFileMessage}\n   *\n   * @overload\n   * @param {string} reason\n   * @param {Point | Position | null | undefined} place\n   * @param {string | null | undefined} [origin]\n   * @returns {VFileMessage}\n   *\n   * @overload\n   * @param {string} reason\n   * @param {string | null | undefined} [origin]\n   * @returns {VFileMessage}\n   *\n   * @overload\n   * @param {Error | VFileMessage} cause\n   * @param {Node | NodeLike | null | undefined} parent\n   * @param {string | null | undefined} [origin]\n   * @returns {VFileMessage}\n   *\n   * @overload\n   * @param {Error | VFileMessage} cause\n   * @param {Point | Position | null | undefined} place\n   * @param {string | null | undefined} [origin]\n   * @returns {VFileMessage}\n   *\n   * @overload\n   * @param {Error | VFileMessage} cause\n   * @param {string | null | undefined} [origin]\n   * @returns {VFileMessage}\n   *\n   * @param {Error | VFileMessage | string} causeOrReason\n   *   Reason for message, should use markdown.\n   * @param {Node | NodeLike | MessageOptions | Point | Position | string | null | undefined} [optionsOrParentOrPlace]\n   *   Configuration (optional).\n   * @param {string | null | undefined} [origin]\n   *   Place in code where the message originates (example:\n   *   `'my-package:my-rule'` or `'my-rule'`).\n   * @returns {VFileMessage}\n   *   Message.\n   */\n  message(causeOrReason, optionsOrParentOrPlace, origin) {\n    const message = new VFileMessage(\n      // @ts-expect-error: the overloads are fine.\n      causeOrReason,\n      optionsOrParentOrPlace,\n      origin\n    )\n\n    if (this.path) {\n      message.name = this.path + ':' + message.name\n      message.file = this.path\n    }\n\n    message.fatal = false\n\n    this.messages.push(message)\n\n    return message\n  }\n\n  /**\n   * Serialize the file.\n   *\n   * > **Note**: which encodings are supported depends on the engine.\n   * > For info on Node.js, see:\n   * > <https://nodejs.org/api/util.html#whatwg-supported-encodings>.\n   *\n   * @param {string | null | undefined} [encoding='utf8']\n   *   Character encoding to understand `value` as when it’s a `Uint8Array`\n   *   (default: `'utf-8'`).\n   * @returns {string}\n   *   Serialized file.\n   */\n  toString(encoding) {\n    if (this.value === undefined) {\n      return ''\n    }\n\n    if (typeof this.value === 'string') {\n      return this.value\n    }\n\n    const decoder = new TextDecoder(encoding || undefined)\n    return decoder.decode(this.value)\n  }\n}\n\n/**\n * Assert that `part` is not a path (as in, does not contain `path.sep`).\n *\n * @param {string | null | undefined} part\n *   File path part.\n * @param {string} name\n *   Part name.\n * @returns {undefined}\n *   Nothing.\n */\nfunction assertPart(part, name) {\n  if (part && part.includes(path.sep)) {\n    throw new Error(\n      '`' + name + '` cannot be a path: did not expect `' + path.sep + '`'\n    )\n  }\n}\n\n/**\n * Assert that `part` is not empty.\n *\n * @param {string | undefined} part\n *   Thing.\n * @param {string} name\n *   Part name.\n * @returns {asserts part is string}\n *   Nothing.\n */\nfunction assertNonEmpty(part, name) {\n  if (!part) {\n    throw new Error('`' + name + '` cannot be empty')\n  }\n}\n\n/**\n * Assert `path` exists.\n *\n * @param {string | undefined} path\n *   Path.\n * @param {string} name\n *   Dependency name.\n * @returns {asserts path is string}\n *   Nothing.\n */\nfunction assertPath(path, name) {\n  if (!path) {\n    throw new Error('Setting `' + name + '` requires `path` to be set too')\n  }\n}\n\n/**\n * Assert `value` is an `Uint8Array`.\n *\n * @param {unknown} value\n *   thing.\n * @returns {value is Uint8Array}\n *   Whether `value` is an `Uint8Array`.\n */\nfunction isUint8Array(value) {\n  return Boolean(\n    value &&\n      typeof value === 'object' &&\n      'byteLength' in value &&\n      'byteOffset' in value\n  )\n}\n","export const CallableInstance =\n  /**\n   * @type {new <Parameters extends Array<unknown>, Result>(property: string | symbol) => (...parameters: Parameters) => Result}\n   */\n  (\n    /** @type {unknown} */\n    (\n      /**\n       * @this {Function}\n       * @param {string | symbol} property\n       * @returns {(...parameters: Array<unknown>) => unknown}\n       */\n      function (property) {\n        const self = this\n        const constr = self.constructor\n        const proto = /** @type {Record<string | symbol, Function>} */ (\n          // Prototypes do exist.\n          // type-coverage:ignore-next-line\n          constr.prototype\n        )\n        const func = proto[property]\n        /** @type {(...parameters: Array<unknown>) => unknown} */\n        const apply = function () {\n          return func.apply(apply, arguments)\n        }\n\n        Object.setPrototypeOf(apply, proto)\n\n        const names = Object.getOwnPropertyNames(func)\n\n        for (const p of names) {\n          const descriptor = Object.getOwnPropertyDescriptor(func, p)\n          if (descriptor) Object.defineProperty(apply, p, descriptor)\n        }\n\n        return apply\n      }\n    )\n  )\n","/**\n * @typedef {import('trough').Pipeline} Pipeline\n *\n * @typedef {import('unist').Node} Node\n *\n * @typedef {import('vfile').Compatible} Compatible\n * @typedef {import('vfile').Value} Value\n *\n * @typedef {import('../index.js').CompileResultMap} CompileResultMap\n * @typedef {import('../index.js').Data} Data\n * @typedef {import('../index.js').Settings} Settings\n */\n\n/**\n * @typedef {CompileResultMap[keyof CompileResultMap]} CompileResults\n *   Acceptable results from compilers.\n *\n *   To register custom results, add them to\n *   {@link CompileResultMap `CompileResultMap`}.\n */\n\n/**\n * @template {Node} [Tree=Node]\n *   The node that the compiler receives (default: `Node`).\n * @template {CompileResults} [Result=CompileResults]\n *   The thing that the compiler yields (default: `CompileResults`).\n * @callback Compiler\n *   A **compiler** handles the compiling of a syntax tree to something else\n *   (in most cases, text) (TypeScript type).\n *\n *   It is used in the stringify phase and called with a {@link Node `Node`}\n *   and {@link VFile `VFile`} representation of the document to compile.\n *   It should return the textual representation of the given tree (typically\n *   `string`).\n *\n *   > 👉 **Note**: unified typically compiles by serializing: most compilers\n *   > return `string` (or `Uint8Array`).\n *   > Some compilers, such as the one configured with\n *   > [`rehype-react`][rehype-react], return other values (in this case, a\n *   > React tree).\n *   > If you’re using a compiler that doesn’t serialize, expect different\n *   > result values.\n *   >\n *   > To register custom results in TypeScript, add them to\n *   > {@link CompileResultMap `CompileResultMap`}.\n *\n *   [rehype-react]: https://github.com/rehypejs/rehype-react\n * @param {Tree} tree\n *   Tree to compile.\n * @param {VFile} file\n *   File associated with `tree`.\n * @returns {Result}\n *   New content: compiled text (`string` or `Uint8Array`, for `file.value`) or\n *   something else (for `file.result`).\n */\n\n/**\n * @template {Node} [Tree=Node]\n *   The node that the parser yields (default: `Node`)\n * @callback Parser\n *   A **parser** handles the parsing of text to a syntax tree.\n *\n *   It is used in the parse phase and is called with a `string` and\n *   {@link VFile `VFile`} of the document to parse.\n *   It must return the syntax tree representation of the given file\n *   ({@link Node `Node`}).\n * @param {string} document\n *   Document to parse.\n * @param {VFile} file\n *   File associated with `document`.\n * @returns {Tree}\n *   Node representing the given file.\n */\n\n/**\n * @typedef {(\n *   Plugin<Array<any>, any, any> |\n *   PluginTuple<Array<any>, any, any> |\n *   Preset\n * )} Pluggable\n *   Union of the different ways to add plugins and settings.\n */\n\n/**\n * @typedef {Array<Pluggable>} PluggableList\n *   List of plugins and presets.\n */\n\n// Note: we can’t use `callback` yet as it messes up `this`:\n//  <https://github.com/microsoft/TypeScript/issues/55197>.\n/**\n * @template {Array<unknown>} [PluginParameters=[]]\n *   Arguments passed to the plugin (default: `[]`, the empty tuple).\n * @template {Node | string | undefined} [Input=Node]\n *   Value that is expected as input (default: `Node`).\n *\n *   *   If the plugin returns a {@link Transformer `Transformer`}, this\n *       should be the node it expects.\n *   *   If the plugin sets a {@link Parser `Parser`}, this should be\n *       `string`.\n *   *   If the plugin sets a {@link Compiler `Compiler`}, this should be the\n *       node it expects.\n * @template [Output=Input]\n *   Value that is yielded as output (default: `Input`).\n *\n *   *   If the plugin returns a {@link Transformer `Transformer`}, this\n *       should be the node that that yields.\n *   *   If the plugin sets a {@link Parser `Parser`}, this should be the\n *       node that it yields.\n *   *   If the plugin sets a {@link Compiler `Compiler`}, this should be\n *       result it yields.\n * @typedef {(\n *   (this: Processor, ...parameters: PluginParameters) =>\n *     Input extends string ? // Parser.\n *        Output extends Node | undefined ? undefined | void : never :\n *     Output extends CompileResults ? // Compiler.\n *        Input extends Node | undefined ? undefined | void : never :\n *     Transformer<\n *       Input extends Node ? Input : Node,\n *       Output extends Node ? Output : Node\n *     > | undefined | void\n * )} Plugin\n *   Single plugin.\n *\n *   Plugins configure the processors they are applied on in the following\n *   ways:\n *\n *   *   they change the processor, such as the parser, the compiler, or by\n *       configuring data\n *   *   they specify how to handle trees and files\n *\n *   In practice, they are functions that can receive options and configure the\n *   processor (`this`).\n *\n *   > 👉 **Note**: plugins are called when the processor is *frozen*, not when\n *   > they are applied.\n */\n\n/**\n * Tuple of a plugin and its configuration.\n *\n * The first item is a plugin, the rest are its parameters.\n *\n * @template {Array<unknown>} [TupleParameters=[]]\n *   Arguments passed to the plugin (default: `[]`, the empty tuple).\n * @template {Node | string | undefined} [Input=undefined]\n *   Value that is expected as input (optional).\n *\n *   *   If the plugin returns a {@link Transformer `Transformer`}, this\n *       should be the node it expects.\n *   *   If the plugin sets a {@link Parser `Parser`}, this should be\n *       `string`.\n *   *   If the plugin sets a {@link Compiler `Compiler`}, this should be the\n *       node it expects.\n * @template [Output=undefined] (optional).\n *   Value that is yielded as output.\n *\n *   *   If the plugin returns a {@link Transformer `Transformer`}, this\n *       should be the node that that yields.\n *   *   If the plugin sets a {@link Parser `Parser`}, this should be the\n *       node that it yields.\n *   *   If the plugin sets a {@link Compiler `Compiler`}, this should be\n *       result it yields.\n * @typedef {(\n *   [\n *     plugin: Plugin<TupleParameters, Input, Output>,\n *     ...parameters: TupleParameters\n *   ]\n * )} PluginTuple\n */\n\n/**\n * @typedef Preset\n *   Sharable configuration.\n *\n *   They can contain plugins and settings.\n * @property {PluggableList | undefined} [plugins]\n *   List of plugins and presets (optional).\n * @property {Settings | undefined} [settings]\n *   Shared settings for parsers and compilers (optional).\n */\n\n/**\n * @template {VFile} [File=VFile]\n *   The file that the callback receives (default: `VFile`).\n * @callback ProcessCallback\n *   Callback called when the process is done.\n *\n *   Called with either an error or a result.\n * @param {Error | undefined} [error]\n *   Fatal error (optional).\n * @param {File | undefined} [file]\n *   Processed file (optional).\n * @returns {undefined}\n *   Nothing.\n */\n\n/**\n * @template {Node} [Tree=Node]\n *   The tree that the callback receives (default: `Node`).\n * @callback RunCallback\n *   Callback called when transformers are done.\n *\n *   Called with either an error or results.\n * @param {Error | undefined} [error]\n *   Fatal error (optional).\n * @param {Tree | undefined} [tree]\n *   Transformed tree (optional).\n * @param {VFile | undefined} [file]\n *   File (optional).\n * @returns {undefined}\n *   Nothing.\n */\n\n/**\n * @template {Node} [Output=Node]\n *   Node type that the transformer yields (default: `Node`).\n * @callback TransformCallback\n *   Callback passed to transforms.\n *\n *   If the signature of a `transformer` accepts a third argument, the\n *   transformer may perform asynchronous operations, and must call it.\n * @param {Error | undefined} [error]\n *   Fatal error to stop the process (optional).\n * @param {Output | undefined} [tree]\n *   New, changed, tree (optional).\n * @param {VFile | undefined} [file]\n *   New, changed, file (optional).\n * @returns {undefined}\n *   Nothing.\n */\n\n/**\n * @template {Node} [Input=Node]\n *   Node type that the transformer expects (default: `Node`).\n * @template {Node} [Output=Input]\n *   Node type that the transformer yields (default: `Input`).\n * @callback Transformer\n *   Transformers handle syntax trees and files.\n *\n *   They are functions that are called each time a syntax tree and file are\n *   passed through the run phase.\n *   When an error occurs in them (either because it’s thrown, returned,\n *   rejected, or passed to `next`), the process stops.\n *\n *   The run phase is handled by [`trough`][trough], see its documentation for\n *   the exact semantics of these functions.\n *\n *   > 👉 **Note**: you should likely ignore `next`: don’t accept it.\n *   > it supports callback-style async work.\n *   > But promises are likely easier to reason about.\n *\n *   [trough]: https://github.com/wooorm/trough#function-fninput-next\n * @param {Input} tree\n *   Tree to handle.\n * @param {VFile} file\n *   File to handle.\n * @param {TransformCallback<Output>} next\n *   Callback.\n * @returns {(\n *   Promise<Output | undefined | void> |\n *   Promise<never> | // For some reason this is needed separately.\n *   Output |\n *   Error |\n *   undefined |\n *   void\n * )}\n *   If you accept `next`, nothing.\n *   Otherwise:\n *\n *   *   `Error` — fatal error to stop the process\n *   *   `Promise<undefined>` or `undefined` — the next transformer keeps using\n *       same tree\n *   *   `Promise<Node>` or `Node` — new, changed, tree\n */\n\n/**\n * @template {Node | undefined} ParseTree\n *   Output of `parse`.\n * @template {Node | undefined} HeadTree\n *   Input for `run`.\n * @template {Node | undefined} TailTree\n *   Output for `run`.\n * @template {Node | undefined} CompileTree\n *   Input of `stringify`.\n * @template {CompileResults | undefined} CompileResult\n *   Output of `stringify`.\n * @template {Node | string | undefined} Input\n *   Input of plugin.\n * @template Output\n *   Output of plugin (optional).\n * @typedef {(\n *   Input extends string\n *     ? Output extends Node | undefined\n *       ? // Parser.\n *         Processor<\n *           Output extends undefined ? ParseTree : Output,\n *           HeadTree,\n *           TailTree,\n *           CompileTree,\n *           CompileResult\n *         >\n *       : // Unknown.\n *         Processor<ParseTree, HeadTree, TailTree, CompileTree, CompileResult>\n *     : Output extends CompileResults\n *     ? Input extends Node | undefined\n *       ? // Compiler.\n *         Processor<\n *           ParseTree,\n *           HeadTree,\n *           TailTree,\n *           Input extends undefined ? CompileTree : Input,\n *           Output extends undefined ? CompileResult : Output\n *         >\n *       : // Unknown.\n *         Processor<ParseTree, HeadTree, TailTree, CompileTree, CompileResult>\n *     : Input extends Node | undefined\n *     ? Output extends Node | undefined\n *       ? // Transform.\n *         Processor<\n *           ParseTree,\n *           HeadTree extends undefined ? Input : HeadTree,\n *           Output extends undefined ? TailTree : Output,\n *           CompileTree,\n *           CompileResult\n *         >\n *       : // Unknown.\n *         Processor<ParseTree, HeadTree, TailTree, CompileTree, CompileResult>\n *     : // Unknown.\n *       Processor<ParseTree, HeadTree, TailTree, CompileTree, CompileResult>\n * )} UsePlugin\n *   Create a processor based on the input/output of a {@link Plugin plugin}.\n */\n\n/**\n * @template {CompileResults | undefined} Result\n *   Node type that the transformer yields.\n * @typedef {(\n *   Result extends Value | undefined ?\n *     VFile :\n *     VFile & {result: Result}\n *   )} VFileWithOutput\n *   Type to generate a {@link VFile `VFile`} corresponding to a compiler result.\n *\n *   If a result that is not acceptable on a `VFile` is used, that will\n *   be stored on the `result` field of {@link VFile `VFile`}.\n */\n\nimport {bail} from 'bail'\nimport extend from 'extend'\nimport {ok as assert} from 'devlop'\nimport isPlainObj from 'is-plain-obj'\nimport {trough} from 'trough'\nimport {VFile} from 'vfile'\nimport {CallableInstance} from './callable-instance.js'\n\n// To do: next major: drop `Compiler`, `Parser`: prefer lowercase.\n\n// To do: we could start yielding `never` in TS when a parser is missing and\n// `parse` is called.\n// Currently, we allow directly setting `processor.parser`, which is untyped.\n\nconst own = {}.hasOwnProperty\n\n/**\n * @template {Node | undefined} [ParseTree=undefined]\n *   Output of `parse` (optional).\n * @template {Node | undefined} [HeadTree=undefined]\n *   Input for `run` (optional).\n * @template {Node | undefined} [TailTree=undefined]\n *   Output for `run` (optional).\n * @template {Node | undefined} [CompileTree=undefined]\n *   Input of `stringify` (optional).\n * @template {CompileResults | undefined} [CompileResult=undefined]\n *   Output of `stringify` (optional).\n * @extends {CallableInstance<[], Processor<ParseTree, HeadTree, TailTree, CompileTree, CompileResult>>}\n */\nexport class Processor extends CallableInstance {\n  /**\n   * Create a processor.\n   */\n  constructor() {\n    // If `Processor()` is called (w/o new), `copy` is called instead.\n    super('copy')\n\n    /**\n     * Compiler to use (deprecated).\n     *\n     * @deprecated\n     *   Use `compiler` instead.\n     * @type {(\n     *   Compiler<\n     *     CompileTree extends undefined ? Node : CompileTree,\n     *     CompileResult extends undefined ? CompileResults : CompileResult\n     *   > |\n     *   undefined\n     * )}\n     */\n    this.Compiler = undefined\n\n    /**\n     * Parser to use (deprecated).\n     *\n     * @deprecated\n     *   Use `parser` instead.\n     * @type {(\n     *   Parser<ParseTree extends undefined ? Node : ParseTree> |\n     *   undefined\n     * )}\n     */\n    this.Parser = undefined\n\n    // Note: the following fields are considered private.\n    // However, they are needed for tests, and TSC generates an untyped\n    // `private freezeIndex` field for, which trips `type-coverage` up.\n    // Instead, we use `@deprecated` to visualize that they shouldn’t be used.\n    /**\n     * Internal list of configured plugins.\n     *\n     * @deprecated\n     *   This is a private internal property and should not be used.\n     * @type {Array<PluginTuple<Array<unknown>>>}\n     */\n    this.attachers = []\n\n    /**\n     * Compiler to use.\n     *\n     * @type {(\n     *   Compiler<\n     *     CompileTree extends undefined ? Node : CompileTree,\n     *     CompileResult extends undefined ? CompileResults : CompileResult\n     *   > |\n     *   undefined\n     * )}\n     */\n    this.compiler = undefined\n\n    /**\n     * Internal state to track where we are while freezing.\n     *\n     * @deprecated\n     *   This is a private internal property and should not be used.\n     * @type {number}\n     */\n    this.freezeIndex = -1\n\n    /**\n     * Internal state to track whether we’re frozen.\n     *\n     * @deprecated\n     *   This is a private internal property and should not be used.\n     * @type {boolean | undefined}\n     */\n    this.frozen = undefined\n\n    /**\n     * Internal state.\n     *\n     * @deprecated\n     *   This is a private internal property and should not be used.\n     * @type {Data}\n     */\n    this.namespace = {}\n\n    /**\n     * Parser to use.\n     *\n     * @type {(\n     *   Parser<ParseTree extends undefined ? Node : ParseTree> |\n     *   undefined\n     * )}\n     */\n    this.parser = undefined\n\n    /**\n     * Internal list of configured transformers.\n     *\n     * @deprecated\n     *   This is a private internal property and should not be used.\n     * @type {Pipeline}\n     */\n    this.transformers = trough()\n  }\n\n  /**\n   * Copy a processor.\n   *\n   * @deprecated\n   *   This is a private internal method and should not be used.\n   * @returns {Processor<ParseTree, HeadTree, TailTree, CompileTree, CompileResult>}\n   *   New *unfrozen* processor ({@link Processor `Processor`}) that is\n   *   configured to work the same as its ancestor.\n   *   When the descendant processor is configured in the future it does not\n   *   affect the ancestral processor.\n   */\n  copy() {\n    // Cast as the type parameters will be the same after attaching.\n    const destination =\n      /** @type {Processor<ParseTree, HeadTree, TailTree, CompileTree, CompileResult>} */ (\n        new Processor()\n      )\n    let index = -1\n\n    while (++index < this.attachers.length) {\n      const attacher = this.attachers[index]\n      destination.use(...attacher)\n    }\n\n    destination.data(extend(true, {}, this.namespace))\n\n    return destination\n  }\n\n  /**\n   * Configure the processor with info available to all plugins.\n   * Information is stored in an object.\n   *\n   * Typically, options can be given to a specific plugin, but sometimes it\n   * makes sense to have information shared with several plugins.\n   * For example, a list of HTML elements that are self-closing, which is\n   * needed during all phases.\n   *\n   * > 👉 **Note**: setting information cannot occur on *frozen* processors.\n   * > Call the processor first to create a new unfrozen processor.\n   *\n   * > 👉 **Note**: to register custom data in TypeScript, augment the\n   * > {@link Data `Data`} interface.\n   *\n   * @example\n   *   This example show how to get and set info:\n   *\n   *   ```js\n   *   import {unified} from 'unified'\n   *\n   *   const processor = unified().data('alpha', 'bravo')\n   *\n   *   processor.data('alpha') // => 'bravo'\n   *\n   *   processor.data() // => {alpha: 'bravo'}\n   *\n   *   processor.data({charlie: 'delta'})\n   *\n   *   processor.data() // => {charlie: 'delta'}\n   *   ```\n   *\n   * @template {keyof Data} Key\n   *\n   * @overload\n   * @returns {Data}\n   *\n   * @overload\n   * @param {Data} dataset\n   * @returns {Processor<ParseTree, HeadTree, TailTree, CompileTree, CompileResult>}\n   *\n   * @overload\n   * @param {Key} key\n   * @returns {Data[Key]}\n   *\n   * @overload\n   * @param {Key} key\n   * @param {Data[Key]} value\n   * @returns {Processor<ParseTree, HeadTree, TailTree, CompileTree, CompileResult>}\n   *\n   * @param {Data | Key} [key]\n   *   Key to get or set, or entire dataset to set, or nothing to get the\n   *   entire dataset (optional).\n   * @param {Data[Key]} [value]\n   *   Value to set (optional).\n   * @returns {unknown}\n   *   The current processor when setting, the value at `key` when getting, or\n   *   the entire dataset when getting without key.\n   */\n  data(key, value) {\n    if (typeof key === 'string') {\n      // Set `key`.\n      if (arguments.length === 2) {\n        assertUnfrozen('data', this.frozen)\n        this.namespace[key] = value\n        return this\n      }\n\n      // Get `key`.\n      return (own.call(this.namespace, key) && this.namespace[key]) || undefined\n    }\n\n    // Set space.\n    if (key) {\n      assertUnfrozen('data', this.frozen)\n      this.namespace = key\n      return this\n    }\n\n    // Get space.\n    return this.namespace\n  }\n\n  /**\n   * Freeze a processor.\n   *\n   * Frozen processors are meant to be extended and not to be configured\n   * directly.\n   *\n   * When a processor is frozen it cannot be unfrozen.\n   * New processors working the same way can be created by calling the\n   * processor.\n   *\n   * It’s possible to freeze processors explicitly by calling `.freeze()`.\n   * Processors freeze automatically when `.parse()`, `.run()`, `.runSync()`,\n   * `.stringify()`, `.process()`, or `.processSync()` are called.\n   *\n   * @returns {Processor<ParseTree, HeadTree, TailTree, CompileTree, CompileResult>}\n   *   The current processor.\n   */\n  freeze() {\n    if (this.frozen) {\n      return this\n    }\n\n    // Cast so that we can type plugins easier.\n    // Plugins are supposed to be usable on different processors, not just on\n    // this exact processor.\n    const self = /** @type {Processor} */ (/** @type {unknown} */ (this))\n\n    while (++this.freezeIndex < this.attachers.length) {\n      const [attacher, ...options] = this.attachers[this.freezeIndex]\n\n      if (options[0] === false) {\n        continue\n      }\n\n      if (options[0] === true) {\n        options[0] = undefined\n      }\n\n      const transformer = attacher.call(self, ...options)\n\n      if (typeof transformer === 'function') {\n        this.transformers.use(transformer)\n      }\n    }\n\n    this.frozen = true\n    this.freezeIndex = Number.POSITIVE_INFINITY\n\n    return this\n  }\n\n  /**\n   * Parse text to a syntax tree.\n   *\n   * > 👉 **Note**: `parse` freezes the processor if not already *frozen*.\n   *\n   * > 👉 **Note**: `parse` performs the parse phase, not the run phase or other\n   * > phases.\n   *\n   * @param {Compatible | undefined} [file]\n   *   file to parse (optional); typically `string` or `VFile`; any value\n   *   accepted as `x` in `new VFile(x)`.\n   * @returns {ParseTree extends undefined ? Node : ParseTree}\n   *   Syntax tree representing `file`.\n   */\n  parse(file) {\n    this.freeze()\n    const realFile = vfile(file)\n    const parser = this.parser || this.Parser\n    assertParser('parse', parser)\n    return parser(String(realFile), realFile)\n  }\n\n  /**\n   * Process the given file as configured on the processor.\n   *\n   * > 👉 **Note**: `process` freezes the processor if not already *frozen*.\n   *\n   * > 👉 **Note**: `process` performs the parse, run, and stringify phases.\n   *\n   * @overload\n   * @param {Compatible | undefined} file\n   * @param {ProcessCallback<VFileWithOutput<CompileResult>>} done\n   * @returns {undefined}\n   *\n   * @overload\n   * @param {Compatible | undefined} [file]\n   * @returns {Promise<VFileWithOutput<CompileResult>>}\n   *\n   * @param {Compatible | undefined} [file]\n   *   File (optional); typically `string` or `VFile`]; any value accepted as\n   *   `x` in `new VFile(x)`.\n   * @param {ProcessCallback<VFileWithOutput<CompileResult>> | undefined} [done]\n   *   Callback (optional).\n   * @returns {Promise<VFile> | undefined}\n   *   Nothing if `done` is given.\n   *   Otherwise a promise, rejected with a fatal error or resolved with the\n   *   processed file.\n   *\n   *   The parsed, transformed, and compiled value is available at\n   *   `file.value` (see note).\n   *\n   *   > 👉 **Note**: unified typically compiles by serializing: most\n   *   > compilers return `string` (or `Uint8Array`).\n   *   > Some compilers, such as the one configured with\n   *   > [`rehype-react`][rehype-react], return other values (in this case, a\n   *   > React tree).\n   *   > If you’re using a compiler that doesn’t serialize, expect different\n   *   > result values.\n   *   >\n   *   > To register custom results in TypeScript, add them to\n   *   > {@link CompileResultMap `CompileResultMap`}.\n   *\n   *   [rehype-react]: https://github.com/rehypejs/rehype-react\n   */\n  process(file, done) {\n    const self = this\n\n    this.freeze()\n    assertParser('process', this.parser || this.Parser)\n    assertCompiler('process', this.compiler || this.Compiler)\n\n    return done ? executor(undefined, done) : new Promise(executor)\n\n    // Note: `void`s needed for TS.\n    /**\n     * @param {((file: VFileWithOutput<CompileResult>) => undefined | void) | undefined} resolve\n     * @param {(error: Error | undefined) => undefined | void} reject\n     * @returns {undefined}\n     */\n    function executor(resolve, reject) {\n      const realFile = vfile(file)\n      // Assume `ParseTree` (the result of the parser) matches `HeadTree` (the\n      // input of the first transform).\n      const parseTree =\n        /** @type {HeadTree extends undefined ? Node : HeadTree} */ (\n          /** @type {unknown} */ (self.parse(realFile))\n        )\n\n      self.run(parseTree, realFile, function (error, tree, file) {\n        if (error || !tree || !file) {\n          return realDone(error)\n        }\n\n        // Assume `TailTree` (the output of the last transform) matches\n        // `CompileTree` (the input of the compiler).\n        const compileTree =\n          /** @type {CompileTree extends undefined ? Node : CompileTree} */ (\n            /** @type {unknown} */ (tree)\n          )\n\n        const compileResult = self.stringify(compileTree, file)\n\n        if (looksLikeAValue(compileResult)) {\n          file.value = compileResult\n        } else {\n          file.result = compileResult\n        }\n\n        realDone(error, /** @type {VFileWithOutput<CompileResult>} */ (file))\n      })\n\n      /**\n       * @param {Error | undefined} error\n       * @param {VFileWithOutput<CompileResult> | undefined} [file]\n       * @returns {undefined}\n       */\n      function realDone(error, file) {\n        if (error || !file) {\n          reject(error)\n        } else if (resolve) {\n          resolve(file)\n        } else {\n          assert(done, '`done` is defined if `resolve` is not')\n          done(undefined, file)\n        }\n      }\n    }\n  }\n\n  /**\n   * Process the given file as configured on the processor.\n   *\n   * An error is thrown if asynchronous transforms are configured.\n   *\n   * > 👉 **Note**: `processSync` freezes the processor if not already *frozen*.\n   *\n   * > 👉 **Note**: `processSync` performs the parse, run, and stringify phases.\n   *\n   * @param {Compatible | undefined} [file]\n   *   File (optional); typically `string` or `VFile`; any value accepted as\n   *   `x` in `new VFile(x)`.\n   * @returns {VFileWithOutput<CompileResult>}\n   *   The processed file.\n   *\n   *   The parsed, transformed, and compiled value is available at\n   *   `file.value` (see note).\n   *\n   *   > 👉 **Note**: unified typically compiles by serializing: most\n   *   > compilers return `string` (or `Uint8Array`).\n   *   > Some compilers, such as the one configured with\n   *   > [`rehype-react`][rehype-react], return other values (in this case, a\n   *   > React tree).\n   *   > If you’re using a compiler that doesn’t serialize, expect different\n   *   > result values.\n   *   >\n   *   > To register custom results in TypeScript, add them to\n   *   > {@link CompileResultMap `CompileResultMap`}.\n   *\n   *   [rehype-react]: https://github.com/rehypejs/rehype-react\n   */\n  processSync(file) {\n    /** @type {boolean} */\n    let complete = false\n    /** @type {VFileWithOutput<CompileResult> | undefined} */\n    let result\n\n    this.freeze()\n    assertParser('processSync', this.parser || this.Parser)\n    assertCompiler('processSync', this.compiler || this.Compiler)\n\n    this.process(file, realDone)\n    assertDone('processSync', 'process', complete)\n    assert(result, 'we either bailed on an error or have a tree')\n\n    return result\n\n    /**\n     * @type {ProcessCallback<VFileWithOutput<CompileResult>>}\n     */\n    function realDone(error, file) {\n      complete = true\n      bail(error)\n      result = file\n    }\n  }\n\n  /**\n   * Run *transformers* on a syntax tree.\n   *\n   * > 👉 **Note**: `run` freezes the processor if not already *frozen*.\n   *\n   * > 👉 **Note**: `run` performs the run phase, not other phases.\n   *\n   * @overload\n   * @param {HeadTree extends undefined ? Node : HeadTree} tree\n   * @param {RunCallback<TailTree extends undefined ? Node : TailTree>} done\n   * @returns {undefined}\n   *\n   * @overload\n   * @param {HeadTree extends undefined ? Node : HeadTree} tree\n   * @param {Compatible | undefined} file\n   * @param {RunCallback<TailTree extends undefined ? Node : TailTree>} done\n   * @returns {undefined}\n   *\n   * @overload\n   * @param {HeadTree extends undefined ? Node : HeadTree} tree\n   * @param {Compatible | undefined} [file]\n   * @returns {Promise<TailTree extends undefined ? Node : TailTree>}\n   *\n   * @param {HeadTree extends undefined ? Node : HeadTree} tree\n   *   Tree to transform and inspect.\n   * @param {(\n   *   RunCallback<TailTree extends undefined ? Node : TailTree> |\n   *   Compatible\n   * )} [file]\n   *   File associated with `node` (optional); any value accepted as `x` in\n   *   `new VFile(x)`.\n   * @param {RunCallback<TailTree extends undefined ? Node : TailTree>} [done]\n   *   Callback (optional).\n   * @returns {Promise<TailTree extends undefined ? Node : TailTree> | undefined}\n   *   Nothing if `done` is given.\n   *   Otherwise, a promise rejected with a fatal error or resolved with the\n   *   transformed tree.\n   */\n  run(tree, file, done) {\n    assertNode(tree)\n    this.freeze()\n\n    const transformers = this.transformers\n\n    if (!done && typeof file === 'function') {\n      done = file\n      file = undefined\n    }\n\n    return done ? executor(undefined, done) : new Promise(executor)\n\n    // Note: `void`s needed for TS.\n    /**\n     * @param {(\n     *   ((tree: TailTree extends undefined ? Node : TailTree) => undefined | void) |\n     *   undefined\n     * )} resolve\n     * @param {(error: Error) => undefined | void} reject\n     * @returns {undefined}\n     */\n    function executor(resolve, reject) {\n      assert(\n        typeof file !== 'function',\n        '`file` can’t be a `done` anymore, we checked'\n      )\n      const realFile = vfile(file)\n      transformers.run(tree, realFile, realDone)\n\n      /**\n       * @param {Error | undefined} error\n       * @param {Node} outputTree\n       * @param {VFile} file\n       * @returns {undefined}\n       */\n      function realDone(error, outputTree, file) {\n        const resultingTree =\n          /** @type {TailTree extends undefined ? Node : TailTree} */ (\n            outputTree || tree\n          )\n\n        if (error) {\n          reject(error)\n        } else if (resolve) {\n          resolve(resultingTree)\n        } else {\n          assert(done, '`done` is defined if `resolve` is not')\n          done(undefined, resultingTree, file)\n        }\n      }\n    }\n  }\n\n  /**\n   * Run *transformers* on a syntax tree.\n   *\n   * An error is thrown if asynchronous transforms are configured.\n   *\n   * > 👉 **Note**: `runSync` freezes the processor if not already *frozen*.\n   *\n   * > 👉 **Note**: `runSync` performs the run phase, not other phases.\n   *\n   * @param {HeadTree extends undefined ? Node : HeadTree} tree\n   *   Tree to transform and inspect.\n   * @param {Compatible | undefined} [file]\n   *   File associated with `node` (optional); any value accepted as `x` in\n   *   `new VFile(x)`.\n   * @returns {TailTree extends undefined ? Node : TailTree}\n   *   Transformed tree.\n   */\n  runSync(tree, file) {\n    /** @type {boolean} */\n    let complete = false\n    /** @type {(TailTree extends undefined ? Node : TailTree) | undefined} */\n    let result\n\n    this.run(tree, file, realDone)\n\n    assertDone('runSync', 'run', complete)\n    assert(result, 'we either bailed on an error or have a tree')\n    return result\n\n    /**\n     * @type {RunCallback<TailTree extends undefined ? Node : TailTree>}\n     */\n    function realDone(error, tree) {\n      bail(error)\n      result = tree\n      complete = true\n    }\n  }\n\n  /**\n   * Compile a syntax tree.\n   *\n   * > 👉 **Note**: `stringify` freezes the processor if not already *frozen*.\n   *\n   * > 👉 **Note**: `stringify` performs the stringify phase, not the run phase\n   * > or other phases.\n   *\n   * @param {CompileTree extends undefined ? Node : CompileTree} tree\n   *   Tree to compile.\n   * @param {Compatible | undefined} [file]\n   *   File associated with `node` (optional); any value accepted as `x` in\n   *   `new VFile(x)`.\n   * @returns {CompileResult extends undefined ? Value : CompileResult}\n   *   Textual representation of the tree (see note).\n   *\n   *   > 👉 **Note**: unified typically compiles by serializing: most compilers\n   *   > return `string` (or `Uint8Array`).\n   *   > Some compilers, such as the one configured with\n   *   > [`rehype-react`][rehype-react], return other values (in this case, a\n   *   > React tree).\n   *   > If you’re using a compiler that doesn’t serialize, expect different\n   *   > result values.\n   *   >\n   *   > To register custom results in TypeScript, add them to\n   *   > {@link CompileResultMap `CompileResultMap`}.\n   *\n   *   [rehype-react]: https://github.com/rehypejs/rehype-react\n   */\n  stringify(tree, file) {\n    this.freeze()\n    const realFile = vfile(file)\n    const compiler = this.compiler || this.Compiler\n    assertCompiler('stringify', compiler)\n    assertNode(tree)\n\n    return compiler(tree, realFile)\n  }\n\n  /**\n   * Configure the processor to use a plugin, a list of usable values, or a\n   * preset.\n   *\n   * If the processor is already using a plugin, the previous plugin\n   * configuration is changed based on the options that are passed in.\n   * In other words, the plugin is not added a second time.\n   *\n   * > 👉 **Note**: `use` cannot be called on *frozen* processors.\n   * > Call the processor first to create a new unfrozen processor.\n   *\n   * @example\n   *   There are many ways to pass plugins to `.use()`.\n   *   This example gives an overview:\n   *\n   *   ```js\n   *   import {unified} from 'unified'\n   *\n   *   unified()\n   *     // Plugin with options:\n   *     .use(pluginA, {x: true, y: true})\n   *     // Passing the same plugin again merges configuration (to `{x: true, y: false, z: true}`):\n   *     .use(pluginA, {y: false, z: true})\n   *     // Plugins:\n   *     .use([pluginB, pluginC])\n   *     // Two plugins, the second with options:\n   *     .use([pluginD, [pluginE, {}]])\n   *     // Preset with plugins and settings:\n   *     .use({plugins: [pluginF, [pluginG, {}]], settings: {position: false}})\n   *     // Settings only:\n   *     .use({settings: {position: false}})\n   *   ```\n   *\n   * @template {Array<unknown>} [Parameters=[]]\n   * @template {Node | string | undefined} [Input=undefined]\n   * @template [Output=Input]\n   *\n   * @overload\n   * @param {Preset | null | undefined} [preset]\n   * @returns {Processor<ParseTree, HeadTree, TailTree, CompileTree, CompileResult>}\n   *\n   * @overload\n   * @param {PluggableList} list\n   * @returns {Processor<ParseTree, HeadTree, TailTree, CompileTree, CompileResult>}\n   *\n   * @overload\n   * @param {Plugin<Parameters, Input, Output>} plugin\n   * @param {...(Parameters | [boolean])} parameters\n   * @returns {UsePlugin<ParseTree, HeadTree, TailTree, CompileTree, CompileResult, Input, Output>}\n   *\n   * @param {PluggableList | Plugin | Preset | null | undefined} value\n   *   Usable value.\n   * @param {...unknown} parameters\n   *   Parameters, when a plugin is given as a usable value.\n   * @returns {Processor<ParseTree, HeadTree, TailTree, CompileTree, CompileResult>}\n   *   Current processor.\n   */\n  use(value, ...parameters) {\n    const attachers = this.attachers\n    const namespace = this.namespace\n\n    assertUnfrozen('use', this.frozen)\n\n    if (value === null || value === undefined) {\n      // Empty.\n    } else if (typeof value === 'function') {\n      addPlugin(value, parameters)\n    } else if (typeof value === 'object') {\n      if (Array.isArray(value)) {\n        addList(value)\n      } else {\n        addPreset(value)\n      }\n    } else {\n      throw new TypeError('Expected usable value, not `' + value + '`')\n    }\n\n    return this\n\n    /**\n     * @param {Pluggable} value\n     * @returns {undefined}\n     */\n    function add(value) {\n      if (typeof value === 'function') {\n        addPlugin(value, [])\n      } else if (typeof value === 'object') {\n        if (Array.isArray(value)) {\n          const [plugin, ...parameters] =\n            /** @type {PluginTuple<Array<unknown>>} */ (value)\n          addPlugin(plugin, parameters)\n        } else {\n          addPreset(value)\n        }\n      } else {\n        throw new TypeError('Expected usable value, not `' + value + '`')\n      }\n    }\n\n    /**\n     * @param {Preset} result\n     * @returns {undefined}\n     */\n    function addPreset(result) {\n      if (!('plugins' in result) && !('settings' in result)) {\n        throw new Error(\n          'Expected usable value but received an empty preset, which is probably a mistake: presets typically come with `plugins` and sometimes with `settings`, but this has neither'\n        )\n      }\n\n      addList(result.plugins)\n\n      if (result.settings) {\n        namespace.settings = extend(true, namespace.settings, result.settings)\n      }\n    }\n\n    /**\n     * @param {PluggableList | null | undefined} plugins\n     * @returns {undefined}\n     */\n    function addList(plugins) {\n      let index = -1\n\n      if (plugins === null || plugins === undefined) {\n        // Empty.\n      } else if (Array.isArray(plugins)) {\n        while (++index < plugins.length) {\n          const thing = plugins[index]\n          add(thing)\n        }\n      } else {\n        throw new TypeError('Expected a list of plugins, not `' + plugins + '`')\n      }\n    }\n\n    /**\n     * @param {Plugin} plugin\n     * @param {Array<unknown>} parameters\n     * @returns {undefined}\n     */\n    function addPlugin(plugin, parameters) {\n      let index = -1\n      let entryIndex = -1\n\n      while (++index < attachers.length) {\n        if (attachers[index][0] === plugin) {\n          entryIndex = index\n          break\n        }\n      }\n\n      if (entryIndex === -1) {\n        attachers.push([plugin, ...parameters])\n      }\n      // Only set if there was at least a `primary` value, otherwise we’d change\n      // `arguments.length`.\n      else if (parameters.length > 0) {\n        let [primary, ...rest] = parameters\n        const currentPrimary = attachers[entryIndex][1]\n        if (isPlainObj(currentPrimary) && isPlainObj(primary)) {\n          primary = extend(true, currentPrimary, primary)\n        }\n\n        attachers[entryIndex] = [plugin, primary, ...rest]\n      }\n    }\n  }\n}\n\n// Note: this returns a *callable* instance.\n// That’s why it’s documented as a function.\n/**\n * Create a new processor.\n *\n * @example\n *   This example shows how a new processor can be created (from `remark`) and linked\n *   to **stdin**(4) and **stdout**(4).\n *\n *   ```js\n *   import process from 'node:process'\n *   import concatStream from 'concat-stream'\n *   import {remark} from 'remark'\n *\n *   process.stdin.pipe(\n *     concatStream(function (buf) {\n *       process.stdout.write(String(remark().processSync(buf)))\n *     })\n *   )\n *   ```\n *\n * @returns\n *   New *unfrozen* processor (`processor`).\n *\n *   This processor is configured to work the same as its ancestor.\n *   When the descendant processor is configured in the future it does not\n *   affect the ancestral processor.\n */\nexport const unified = new Processor().freeze()\n\n/**\n * Assert a parser is available.\n *\n * @param {string} name\n * @param {unknown} value\n * @returns {asserts value is Parser}\n */\nfunction assertParser(name, value) {\n  if (typeof value !== 'function') {\n    throw new TypeError('Cannot `' + name + '` without `parser`')\n  }\n}\n\n/**\n * Assert a compiler is available.\n *\n * @param {string} name\n * @param {unknown} value\n * @returns {asserts value is Compiler}\n */\nfunction assertCompiler(name, value) {\n  if (typeof value !== 'function') {\n    throw new TypeError('Cannot `' + name + '` without `compiler`')\n  }\n}\n\n/**\n * Assert the processor is not frozen.\n *\n * @param {string} name\n * @param {unknown} frozen\n * @returns {asserts frozen is false}\n */\nfunction assertUnfrozen(name, frozen) {\n  if (frozen) {\n    throw new Error(\n      'Cannot call `' +\n        name +\n        '` on a frozen processor.\\nCreate a new processor first, by calling it: use `processor()` instead of `processor`.'\n    )\n  }\n}\n\n/**\n * Assert `node` is a unist node.\n *\n * @param {unknown} node\n * @returns {asserts node is Node}\n */\nfunction assertNode(node) {\n  // `isPlainObj` unfortunately uses `any` instead of `unknown`.\n  // type-coverage:ignore-next-line\n  if (!isPlainObj(node) || typeof node.type !== 'string') {\n    throw new TypeError('Expected node, got `' + node + '`')\n    // Fine.\n  }\n}\n\n/**\n * Assert that `complete` is `true`.\n *\n * @param {string} name\n * @param {string} asyncName\n * @param {unknown} complete\n * @returns {asserts complete is true}\n */\nfunction assertDone(name, asyncName, complete) {\n  if (!complete) {\n    throw new Error(\n      '`' + name + '` finished async. Use `' + asyncName + '` instead'\n    )\n  }\n}\n\n/**\n * @param {Compatible | undefined} [value]\n * @returns {VFile}\n */\nfunction vfile(value) {\n  return looksLikeAVFile(value) ? value : new VFile(value)\n}\n\n/**\n * @param {Compatible | undefined} [value]\n * @returns {value is VFile}\n */\nfunction looksLikeAVFile(value) {\n  return Boolean(\n    value &&\n      typeof value === 'object' &&\n      'message' in value &&\n      'messages' in value\n  )\n}\n\n/**\n * @param {unknown} [value]\n * @returns {value is Value}\n */\nfunction looksLikeAValue(value) {\n  return typeof value === 'string' || isUint8Array(value)\n}\n\n/**\n * Assert `value` is an `Uint8Array`.\n *\n * @param {unknown} value\n *   thing.\n * @returns {value is Uint8Array}\n *   Whether `value` is an `Uint8Array`.\n */\nfunction isUint8Array(value) {\n  return Boolean(\n    value &&\n      typeof value === 'object' &&\n      'byteLength' in value &&\n      'byteOffset' in value\n  )\n}\n","// Register `Raw` in tree:\n/// <reference types=\"mdast-util-to-hast\" />\n\n/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').ElementContent} ElementContent\n * @typedef {import('hast').Nodes} Nodes\n * @typedef {import('hast').Parents} Parents\n * @typedef {import('hast').Root} Root\n * @typedef {import('hast-util-to-jsx-runtime').Components} JsxRuntimeComponents\n * @typedef {import('remark-rehype').Options} RemarkRehypeOptions\n * @typedef {import('unist-util-visit').BuildVisitor<Root>} Visitor\n * @typedef {import('unified').PluggableList} PluggableList\n */\n\n/**\n * @callback AllowElement\n *   Filter elements.\n * @param {Readonly<Element>} element\n *   Element to check.\n * @param {number} index\n *   Index of `element` in `parent`.\n * @param {Readonly<Parents> | undefined} parent\n *   Parent of `element`.\n * @returns {boolean | null | undefined}\n *   Whether to allow `element` (default: `false`).\n *\n * @typedef {Partial<JsxRuntimeComponents>} Components\n *   Map tag names to components.\n *\n * @typedef Deprecation\n *   Deprecation.\n * @property {string} from\n *   Old field.\n * @property {string} id\n *   ID in readme.\n * @property {keyof Options} [to]\n *   New field.\n *\n * @typedef Options\n *   Configuration.\n * @property {AllowElement | null | undefined} [allowElement]\n *   Filter elements (optional);\n *   `allowedElements` / `disallowedElements` is used first.\n * @property {ReadonlyArray<string> | null | undefined} [allowedElements]\n *   Tag names to allow (default: all tag names);\n *   cannot combine w/ `disallowedElements`.\n * @property {string | null | undefined} [children]\n *   Markdown.\n * @property {string | null | undefined} [className]\n *   Wrap in a `div` with this class name.\n * @property {Components | null | undefined} [components]\n *   Map tag names to components.\n * @property {ReadonlyArray<string> | null | undefined} [disallowedElements]\n *   Tag names to disallow (default: `[]`);\n *   cannot combine w/ `allowedElements`.\n * @property {PluggableList | null | undefined} [rehypePlugins]\n *   List of rehype plugins to use.\n * @property {PluggableList | null | undefined} [remarkPlugins]\n *   List of remark plugins to use.\n * @property {Readonly<RemarkRehypeOptions> | null | undefined} [remarkRehypeOptions]\n *   Options to pass through to `remark-rehype`.\n * @property {boolean | null | undefined} [skipHtml=false]\n *   Ignore HTML in markdown completely (default: `false`).\n * @property {boolean | null | undefined} [unwrapDisallowed=false]\n *   Extract (unwrap) what’s in disallowed elements (default: `false`);\n *   normally when say `strong` is not allowed, it and it’s children are dropped,\n *   with `unwrapDisallowed` the element itself is replaced by its children.\n * @property {UrlTransform | null | undefined} [urlTransform]\n *   Change URLs (default: `defaultUrlTransform`)\n *\n * @callback UrlTransform\n *   Transform all URLs.\n * @param {string} url\n *   URL.\n * @param {string} key\n *   Property name (example: `'href'`).\n * @param {Readonly<Element>} node\n *   Node.\n * @returns {string | null | undefined}\n *   Transformed URL (optional).\n */\n\nimport {unreachable} from 'devlop'\nimport {toJsxRuntime} from 'hast-util-to-jsx-runtime'\nimport {urlAttributes} from 'html-url-attributes'\n// @ts-expect-error: untyped.\nimport {Fragment, jsx, jsxs} from 'react/jsx-runtime'\nimport remarkParse from 'remark-parse'\nimport remarkRehype from 'remark-rehype'\nimport {unified} from 'unified'\nimport {visit} from 'unist-util-visit'\nimport {VFile} from 'vfile'\n\nconst changelog =\n  'https://github.com/remarkjs/react-markdown/blob/main/changelog.md'\n\n/** @type {PluggableList} */\nconst emptyPlugins = []\n/** @type {Readonly<RemarkRehypeOptions>} */\nconst emptyRemarkRehypeOptions = {allowDangerousHtml: true}\nconst safeProtocol = /^(https?|ircs?|mailto|xmpp)$/i\n\n// Mutable because we `delete` any time it’s used and a message is sent.\n/** @type {ReadonlyArray<Readonly<Deprecation>>} */\nconst deprecations = [\n  {from: 'astPlugins', id: 'remove-buggy-html-in-markdown-parser'},\n  {from: 'allowDangerousHtml', id: 'remove-buggy-html-in-markdown-parser'},\n  {\n    from: 'allowNode',\n    id: 'replace-allownode-allowedtypes-and-disallowedtypes',\n    to: 'allowElement'\n  },\n  {\n    from: 'allowedTypes',\n    id: 'replace-allownode-allowedtypes-and-disallowedtypes',\n    to: 'allowedElements'\n  },\n  {\n    from: 'disallowedTypes',\n    id: 'replace-allownode-allowedtypes-and-disallowedtypes',\n    to: 'disallowedElements'\n  },\n  {from: 'escapeHtml', id: 'remove-buggy-html-in-markdown-parser'},\n  {from: 'includeElementIndex', id: '#remove-includeelementindex'},\n  {\n    from: 'includeNodeIndex',\n    id: 'change-includenodeindex-to-includeelementindex'\n  },\n  {from: 'linkTarget', id: 'remove-linktarget'},\n  {from: 'plugins', id: 'change-plugins-to-remarkplugins', to: 'remarkPlugins'},\n  {from: 'rawSourcePos', id: '#remove-rawsourcepos'},\n  {from: 'renderers', id: 'change-renderers-to-components', to: 'components'},\n  {from: 'source', id: 'change-source-to-children', to: 'children'},\n  {from: 'sourcePos', id: '#remove-sourcepos'},\n  {from: 'transformImageUri', id: '#add-urltransform', to: 'urlTransform'},\n  {from: 'transformLinkUri', id: '#add-urltransform', to: 'urlTransform'}\n]\n\n/**\n * Component to render markdown.\n *\n * @param {Readonly<Options>} options\n *   Props.\n * @returns {JSX.Element}\n *   React element.\n */\nexport function Markdown(options) {\n  const allowedElements = options.allowedElements\n  const allowElement = options.allowElement\n  const children = options.children || ''\n  const className = options.className\n  const components = options.components\n  const disallowedElements = options.disallowedElements\n  const rehypePlugins = options.rehypePlugins || emptyPlugins\n  const remarkPlugins = options.remarkPlugins || emptyPlugins\n  const remarkRehypeOptions = options.remarkRehypeOptions\n    ? {...options.remarkRehypeOptions, ...emptyRemarkRehypeOptions}\n    : emptyRemarkRehypeOptions\n  const skipHtml = options.skipHtml\n  const unwrapDisallowed = options.unwrapDisallowed\n  const urlTransform = options.urlTransform || defaultUrlTransform\n\n  const processor = unified()\n    .use(remarkParse)\n    .use(remarkPlugins)\n    .use(remarkRehype, remarkRehypeOptions)\n    .use(rehypePlugins)\n\n  const file = new VFile()\n\n  if (typeof children === 'string') {\n    file.value = children\n  } else {\n    unreachable(\n      'Unexpected value `' +\n        children +\n        '` for `children` prop, expected `string`'\n    )\n  }\n\n  if (allowedElements && disallowedElements) {\n    unreachable(\n      'Unexpected combined `allowedElements` and `disallowedElements`, expected one or the other'\n    )\n  }\n\n  for (const deprecation of deprecations) {\n    if (Object.hasOwn(options, deprecation.from)) {\n      unreachable(\n        'Unexpected `' +\n          deprecation.from +\n          '` prop, ' +\n          (deprecation.to\n            ? 'use `' + deprecation.to + '` instead'\n            : 'remove it') +\n          ' (see <' +\n          changelog +\n          '#' +\n          deprecation.id +\n          '> for more info)'\n      )\n    }\n  }\n\n  const mdastTree = processor.parse(file)\n  /** @type {Nodes} */\n  let hastTree = processor.runSync(mdastTree, file)\n\n  // Wrap in `div` if there’s a class name.\n  if (className) {\n    hastTree = {\n      type: 'element',\n      tagName: 'div',\n      properties: {className},\n      // Assume no doctypes.\n      children: /** @type {Array<ElementContent>} */ (\n        hastTree.type === 'root' ? hastTree.children : [hastTree]\n      )\n    }\n  }\n\n  visit(hastTree, transform)\n\n  return toJsxRuntime(hastTree, {\n    Fragment,\n    components,\n    ignoreInvalidStyle: true,\n    jsx,\n    jsxs,\n    passKeys: true,\n    passNode: true\n  })\n\n  /** @type {Visitor} */\n  function transform(node, index, parent) {\n    if (node.type === 'raw' && parent && typeof index === 'number') {\n      if (skipHtml) {\n        parent.children.splice(index, 1)\n      } else {\n        parent.children[index] = {type: 'text', value: node.value}\n      }\n\n      return index\n    }\n\n    if (node.type === 'element') {\n      /** @type {string} */\n      let key\n\n      for (key in urlAttributes) {\n        if (\n          Object.hasOwn(urlAttributes, key) &&\n          Object.hasOwn(node.properties, key)\n        ) {\n          const value = node.properties[key]\n          const test = urlAttributes[key]\n          if (test === null || test.includes(node.tagName)) {\n            node.properties[key] = urlTransform(String(value || ''), key, node)\n          }\n        }\n      }\n    }\n\n    if (node.type === 'element') {\n      let remove = allowedElements\n        ? !allowedElements.includes(node.tagName)\n        : disallowedElements\n        ? disallowedElements.includes(node.tagName)\n        : false\n\n      if (!remove && allowElement && typeof index === 'number') {\n        remove = !allowElement(node, index, parent)\n      }\n\n      if (remove && parent && typeof index === 'number') {\n        if (unwrapDisallowed && node.children) {\n          parent.children.splice(index, 1, ...node.children)\n        } else {\n          parent.children.splice(index, 1)\n        }\n\n        return index\n      }\n    }\n  }\n}\n\n/**\n * Make a URL safe.\n *\n * @satisfies {UrlTransform}\n * @param {string} value\n *   URL.\n * @returns {string}\n *   Safe URL.\n */\nexport function defaultUrlTransform(value) {\n  // Same as:\n  // <https://github.com/micromark/micromark/blob/929275e/packages/micromark-util-sanitize-uri/dev/index.js#L34>\n  // But without the `encode` part.\n  const colon = value.indexOf(':')\n  const questionMark = value.indexOf('?')\n  const numberSign = value.indexOf('#')\n  const slash = value.indexOf('/')\n\n  if (\n    // If there is no protocol, it’s relative.\n    colon < 0 ||\n    // If the first colon is after a `?`, `#`, or `/`, it’s not a protocol.\n    (slash > -1 && colon > slash) ||\n    (questionMark > -1 && colon > questionMark) ||\n    (numberSign > -1 && colon > numberSign) ||\n    // It is a protocol, it should be allowed.\n    safeProtocol.test(value.slice(0, colon))\n  ) {\n    return value\n  }\n\n  return ''\n}\n"],"names":["hasOwn","Object","prototype","hasOwnProperty","toStr","toString","defineProperty","gOPD","getOwnPropertyDescriptor","isArray","arr","Array","call","isPlainObject","obj","key","hasOwnConstructor","hasIsPrototypeOf","constructor","setProperty","target","options","name","enumerable","configurable","value","newValue","writable","getProperty","module","exports","extend","src","copy","copyIsArray","clone","arguments","i","length","deep","COMMENT_REGEX","NEWLINE_REGEX","WHITESPACE_REGEX","PROPERTY_REGEX","COLON_REGEX","VALUE_REGEX","SEMICOLON_REGEX","TRIM_REGEX","EMPTY_STRING","trim","str","replace","style","TypeError","lineno","column","updatePosition","lines","match","lastIndexOf","position","start","line","node","Position","whitespace","this","end","source","content","errorsList","error","msg","err","Error","reason","filename","silent","push","re","m","exec","slice","comments","rules","c","comment","pos","charAt","type","declaration","prop","val","ret","property","decl","decls","declarations","ReactPropTypesSecret","require","emptyFunction","emptyFunctionWithReset","resetWarningCache","shim","props","propName","componentName","location","propFullName","secret","getShim","isRequired","ReactPropTypes","array","bigint","bool","func","number","object","string","symbol","any","arrayOf","element","elementType","instanceOf","objectOf","oneOf","oneOfType","shape","exact","checkPropTypes","PropTypes","get","_DraggableCore","default","React","nodeInterop","__esModule","cache","_getRequireWildcardCache","has","newObj","hasPropertyDescriptor","desc","set","_interopRequireWildcard","_propTypes","_interopRequireDefault","_reactDom","_clsx","_domFns","_positionFns","_shims","_log","WeakMap","cacheBabelInterop","cacheNodeInterop","_extends","assign","bind","apply","_defineProperty","arg","input","hint","prim","Symbol","toPrimitive","undefined","res","String","Number","_toPrimitive","_toPropertyKey","Draggable","Component","getDerivedStateFromProps","_ref","_ref2","prevPropsPosition","x","y","super","e","coreData","onStart","createDraggableData","setState","dragging","dragged","state","uiData","newState","slackX","slackY","bounds","newStateX","newStateY","getBoundPosition","deltaX","deltaY","onDrag","onStop","Boolean","defaultPosition","isElementSVG","console","warn","componentDidMount","window","SVGElement","findDOMNode","componentWillUnmount","_this$props$nodeRef$c","_this$props","nodeRef","current","render","axis","children","defaultClassName","defaultClassNameDragging","defaultClassNameDragged","positionOffset","scale","draggableCoreProps","svgTransform","draggable","validPosition","transformOpts","canDragX","canDragY","createSVGTransform","createCSSTransform","className","createElement","onDragStart","onDragStop","cloneElement","Children","only","transform","propTypes","left","right","top","bottom","dontSetMe","defaultProps","eventsFor","move","stop","dragEventFor","DraggableCore","NaN","onMouseDown","allowAnyClick","button","thisNode","ownerDocument","body","disabled","defaultView","Node","handle","matchesSelectorAndParentsTo","cancel","preventDefault","touchIdentifier","getTouchIdentifier","getControlPosition","coreEvent","createCoreData","mounted","enableUserSelectHack","addUserSelectStyles","lastX","lastY","addEvent","handleDrag","handleDragStop","grid","snapToGrid","MouseEvent","event","document","createEvent","initMouseEvent","removeUserSelectStyles","removeEvent","handleDragStart","onTouchStart","passive","_this$props2","onMouseUp","onTouchEnd","offsetParent","nodeType","addClassName","el","handler","inputOptions","capture","addEventListener","attachEvent","doc","styleEl","getElementById","id","innerHTML","getElementsByTagName","appendChild","controlPos","translation","getTranslation","_getPrefix","browserPrefixToKey","getTouch","identifier","targetTouches","findInArray","t","changedTouches","innerHeight","height","clientHeight","computedStyle","getComputedStyle","int","paddingTop","paddingBottom","innerWidth","width","clientWidth","paddingLeft","paddingRight","matchesSelector","selector","baseNode","parentNode","offsetXYFromParent","evt","offsetParentRect","getBoundingClientRect","clientX","scrollLeft","clientY","scrollTop","outerHeight","borderTopWidth","borderBottomWidth","outerWidth","borderLeftWidth","borderRightWidth","removeClassName","removeEventListener","detachEvent","selection","empty","getSelection","removeAllRanges","matchesSelectorFunc","method","isFunction","unitSuffix","concat","defaultX","defaultY","classList","add","RegExp","remove","browserPrefixToStyle","prefix","toLowerCase","getPrefix","prefixes","_window$document","documentElement","out","shouldCapitalize","toUpperCase","kebabToTitleCase","isStart","isNum","cloneBounds","ownerWindow","boundNode","querySelector","HTMLElement","boundNodeEl","nodeStyle","boundNodeStyle","offsetLeft","marginLeft","offsetTop","marginTop","marginRight","marginBottom","Math","min","max","draggableCore","touchObj","pendingX","pendingY","round","callback","a","parseInt","num","isNaN","r","f","n","clsx","Promise","o","next","u","throw","done","then","label","sent","trys","ops","return","iterator","pop","l","s","h","v","b","d","p","textContent","findIndex","setTimeout","w","g","S","op","requestAnimationFrame","opCode","random","join","insertAt","head","firstChild","insertBefore","styleSheet","cssText","createTextNode","sequence","repeat","speed","deletionSpeed","omitDeletionAnimation","preRenderFirstString","wrapper","splitter","E","_","cursor","k","O","T","indexOf","getOwnPropertySymbols","propertyIsEnumerable","A","C","N","role","P","fill","forEach","abs","j","I","G","D","M","R","q","F","B","Q","flat","W","L","find","ref","inline_style_parser_1","__importDefault","styleObject","hasIterator","nameRe","nameReJsx","emptyOptions","jsx","test","Schema","normal","space","merge","definitions","index","normalize","Info","attribute","boolean","booleanish","overloadedBoolean","commaSeparated","spaceSeparated","commaOrSpaceSeparated","mustUseProperty","defined","powers","increment","checks","keys","types","DefinedInfo","mask","mark","check","values","own","create","definition","properties","info","attributes","includes","xlink","xLinkActuate","xLinkArcRole","xLinkHref","xLinkRole","xLinkShow","xLinkTitle","xLinkType","xml","xmlLang","xmlBase","xmlSpace","caseSensitiveTransform","caseInsensitiveTransform","xmlns","xmlnsxlink","xmlnsXLink","aria","ariaActiveDescendant","ariaAtomic","ariaAutoComplete","ariaBusy","ariaChecked","ariaColCount","ariaColIndex","ariaColSpan","ariaControls","ariaCurrent","ariaDescribedBy","ariaDetails","ariaDisabled","ariaDropEffect","ariaErrorMessage","ariaExpanded","ariaFlowTo","ariaGrabbed","ariaHasPopup","ariaHidden","ariaInvalid","ariaKeyShortcuts","ariaLabel","ariaLabelledBy","ariaLevel","ariaLive","ariaModal","ariaMultiLine","ariaMultiSelectable","ariaOrientation","ariaOwns","ariaPlaceholder","ariaPosInSet","ariaPressed","ariaReadOnly","ariaRelevant","ariaRequired","ariaRoleDescription","ariaRowCount","ariaRowIndex","ariaRowSpan","ariaSelected","ariaSetSize","ariaSort","ariaValueMax","ariaValueMin","ariaValueNow","ariaValueText","html","acceptcharset","classname","htmlfor","httpequiv","abbr","accept","acceptCharset","accessKey","action","allow","allowFullScreen","allowPaymentRequest","allowUserMedia","alt","as","async","autoCapitalize","autoComplete","autoFocus","autoPlay","blocking","charSet","checked","cite","cols","colSpan","contentEditable","controls","controlsList","coords","crossOrigin","data","dateTime","decoding","defer","dir","dirName","download","encType","enterKeyHint","fetchPriority","form","formAction","formEncType","formMethod","formNoValidate","formTarget","headers","hidden","high","href","hrefLang","htmlFor","httpEquiv","imageSizes","imageSrcSet","inert","inputMode","integrity","is","isMap","itemId","itemProp","itemRef","itemScope","itemType","kind","lang","language","list","loading","loop","low","manifest","maxLength","media","minLength","multiple","muted","nonce","noModule","noValidate","onAbort","onAfterPrint","onAuxClick","onBeforeMatch","onBeforePrint","onBeforeToggle","onBeforeUnload","onBlur","onCancel","onCanPlay","onCanPlayThrough","onChange","onClick","onClose","onContextLost","onContextMenu","onContextRestored","onCopy","onCueChange","onCut","onDblClick","onDragEnd","onDragEnter","onDragExit","onDragLeave","onDragOver","onDrop","onDurationChange","onEmptied","onEnded","onError","onFocus","onFormData","onHashChange","onInput","onInvalid","onKeyDown","onKeyPress","onKeyUp","onLanguageChange","onLoad","onLoadedData","onLoadedMetadata","onLoadEnd","onLoadStart","onMessage","onMessageError","onMouseEnter","onMouseLeave","onMouseMove","onMouseOut","onMouseOver","onOffline","onOnline","onPageHide","onPageShow","onPaste","onPause","onPlay","onPlaying","onPopState","onProgress","onRateChange","onRejectionHandled","onReset","onResize","onScroll","onScrollEnd","onSecurityPolicyViolation","onSeeked","onSeeking","onSelect","onSlotChange","onStalled","onStorage","onSubmit","onSuspend","onTimeUpdate","onToggle","onUnhandledRejection","onUnload","onVolumeChange","onWaiting","onWheel","open","optimum","pattern","ping","placeholder","playsInline","popover","popoverTarget","popoverTargetAction","poster","preload","readOnly","referrerPolicy","rel","required","reversed","rows","rowSpan","sandbox","scope","scoped","seamless","selected","shadowRootDelegatesFocus","shadowRootMode","size","sizes","slot","span","spellCheck","srcDoc","srcLang","srcSet","step","tabIndex","title","translate","typeMustMatch","useMap","wrap","align","aLink","archive","background","bgColor","border","borderColor","bottomMargin","cellPadding","cellSpacing","char","charOff","classId","clear","code","codeBase","codeType","color","compact","declare","face","frame","frameBorder","hSpace","leftMargin","link","longDesc","lowSrc","marginHeight","marginWidth","noResize","noHref","noShade","noWrap","profile","prompt","rev","rightMargin","scheme","scrolling","standby","summary","text","topMargin","valueType","version","vAlign","vLink","vSpace","allowTransparency","autoCorrect","autoSave","disablePictureInPicture","disableRemotePlayback","results","security","unselectable","svg","accentHeight","alignmentBaseline","arabicForm","baselineShift","capHeight","clipPath","clipRule","colorInterpolation","colorInterpolationFilters","colorProfile","colorRendering","dataType","dominantBaseline","enableBackground","fillOpacity","fillRule","floodColor","floodOpacity","fontFamily","fontSize","fontSizeAdjust","fontStretch","fontStyle","fontVariant","fontWeight","glyphName","glyphOrientationHorizontal","glyphOrientationVertical","horizAdvX","horizOriginX","horizOriginY","imageRendering","letterSpacing","lightingColor","markerEnd","markerMid","markerStart","navDown","navDownLeft","navDownRight","navLeft","navNext","navPrev","navRight","navUp","navUpLeft","navUpRight","onActivate","onBegin","onEnd","onFocusIn","onFocusOut","onMouseWheel","onRepeat","onShow","onZoom","overlinePosition","overlineThickness","paintOrder","panose1","pointerEvents","renderingIntent","shapeRendering","stopColor","stopOpacity","strikethroughPosition","strikethroughThickness","strokeDashArray","strokeDashOffset","strokeLineCap","strokeLineJoin","strokeMiterLimit","strokeOpacity","strokeWidth","textAnchor","textDecoration","textRendering","transformOrigin","typeOf","underlinePosition","underlineThickness","unicodeBidi","unicodeRange","unitsPerEm","vAlphabetic","vHanging","vIdeographic","vMathematical","vectorEffect","vertAdvY","vertOriginX","vertOriginY","wordSpacing","writingMode","xHeight","playbackOrder","timelineBegin","about","accumulate","additive","alphabetic","amplitude","ascent","attributeName","attributeType","azimuth","bandwidth","baseFrequency","baseProfile","bbox","begin","bias","by","calcMode","clip","clipPathUnits","contentScriptType","contentStyleType","cx","cy","defaultAction","descent","diffuseConstant","direction","display","dur","divisor","dx","dy","edgeMode","editable","elevation","exponent","externalResourcesRequired","filter","filterRes","filterUnits","focusable","focusHighlight","format","fr","from","fx","fy","g1","g2","glyphRef","gradientTransform","gradientUnits","hanging","hatchContentUnits","hatchUnits","ideographic","initialVisibility","in","in2","intercept","k1","k2","k3","k4","kernelMatrix","kernelUnitLength","keyPoints","keySplines","keyTimes","kerning","lengthAdjust","limitingConeAngle","local","markerHeight","markerUnits","markerWidth","maskContentUnits","maskUnits","mathematical","mediaCharacterEncoding","mediaContentEncodings","mediaSize","mediaTime","mode","numOctaves","observer","offset","opacity","operator","order","orient","orientation","origin","overflow","overlay","path","pathLength","patternContentUnits","patternTransform","patternUnits","phase","pitch","points","pointsAtX","pointsAtY","pointsAtZ","preserveAlpha","preserveAspectRatio","primitiveUnits","propagate","radius","refX","refY","repeatCount","repeatDur","requiredExtensions","requiredFeatures","requiredFonts","requiredFormats","resource","restart","result","rotate","rx","ry","seed","side","slope","snapshotTime","specularConstant","specularExponent","spreadMethod","spacing","startOffset","stdDeviation","stemh","stemv","stitchTiles","stroke","surfaceScale","syncBehavior","syncBehaviorDefault","syncMaster","syncTolerance","syncToleranceDefault","systemLanguage","tableValues","targetX","targetY","textLength","transformBehavior","to","u1","u2","unicode","viewBox","viewTarget","visibility","widths","x1","x2","xChannelSelector","y1","y2","yChannelSelector","z","zoomAndPan","htmlBase","svgBase","valid","dash","cap","kebab","$0","camelcase","hastToReact","StyleToObject","pointEnd","point","pointStart","stringifyPosition","VFileMessage","causeOrReason","optionsOrParentOrPlace","legacyCause","place","ancestors","cause","message","ruleId","parent","fatal","file","stack","actual","expected","note","url","emptyMap","Map","dashSomething","tableElements","Set","tableCellElement","docs","toJsxRuntime","tree","Fragment","filePath","development","jsxDEV","isStaticChildren","columnNumber","fileName","lineNumber","developmentCreate","jsxs","fn","productionCreate","components","elementAttributeNameCase","evaluater","createEvaluater","ignoreInvalidStyle","passKeys","passNode","schema","stylePropertyNameCase","tableCellAlignToStyle","one","parentSchema","tagName","findComponentFromName","alignValue","createProperty","createElementProps","createChildren","child","thing","addNode","addChildren","estree","expression","evaluateExpression","crashEstree","mdxExpression","objectExpression","argument","createJsxElementProps","mdxJsxElement","evaluateProgram","mdxEsm","root","countsByName","count","Type","rest","dashes","settings","padRight","padLeft","commas","styleToObject","replacer","toCamel","parseStyle","domCasing","cssCasing","transformStyleToCssCasing","transformStylesToCssCasing","allowExpression","identifiers","split","isIdentifierName","computed","optional","toDash","$1","urlAttributes","icon","includeImageAlt","includeHtml","all","splice","items","parameters","chunkStart","unshift","subtokenize","events","jumps","lineIndex","otherIndex","otherEvent","subevents","more","_tokenizer","_isInFirstContentOfListItem","contentType","subcontent","_container","eventIndex","token","context","startPosition","startPositions","tokenizer","parser","childEvents","gaps","stream","previous","adjust","breaks","sliceStream","defineSkip","_gfmTasklistFirstContentOfListItem","write","syntaxExtension","extension","hook","constructs","existing","before","asciiAlpha","regexCheck","asciiAlphanumeric","asciiAtext","asciiControl","asciiDigit","asciiHexDigit","asciiPunctuation","markdownLineEnding","markdownLineEndingOrSpace","markdownSpace","unicodePunctuation","unicodeWhitespace","regex","fromCharCode","factorySpace","effects","ok","limit","POSITIVE_INFINITY","enter","consume","exit","tokenize","contentStart","attempt","contentInitial","lineStart","self","childFlow","childToken","lineStartOffset","continued","item","containerState","continuation","documentContinue","checkNewContainers","_closeFlow","closeFlow","indexBeforeExits","indexBeforeFlow","exitContainers","documentContinued","currentConstruct","concrete","flowStart","interrupt","_gfmTableDynamicInterruptHack","containerConstruct","thereIsANewContainer","thereIsNoNewContainer","lazy","now","containerContinue","flow","flowContinue","writeToChild","eof","seen","entry","nok","disable","null","blankLine","after","partial","chunkInside","contentEnd","continuationConstruct","contentContinue","resolve","prefixed","tail","sliceSerialize","initial","flowInitial","afterConstruct","resolver","resolveAll","createResolver","initializeFactory","field","notText","atBreak","resolveAllLineSuffixes","extraResolver","chunks","tabs","bufferIndex","chunk","charCodeAt","_index","_bufferIndex","called","createTokenizer","initialize","columnStart","resolveAllConstructs","consumed","accountForPotentialSkip","fields","constructFactory","construct","addResult","onsuccessfulcheck","expandTabs","atTab","serializeChunks","main","expectedCode","startIndex","startBufferIndex","endIndex","endBufferIndex","view","shift","sliceChunks","chunkIndex","go","restore","onreturn","returnState","bogusState","listOfConstructs","constructIndex","handleListOfConstructs","map","def","handleMapOfConstructs","handleConstruct","startPoint","startPrevious","startCurrentConstruct","startEventsIndex","startStack","store","resolveTo","thematicBreak","marker","initialSize","atMarker","inside","onBlank","listItemPrefixWhitespaceConstruct","endOfPrefix","otherPrefix","initialBlankLine","notBlank","furtherBlankLines","notInCurrentItem","indentConstruct","blockQuote","contBefore","factoryDestination","literalType","literalMarkerType","rawType","stringType","balance","enclosedBefore","raw","enclosed","enclosedEscape","rawEscape","factoryLabel","markerType","labelInside","labelEscape","factoryTitle","escape","factoryWhitespace","normalizeIdentifier","labelAfter","markerAfter","destinationBefore","destinationAfter","titleBefore","afterWhitespace","beforeMarker","titleAfter","titleAfterOptionalWhitespace","codeIndented","afterPrefix","furtherStart","headingAtx","sequenceOpen","sequenceFurther","setextUnderline","paragraph","heading","htmlBlockNames","htmlRawNames","htmlFlow","closingTag","buffer","markerB","declarationOpen","tagCloseStart","continuationDeclarationInside","commentOpenInside","cdataOpenInside","slash","basicSelfClosing","completeClosingTagAfter","completeAttributeNameBefore","completeEnd","completeAttributeName","completeAttributeNameAfter","completeAttributeValueBefore","completeAttributeValueQuoted","completeAttributeValueUnquoted","completeAttributeValueQuotedAfter","completeAfter","continuationCommentInside","continuationRawTagOpen","continuationClose","continuationCdataInside","continuationStart","blankLineBefore","continuationAfter","nonLazyContinuationStart","continuationStartNonLazy","continuationBefore","continuationRawEndTag","nonLazyContinuation","codeFenced","closeStart","startBefore","beforeSequenceClose","sequenceClose","sizeOpen","sequenceCloseAfter","initialPrefix","beforeSequenceOpen","infoBefore","atNonLazyBreak","metaBefore","meta","contentBefore","beforeContentChunk","contentChunk","decodeNamedCharacterReference","characterReference","numeric","characterEscape","lineEnding","labelEnd","labelStart","_balanced","_inactive","labelEndNok","resourceConstruct","labelEndOk","referenceFullConstruct","referenceNotFull","referenceCollapsedConstruct","close","group","insideSpan","resourceBefore","resourceOpen","resourceEnd","resourceDestinationAfter","resourceDestinationMissing","resourceBetween","resourceTitleAfter","referenceFullAfter","referenceFullMissing","referenceCollapsedOpen","labelStartImage","classifyCharacter","attention","attentionMarkers","_open","_close","openingSequence","closingSequence","use","nextEvents","movePoint","autolink","schemeOrEmailAtext","emailAtext","schemeInsideOrEmailAtext","urlInside","emailAtSignOrDot","emailLabel","emailValue","htmlText","instruction","tagOpen","commentEnd","commentClose","lineEndingBefore","cdata","cdataClose","cdataEnd","instructionClose","tagClose","tagCloseBetween","tagOpenBetween","tagOpenAttributeName","tagOpenAttributeNameAfter","tagOpenAttributeValueBefore","tagOpenAttributeValueQuoted","tagOpenAttributeValueUnquoted","tagOpenAttributeValueQuotedAfter","lineEndingAfter","lineEndingAfterPrefix","labelStartLink","hardBreakEscape","codeText","between","tailExitIndex","headEnterIndex","resolveText","parse","extensions","combineExtensions","defaultConstructs","search","decodeNumericCharacterReference","base","fromCodePoint","characterEscapeOrReference","decode","$2","hex","fromMarkdown","encoding","config","transforms","canContainEols","opener","autolinkProtocol","onenterdata","autolinkEmail","atxHeading","codeFlow","codeFencedFenceInfo","codeFencedFenceMeta","codeTextData","codeFlowValue","definitionDestinationString","definitionLabelString","definitionTitleString","emphasis","hardBreak","hardBreakTrailing","htmlFlowData","htmlTextData","image","listItem","listItemValue","onenterlistitemvalue","listOrdered","onenterlistordered","listUnordered","reference","onenterreference","referenceString","resourceDestinationString","resourceTitleString","setextHeading","strong","closer","atxHeadingSequence","onexitatxheadingsequence","onexitautolinkemail","onexitautolinkprotocol","characterEscapeValue","onexitdata","characterReferenceMarkerHexadecimal","onexitcharacterreferencemarker","characterReferenceMarkerNumeric","characterReferenceValue","onexitcharacterreferencevalue","onexitcodefenced","codeFencedFence","onexitcodefencedfence","onexitcodefencedfenceinfo","onexitcodefencedfencemeta","onexitcodeindented","onexitcodetext","onexitdefinitiondestinationstring","onexitdefinitionlabelstring","onexitdefinitiontitlestring","onexithardbreak","onexithtmlflow","onexithtmltext","onexitimage","onexitlabel","labelText","onexitlabeltext","onexitlineending","onexitlink","onexitreferencestring","onexitresourcedestinationstring","onexitresourcetitlestring","onexitresource","onexitsetextheading","setextHeadingLineSequence","onexitsetextheadinglinesequence","setextHeadingText","onexitsetextheadingtext","configure","mdastExtensions","compile","tokenStack","resume","listStack","prepareList","defaultOnError","firstBlankLineIndex","containerBalance","listSpread","tailIndex","tailEvent","_spread","and","errorHandler","onExitError","expectingFirstListItemValue","flowCodeInside","depth","setextHeadingSlurpLineEnding","codePointAt","siblings","atHardBreak","inReference","referenceType","ancestor","decodeString","fragment","characterReferenceType","ordered","spread","compiler","postprocess","atCarriageReturn","endPosition","TextDecoder","lastIndex","ceil","preprocess","combined","remarkParse","env","globalThis","deserialize","serialized","deserializer","$","unpair","Date","flags","BigInt","EMPTY","asString","shouldSkip","TYPE","serialize","json","lossy","serializer","strict","pair","valueOf","toJSON","entries","toISOString","structuredClone","normalizeUri","skip","encodeURIComponent","defaultFootnoteBackContent","rereferenceIndex","defaultFootnoteBackLabel","referenceIndex","convert","castFactory","tests","_len","_key","anyFactory","checkAsRecord","nodeAsRecord","propsFactory","typeFactory","testFunction","looksLikeANode","CONTINUE","EXIT","SKIP","visitParents","visitor","reverse","factory","parents","visit","subresult","grandparents","toResult","nodeAsParent","testOrVisitor","visitorOrReverse","maybeReverse","revert","subtype","suffix","contents","listItemLoose","tab","trimLines","last","trimLine","handlers","blockquote","patch","applyData","break","delete","footnoteReference","clobberPrefix","safeId","footnoteOrder","counter","reuseCounter","footnoteCounts","dataFootnoteRef","sup","allowDangerousHtml","imageReference","definitionById","inlineCode","linkReference","loose","listLoose","table","firstRow","tableContent","tableCell","tableRow","cellIndex","cells","cell","toml","ignore","yaml","footnoteDefinition","hName","hChildren","hProperties","defaultUnknownHandler","nodes","trimMarkdownSpaceStart","toHast","footnoteById","defaultHandlers","passThrough","shallow","unknownHandler","createState","foot","footnoteBackContent","footnoteBackLabel","footnoteLabel","footnoteLabelTagName","footnoteLabelProperties","listItems","backReferences","counts","dataFootnoteBackref","tailTail","dataFootnotes","footer","remarkRehype","destination","hastTree","run","bail","getPrototypeOf","toStringTag","trough","fns","pipeline","middlewareIndex","_len2","output","_key2","middleware","wrapped","_len3","_key3","fnExpectsCallback","_len4","_key4","middelware","basename","ext","assertPath","seenNonSlash","firstNonSlashEnd","extIndex","dirname","unmatchedSlash","extname","startPart","startDot","preDotState","joined","segments","absolute","allowAboveRoot","lastSlashIndex","lastSegmentLength","lastSlash","dots","normalizeString","sep","JSON","stringify","proc","cwd","isUrl","fileUrlOrPath","protocol","auth","urlToPath","URL","hostname","pathname","third","decodeURIComponent","getPathFromURLPosix","VFile","isUint8Array","history","messages","stored","assertNonEmpty","assertPart","stem","fail","part","CallableInstance","proto","setPrototypeOf","names","getOwnPropertyNames","descriptor","Processor","Compiler","Parser","attachers","freezeIndex","frozen","namespace","transformers","attacher","assertUnfrozen","freeze","transformer","realFile","vfile","assertParser","process","assertCompiler","executor","reject","parseTree","realDone","compileTree","compileResult","processSync","complete","assertDone","assertNode","outputTree","resultingTree","runSync","addPlugin","addList","addPreset","plugin","plugins","entryIndex","primary","currentPrimary","isPlainObj","unified","asyncName","looksLikeAVFile","emptyPlugins","emptyRemarkRehypeOptions","safeProtocol","deprecations","Markdown","allowedElements","allowElement","disallowedElements","rehypePlugins","remarkPlugins","remarkRehypeOptions","skipHtml","unwrapDisallowed","urlTransform","defaultUrlTransform","processor","deprecation","mdastTree","colon","questionMark","numberSign"],"sourceRoot":""}