{"version":3,"file":"static/js/450.169705bf.chunk.js","mappings":"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","sources":["utils/query/useGuestBookQuery.js","components/AppWindow/windows/GuestBookWindow.jsx","firebase.js","utils/getCurrentDate.js","../node_modules/@tanstack/query-core/src/mutationObserver.ts","../node_modules/@tanstack/react-query/src/useMutation.ts"],"sourcesContent":["/* eslint-disable */\r\n\r\nimport { useQuery, useMutation } from '@tanstack/react-query'\r\nimport { db } from '../../firebase'\r\nimport { collection, doc, addDoc, getDocs, query, where, orderBy } from 'firebase/firestore'\r\n\r\nconst fetchGuestBookItem = async () => {\r\n  const result = []\r\n  try {\r\n    const q = query(collection(db, 'guestBook'), orderBy('createdAt', 'desc'))\r\n    const querySnapshot = await getDocs(q)\r\n    querySnapshot.forEach(item => {\r\n      result.push(item.data())\r\n    })\r\n    return result\r\n  } catch (error) {\r\n    console.error('Error fetching document:', error)\r\n    throw error\r\n  }\r\n}\r\n\r\nconst postGuestBookItem = async data => {\r\n  await addDoc(collection(db, 'guestBook'), {\r\n    writer: data.writer,\r\n    content: data.content,\r\n    createdAt: data.createdAt,\r\n  })\r\n}\r\n\r\nexport const useGuestBookQuery = () => {\r\n  return useQuery({\r\n    queryKey: ['guestbook'],\r\n    queryFn: fetchGuestBookItem,\r\n  })\r\n}\r\n\r\nexport const useGuestBookMutation = () => {\r\n  return useMutation({\r\n    mutationFn: postGuestBookItem,\r\n  })\r\n}\r\n","/* eslint-disable */\r\n\r\nimport { useAppWindowRender } from 'utils/zustand/useAppWindowRender'\r\nimport { useGuestBookMutation, useGuestBookQuery } from 'utils/query/useGuestBookQuery'\r\nimport AppWindow from '../AppWindow'\r\nimport styled from 'styled-components'\r\nimport Markdown from 'react-markdown'\r\nimport { WindowContent } from 'react95'\r\nimport { useForm } from 'react-hook-form'\r\nimport getCurrentDate from 'utils/getCurrentDate'\r\n\r\nexport default function GuestBookWindow() {\r\n  const { onClickWindowClose, windowRenderObj, onClickWindow } = useAppWindowRender()\r\n  const { refetch, data, isLoading } = useGuestBookQuery()\r\n  const { mutate } = useGuestBookMutation()\r\n  const { register, handleSubmit, reset } = useForm()\r\n  const onClickSubmitButton = data => {\r\n    if (data.writer === '' || data.content === '') return\r\n    data.createdAt = getCurrentDate() // 현재 시간 createdAt 프로퍼티에 할당\r\n    mutate(data, {\r\n      onSuccess: () => {\r\n        reset({ content: '', writer: '' })\r\n        refetch()\r\n      },\r\n    })\r\n  }\r\n  return (\r\n    <AppWindow\r\n      width=\"800px\"\r\n      top=\"5%\"\r\n      left=\"10%\"\r\n      zIndex={windowRenderObj.guestBookWindow.zIndexValue}\r\n      onClick={event => onClickWindow('guestBookWindow', event)}\r\n    >\r\n      <AppWindow.Header onClick={(event) => onClickWindowClose('guestBookWindow',event)}>방명록</AppWindow.Header>\r\n      <AppWindow.HeadMenu />\r\n      <AppWindow.Content>\r\n        <AppWindow.ContentSection height=\"200px\">\r\n          <AppWindow.ScrollView width=\"100%\" background=\"white\">\r\n            {/* 방명록 리스트들 랜더링 추후 컴포넌트 따로 빼는게 가독성 면에서 더 나을듯한.. */}\r\n            {!isLoading &&\r\n              data.map(item => {\r\n                return (\r\n                  <GuestBookItemContainer>\r\n                    <div style={{ display: 'flex', justifyContent: 'space-between' }}>\r\n                      <span>{item.writer}</span>\r\n                      <span>{item.createdAt}</span>\r\n                    </div>\r\n                    <Markdown>{item.content}</Markdown>\r\n                  </GuestBookItemContainer>\r\n                )\r\n              })}\r\n          </AppWindow.ScrollView>\r\n        </AppWindow.ContentSection>\r\n      </AppWindow.Content>\r\n      <AppWindow.Footer>\r\n        {/* 방명록관련 인풋필드 및 버튼 */}\r\n        <AppWindow.Input width=\"50%\" placeholder=\"이름을 작성해 주세요\" registerFn={register('writer')} />\r\n        <AppWindow.Input\r\n          width=\"100%\"\r\n          rows={4}\r\n          placeholder=\"방명록을 작성해 주세요\"\r\n          multiline\r\n          registerFn={register('content')}\r\n        />\r\n        <SubmitButtonContainer>\r\n          <AppWindow.Button width=\"20%\" onClick={handleSubmit(onClickSubmitButton)}>\r\n            등록\r\n          </AppWindow.Button>\r\n        </SubmitButtonContainer>\r\n      </AppWindow.Footer>\r\n    </AppWindow>\r\n  )\r\n}\r\n\r\nconst GuestBookItemContainer = styled.div`\r\n  padding: 5px;\r\n  border-bottom: 2px solid;\r\n  border-color: rgb(223, 223, 223) rgb(10, 10, 10) rgb(10, 10, 10) rgb(223, 223, 223);\r\n`\r\n\r\nconst SubmitButtonContainer = styled(WindowContent)`\r\n  display: flex;\r\n  justify-content: flex-end;\r\n  padding-right: 0;\r\n`\r\n","/* eslint-disable */\r\n\r\n// Import the functions you need from the SDKs you need\r\nimport { initializeApp } from 'firebase/app'\r\nimport { getFirestore } from 'firebase/firestore'\r\nimport { getStorage } from 'firebase/storage'\r\n// TODO: Add SDKs for Firebase products that you want to use\r\n// https://firebase.google.com/docs/web/setup#available-libraries\r\n\r\n// Your web app's Firebase configuration\r\n// For Firebase JS SDK v7.20.0 and later, measurementId is optional\r\nconst firebaseConfig = {\r\n  apiKey: process.env.REACT_APP_API_KEY,\r\n  authDomain: process.env.REACT_APP_AUTH_DOMAIN,\r\n  projectId: process.env.REACT_APP_PROJECT_ID,\r\n  storageBucket: process.env.REACT_APP_STORAGE_BUCKET,\r\n  messagingSenderId: process.env.REACT_APP_MESSAGING_SENDER_ID,\r\n  appId: process.env.REACT_APP_APP_ID,\r\n  measurementId: process.env.REACT_APP_MEASUREMENT_ID,\r\n}\r\n\r\n// Initialize Firebase\r\nconst app = initializeApp(firebaseConfig)\r\nexport const db = getFirestore(app)\r\nexport const storage = getStorage(app)\r\n","export default function getCurrentDate() {\r\n  const currentDate = new Date()\r\n  const year = currentDate.getFullYear()\r\n  const month = String(currentDate.getMonth() + 1).padStart(2, '0')\r\n  const day = String(currentDate.getDate()).padStart(2, '0')\r\n  const hours = String(currentDate.getHours()).padStart(2, '0')\r\n  const minutes = String(currentDate.getMinutes()).padStart(2, '0')\r\n  const seconds = String(currentDate.getSeconds()).padStart(2, '0')\r\n\r\n  const formattedDate = `${year}-${month}-${day} ${hours}:${minutes}:${seconds}`\r\n  return formattedDate\r\n}\r\n","import { getDefaultState } from './mutation'\nimport { notifyManager } from './notifyManager'\nimport { Subscribable } from './subscribable'\nimport { hashKey, shallowEqualObjects } from './utils'\nimport type { QueryClient } from './queryClient'\nimport type {\n  DefaultError,\n  MutateOptions,\n  MutationObserverOptions,\n  MutationObserverResult,\n} from './types'\nimport type { Action, Mutation } from './mutation'\n\n// TYPES\n\ntype MutationObserverListener<TData, TError, TVariables, TContext> = (\n  result: MutationObserverResult<TData, TError, TVariables, TContext>,\n) => void\n\n// CLASS\n\nexport class MutationObserver<\n  TData = unknown,\n  TError = DefaultError,\n  TVariables = void,\n  TContext = unknown,\n> extends Subscribable<\n  MutationObserverListener<TData, TError, TVariables, TContext>\n> {\n  options!: MutationObserverOptions<TData, TError, TVariables, TContext>\n\n  #client: QueryClient\n  #currentResult: MutationObserverResult<TData, TError, TVariables, TContext> =\n    undefined!\n  #currentMutation?: Mutation<TData, TError, TVariables, TContext>\n  #mutateOptions?: MutateOptions<TData, TError, TVariables, TContext>\n\n  constructor(\n    client: QueryClient,\n    options: MutationObserverOptions<TData, TError, TVariables, TContext>,\n  ) {\n    super()\n\n    this.#client = client\n    this.setOptions(options)\n    this.bindMethods()\n    this.#updateResult()\n  }\n\n  protected bindMethods(): void {\n    this.mutate = this.mutate.bind(this)\n    this.reset = this.reset.bind(this)\n  }\n\n  setOptions(\n    options: MutationObserverOptions<TData, TError, TVariables, TContext>,\n  ) {\n    const prevOptions = this.options as\n      | MutationObserverOptions<TData, TError, TVariables, TContext>\n      | undefined\n    this.options = this.#client.defaultMutationOptions(options)\n    if (!shallowEqualObjects(this.options, prevOptions)) {\n      this.#client.getMutationCache().notify({\n        type: 'observerOptionsUpdated',\n        mutation: this.#currentMutation,\n        observer: this,\n      })\n    }\n\n    if (\n      prevOptions?.mutationKey &&\n      this.options.mutationKey &&\n      hashKey(prevOptions.mutationKey) !== hashKey(this.options.mutationKey)\n    ) {\n      this.reset()\n    } else if (this.#currentMutation?.state.status === 'pending') {\n      this.#currentMutation.setOptions(this.options)\n    }\n  }\n\n  protected onUnsubscribe(): void {\n    if (!this.hasListeners()) {\n      this.#currentMutation?.removeObserver(this)\n    }\n  }\n\n  onMutationUpdate(action: Action<TData, TError, TVariables, TContext>): void {\n    this.#updateResult()\n\n    this.#notify(action)\n  }\n\n  getCurrentResult(): MutationObserverResult<\n    TData,\n    TError,\n    TVariables,\n    TContext\n  > {\n    return this.#currentResult\n  }\n\n  reset(): void {\n    // reset needs to remove the observer from the mutation because there is no way to \"get it back\"\n    // another mutate call will yield a new mutation!\n    this.#currentMutation?.removeObserver(this)\n    this.#currentMutation = undefined\n    this.#updateResult()\n    this.#notify()\n  }\n\n  mutate(\n    variables: TVariables,\n    options?: MutateOptions<TData, TError, TVariables, TContext>,\n  ): Promise<TData> {\n    this.#mutateOptions = options\n\n    this.#currentMutation?.removeObserver(this)\n\n    this.#currentMutation = this.#client\n      .getMutationCache()\n      .build(this.#client, this.options)\n\n    this.#currentMutation.addObserver(this)\n\n    return this.#currentMutation.execute(variables)\n  }\n\n  #updateResult(): void {\n    const state =\n      this.#currentMutation?.state ??\n      getDefaultState<TData, TError, TVariables, TContext>()\n\n    this.#currentResult = {\n      ...state,\n      isPending: state.status === 'pending',\n      isSuccess: state.status === 'success',\n      isError: state.status === 'error',\n      isIdle: state.status === 'idle',\n      mutate: this.mutate,\n      reset: this.reset,\n    } as MutationObserverResult<TData, TError, TVariables, TContext>\n  }\n\n  #notify(action?: Action<TData, TError, TVariables, TContext>): void {\n    notifyManager.batch(() => {\n      // First trigger the mutate callbacks\n      if (this.#mutateOptions && this.hasListeners()) {\n        const variables = this.#currentResult.variables!\n        const context = this.#currentResult.context\n\n        if (action?.type === 'success') {\n          this.#mutateOptions.onSuccess?.(action.data, variables, context!)\n          this.#mutateOptions.onSettled?.(action.data, null, variables, context)\n        } else if (action?.type === 'error') {\n          this.#mutateOptions.onError?.(action.error, variables, context)\n          this.#mutateOptions.onSettled?.(\n            undefined,\n            action.error,\n            variables,\n            context,\n          )\n        }\n      }\n\n      // Then trigger the listeners\n      this.listeners.forEach((listener) => {\n        listener(this.#currentResult)\n      })\n    })\n  }\n}\n","'use client'\nimport * as React from 'react'\nimport { MutationObserver, notifyManager } from '@tanstack/query-core'\nimport { useQueryClient } from './QueryClientProvider'\nimport { noop, shouldThrowError } from './utils'\nimport type {\n  UseMutateFunction,\n  UseMutationOptions,\n  UseMutationResult,\n} from './types'\nimport type { DefaultError, QueryClient } from '@tanstack/query-core'\n\n// HOOK\n\nexport function useMutation<\n  TData = unknown,\n  TError = DefaultError,\n  TVariables = void,\n  TContext = unknown,\n>(\n  options: UseMutationOptions<TData, TError, TVariables, TContext>,\n  queryClient?: QueryClient,\n): UseMutationResult<TData, TError, TVariables, TContext> {\n  const client = useQueryClient(queryClient)\n\n  const [observer] = React.useState(\n    () =>\n      new MutationObserver<TData, TError, TVariables, TContext>(\n        client,\n        options,\n      ),\n  )\n\n  React.useEffect(() => {\n    observer.setOptions(options)\n  }, [observer, options])\n\n  const result = React.useSyncExternalStore(\n    React.useCallback(\n      (onStoreChange) =>\n        observer.subscribe(notifyManager.batchCalls(onStoreChange)),\n      [observer],\n    ),\n    () => observer.getCurrentResult(),\n    () => observer.getCurrentResult(),\n  )\n\n  const mutate = React.useCallback<\n    UseMutateFunction<TData, TError, TVariables, TContext>\n  >(\n    (variables, mutateOptions) => {\n      observer.mutate(variables, mutateOptions).catch(noop)\n    },\n    [observer],\n  )\n\n  if (\n    result.error &&\n    shouldThrowError(observer.options.throwOnError, [result.error])\n  ) {\n    throw result.error\n  }\n\n  return { ...result, mutate, mutateAsync: result.mutate }\n}\n"],"names":["fetchGuestBookItem","async","result","q","query","collection","db","orderBy","getDocs","forEach","item","push","data","error","console","postGuestBookItem","addDoc","writer","content","createdAt","useGuestBookQuery","useQuery","queryKey","queryFn","useGuestBookMutation","useMutation","mutationFn","GuestBookWindow","onClickWindowClose","windowRenderObj","onClickWindow","useAppWindowRender","refetch","isLoading","mutate","register","handleSubmit","reset","useForm","_jsxs","AppWindow","width","top","left","zIndex","guestBookWindow","zIndexValue","onClick","event","children","_jsx","Header","HeadMenu","Content","ContentSection","height","ScrollView","background","map","GuestBookItemContainer","style","display","justifyContent","Markdown","Footer","Input","placeholder","registerFn","rows","multiline","SubmitButtonContainer","Button","getCurrentDate","onSuccess","styled","div","_templateObject","_taggedTemplateLiteral","WindowContent","_templateObject2","firebaseConfig","apiKey","process","REACT_APP_API_KEY","authDomain","REACT_APP_AUTH_DOMAIN","projectId","REACT_APP_PROJECT_ID","storageBucket","REACT_APP_STORAGE_BUCKET","messagingSenderId","REACT_APP_MESSAGING_SENDER_ID","appId","REACT_APP_APP_ID","measurementId","REACT_APP_MEASUREMENT_ID","app","initializeApp","getFirestore","storage","getStorage","currentDate","Date","year","getFullYear","month","String","getMonth","padStart","day","getDate","hours","getHours","minutes","getMinutes","seconds","getSeconds","concat","MutationObserver","_client","WeakMap","_currentResult","_currentMutation","_mutateOptions","_Class_brand","WeakSet","Subscribable","constructor","client","options","super","_classPrivateMethodInitSpec","_classPrivateFieldInitSpec","_classPrivateFieldSet","this","setOptions","bindMethods","_assertClassBrand","_updateResult","call","bind","_classPrivateFieldGet2","prevOptions","_classPrivateFieldGet","defaultMutationOptions","shallowEqualObjects","getMutationCache","notify","type","mutation","observer","mutationKey","hashKey","state","status","onUnsubscribe","_classPrivateFieldGet3","hasListeners","removeObserver","onMutationUpdate","action","_notify","getCurrentResult","_classPrivateFieldGet4","variables","_classPrivateFieldGet5","build","addObserver","execute","_classPrivateFieldGet6","_classPrivateFieldGet7","getDefaultState","isPending","isSuccess","isError","isIdle","notifyManager","batch","context","_classPrivateFieldGet8","_classPrivateFieldGet9","_classPrivateFieldGet10","_classPrivateFieldGet11","onSettled","_classPrivateFieldGet12","_classPrivateFieldGet13","_classPrivateFieldGet14","_classPrivateFieldGet15","onError","listeners","listener","queryClient","useQueryClient","React","onStoreChange","subscribe","batchCalls","mutateOptions","catch","noop","shouldThrowError","throwOnError","mutateAsync"],"sourceRoot":""}