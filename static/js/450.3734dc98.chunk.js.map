{"version":3,"file":"static/js/450.3734dc98.chunk.js","mappings":"6LAMA,MAAMA,EAAqBC,UACzB,MAAMC,EAAS,GACf,IACE,MAAMC,GAAIC,EAAAA,EAAAA,IAAMC,EAAAA,EAAAA,IAAWC,EAAAA,GAAI,cAAcC,EAAAA,EAAAA,IAAQ,YAAa,SAKlE,aAJ4BC,EAAAA,EAAAA,IAAQL,IACtBM,SAAQC,IACpBR,EAAOS,KAAKD,EAAKE,OAAO,IAEnBV,CACT,CAAE,MAAOW,GAEP,MADAC,QAAQD,MAAM,2BAA4BA,GACpCA,CACR,GAGIE,EAAoBd,gBAClBe,EAAAA,EAAAA,KAAOX,EAAAA,EAAAA,IAAWC,EAAAA,GAAI,aAAc,CACxCW,OAAQL,EAAKK,OACbC,QAASN,EAAKM,QACdC,UAAWP,EAAKO,WAChB,EAGSC,EAAoBA,KACxBC,EAAAA,EAAAA,GAAS,CACdC,SAAU,CAAC,aACXC,QAASvB,IAIAwB,EAAuBA,KAC3BC,EAAAA,EAAAA,GAAY,CACjBC,WAAYX,I,6ECzBD,SAASY,IACtB,MAAM,mBAAEC,EAAkB,gBAAEC,EAAe,cAAEC,IAAkBC,EAAAA,EAAAA,MACzD,QAAEC,EAAO,KAAEpB,EAAI,UAAEqB,GAAcb,KAC/B,OAAEc,GAAWV,KACb,SAAEW,EAAQ,aAAEC,EAAY,MAAEC,IAAUC,EAAAA,EAAAA,MAW1C,OACEC,EAAAA,EAAAA,MAACC,EAAAA,EAAS,CAACC,MAAM,QAAQC,IAAI,KAAKC,KAAK,MAAMC,OAAQf,EAAgBgB,gBAAgBC,YAAaC,QAASA,IAAMjB,EAAc,mBAAmBkB,SAAA,EAChJC,EAAAA,EAAAA,KAACT,EAAAA,EAAUU,OAAM,CAACH,QAASA,IAAMnB,EAAmB,mBAAmBoB,SAAC,wBACxEC,EAAAA,EAAAA,KAACT,EAAAA,EAAUW,SAAQ,KACnBF,EAAAA,EAAAA,KAACT,EAAAA,EAAUY,QAAO,CAAAJ,UAChBC,EAAAA,EAAAA,KAACT,EAAAA,EAAUa,eAAc,CAACC,OAAO,QAAON,UACtCC,EAAAA,EAAAA,KAACT,EAAAA,EAAUe,WAAU,CAACd,MAAM,OAAOe,WAAW,QAAOR,UAEjDf,GACArB,EAAK6C,KAAI/C,IAEL6B,EAAAA,EAAAA,MAACmB,EAAsB,CAAAV,SAAA,EACrBT,EAAAA,EAAAA,MAAA,OAAKoB,MAAO,CAAEC,QAAS,OAAQC,eAAgB,iBAAkBb,SAAA,EAC/DC,EAAAA,EAAAA,KAAA,QAAAD,SAAOtC,EAAKO,UACZgC,EAAAA,EAAAA,KAAA,QAAAD,SAAOtC,EAAKS,gBAEd8B,EAAAA,EAAAA,KAACa,EAAAA,EAAQ,CAAAd,SAAEtC,EAAKQ,sBAO9BqB,EAAAA,EAAAA,MAACC,EAAAA,EAAUuB,OAAM,CAAAf,SAAA,EAEfC,EAAAA,EAAAA,KAACT,EAAAA,EAAUwB,MAAK,CAACvB,MAAM,MAAMwB,YAAY,2DAAcC,WAAY/B,EAAS,aAC5Ec,EAAAA,EAAAA,KAACT,EAAAA,EAAUwB,MAAK,CAACvB,MAAM,OAAO0B,KAAM,EAAGF,YAAY,iEAAeG,WAAS,EAACF,WAAY/B,EAAS,cACjGc,EAAAA,EAAAA,KAACoB,EAAqB,CAAArB,UACpBC,EAAAA,EAAAA,KAACT,EAAAA,EAAU8B,OAAM,CAAC7B,MAAM,MAAMM,QAASX,GAtCnBxB,IACN,KAAhBA,EAAKK,QAAkC,KAAjBL,EAAKM,UAC/BN,EAAKO,WAAYoD,EAAAA,EAAAA,KACjBrC,EAAOtB,EAAM,CACX4D,UAAWA,KACTnC,EAAM,CAAEnB,QAAS,GAAID,OAAQ,KAC7Be,GAAS,IAEX,IA8B6EgB,SAAC,wBAOpF,CAEA,MAAMU,EAAyBe,EAAAA,GAAOC,IAAGC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,gJAMnCP,GAAwBI,EAAAA,EAAAA,IAAOI,EAAAA,GAAPJ,CAAqBK,IAAAA,GAAAF,EAAAA,EAAAA,GAAA,8E,6EC5DnD,MAWMG,GAAMC,EAAAA,EAAAA,IAXW,CACrBC,OAAQC,0CACRC,WAAYD,+BACZE,UAAWF,eACXG,cAAeH,2BACfI,kBAAmBJ,gBACnBK,MAAOL,6CACPM,cAAeN,iBAKJ5E,GAAKmF,EAAAA,EAAAA,IAAaV,GAClBW,GAAUC,EAAAA,EAAAA,IAAWZ,E,iBCxBnB,SAASR,IACtB,MAAMqB,EAAc,IAAIC,KAClBC,EAAOF,EAAYG,cACnBC,EAAQC,OAAOL,EAAYM,WAAa,GAAGC,SAAS,EAAG,KACvDC,EAAMH,OAAOL,EAAYS,WAAWF,SAAS,EAAG,KAChDG,EAAQL,OAAOL,EAAYW,YAAYJ,SAAS,EAAG,KACnDK,EAAUP,OAAOL,EAAYa,cAAcN,SAAS,EAAG,KACvDO,EAAUT,OAAOL,EAAYe,cAAcR,SAAS,EAAG,KAG7D,MADmB,GAAAS,OAAMd,EAAI,KAAAc,OAAIZ,EAAK,KAAAY,OAAIR,EAAG,KAAAQ,OAAIN,EAAK,KAAAM,OAAIJ,EAAO,KAAAI,OAAIF,EAEvE,C","sources":["utils/query/useGuestBookQuery.js","components/AppWindow/windows/GuestBookWindow.jsx","firebase.js","utils/getCurrentDate.js"],"sourcesContent":["/* eslint-disable */\r\n\r\nimport { useQuery, useMutation } from '@tanstack/react-query'\r\nimport { db } from '../../firebase'\r\nimport { collection, doc, addDoc, getDocs, query, where, orderBy } from 'firebase/firestore'\r\n\r\nconst fetchGuestBookItem = async () => {\r\n  const result = []\r\n  try {\r\n    const q = query(collection(db, 'guestBook'), orderBy('createdAt', 'desc'))\r\n    const querySnapshot = await getDocs(q)\r\n    querySnapshot.forEach(item => {\r\n      result.push(item.data())\r\n    })\r\n    return result\r\n  } catch (error) {\r\n    console.error('Error fetching document:', error)\r\n    throw error\r\n  }\r\n}\r\n\r\nconst postGuestBookItem = async data => {\r\n  await addDoc(collection(db, 'guestBook'), {\r\n    writer: data.writer,\r\n    content: data.content,\r\n    createdAt: data.createdAt,\r\n  })\r\n}\r\n\r\nexport const useGuestBookQuery = () => {\r\n  return useQuery({\r\n    queryKey: ['guestbook'],\r\n    queryFn: fetchGuestBookItem,\r\n  })\r\n}\r\n\r\nexport const useGuestBookMutation = () => {\r\n  return useMutation({\r\n    mutationFn: postGuestBookItem,\r\n  })\r\n}\r\n","/* eslint-disable */\r\n\r\nimport { useAppWindowRender } from 'utils/zustand/useAppWindowRender'\r\nimport { useGuestBookMutation, useGuestBookQuery } from 'utils/query/useGuestBookQuery'\r\nimport AppWindow from '../AppWindow'\r\nimport styled from 'styled-components'\r\nimport Markdown from 'react-markdown'\r\nimport { WindowContent } from 'react95'\r\nimport { useForm } from 'react-hook-form'\r\nimport getCurrentDate from 'utils/getCurrentDate'\r\n\r\n\r\n\r\nexport default function GuestBookWindow() {\r\n  const { onClickWindowClose, windowRenderObj, onClickWindow } = useAppWindowRender()\r\n  const { refetch, data, isLoading } = useGuestBookQuery()\r\n  const { mutate } = useGuestBookMutation()\r\n  const { register, handleSubmit, reset } = useForm()\r\n  const onClickSubmitButton = data => {\r\n    if (data.writer === '' || data.content === '') return\r\n    data.createdAt = getCurrentDate() // 현재 시간 createdAt 프로퍼티에 할당\r\n    mutate(data, {\r\n      onSuccess: () => {\r\n        reset({ content: '', writer: '' })\r\n        refetch()\r\n      },\r\n    })\r\n  }\r\n  return (\r\n    <AppWindow width=\"800px\" top=\"5%\" left=\"10%\" zIndex={windowRenderObj.guestBookWindow.zIndexValue} onClick={() => onClickWindow('guestBookWindow')}>\r\n      <AppWindow.Header onClick={() => onClickWindowClose('guestBookWindow')}>방명록</AppWindow.Header>\r\n      <AppWindow.HeadMenu />\r\n      <AppWindow.Content>\r\n        <AppWindow.ContentSection height=\"200px\">\r\n          <AppWindow.ScrollView width=\"100%\" background=\"white\">\r\n            {/* 방명록 리스트들 랜더링 추후 컴포넌트 따로 빼는게 가독성 면에서 더 나을듯한.. */}\r\n            {!isLoading &&\r\n              data.map(item => {\r\n                return (\r\n                  <GuestBookItemContainer>\r\n                    <div style={{ display: 'flex', justifyContent: 'space-between' }}>\r\n                      <span>{item.writer}</span>\r\n                      <span>{item.createdAt}</span>\r\n                    </div>\r\n                    <Markdown>{item.content}</Markdown>\r\n                  </GuestBookItemContainer>\r\n                )\r\n              })}\r\n          </AppWindow.ScrollView>\r\n        </AppWindow.ContentSection>\r\n      </AppWindow.Content>\r\n      <AppWindow.Footer>\r\n        {/* 방명록관련 인풋필드 및 버튼 */}\r\n        <AppWindow.Input width=\"50%\" placeholder=\"이름을 작성해 주세요\" registerFn={register('writer')} />\r\n        <AppWindow.Input width=\"100%\" rows={4} placeholder=\"방명록을 작성해 주세요\" multiline registerFn={register('content')} />\r\n        <SubmitButtonContainer>\r\n          <AppWindow.Button width=\"20%\" onClick={handleSubmit(onClickSubmitButton)}>\r\n            등록\r\n          </AppWindow.Button>\r\n        </SubmitButtonContainer>\r\n      </AppWindow.Footer>\r\n    </AppWindow>\r\n  )\r\n}\r\n\r\nconst GuestBookItemContainer = styled.div`\r\n  padding: 5px;\r\n  border-bottom: 2px solid;\r\n  border-color: rgb(223, 223, 223) rgb(10, 10, 10) rgb(10, 10, 10) rgb(223, 223, 223);\r\n`\r\n\r\nconst SubmitButtonContainer = styled(WindowContent)`\r\n  display: flex;\r\n  justify-content: flex-end;\r\n  padding-right: 0;\r\n`\r\n","/* eslint-disable */\r\n\r\n// Import the functions you need from the SDKs you need\r\nimport { initializeApp } from 'firebase/app'\r\nimport { getFirestore } from 'firebase/firestore'\r\nimport { getStorage } from 'firebase/storage'\r\n// TODO: Add SDKs for Firebase products that you want to use\r\n// https://firebase.google.com/docs/web/setup#available-libraries\r\n\r\n// Your web app's Firebase configuration\r\n// For Firebase JS SDK v7.20.0 and later, measurementId is optional\r\nconst firebaseConfig = {\r\n  apiKey: process.env.REACT_APP_API_KEY,\r\n  authDomain: process.env.REACT_APP_AUTH_DOMAIN,\r\n  projectId: process.env.REACT_APP_PROJECT_ID,\r\n  storageBucket: process.env.REACT_APP_STORAGE_BUCKET,\r\n  messagingSenderId: process.env.REACT_APP_MESSAGING_SENDER_ID,\r\n  appId: process.env.REACT_APP_APP_ID,\r\n  measurementId: process.env.REACT_APP_MEASUREMENT_ID,\r\n}\r\n\r\n// Initialize Firebase\r\nconst app = initializeApp(firebaseConfig)\r\nexport const db = getFirestore(app)\r\nexport const storage = getStorage(app)\r\n","export default function getCurrentDate() {\r\n  const currentDate = new Date()\r\n  const year = currentDate.getFullYear()\r\n  const month = String(currentDate.getMonth() + 1).padStart(2, '0')\r\n  const day = String(currentDate.getDate()).padStart(2, '0')\r\n  const hours = String(currentDate.getHours()).padStart(2, '0')\r\n  const minutes = String(currentDate.getMinutes()).padStart(2, '0')\r\n  const seconds = String(currentDate.getSeconds()).padStart(2, '0')\r\n\r\n  const formattedDate = `${year}-${month}-${day} ${hours}:${minutes}:${seconds}`\r\n  return formattedDate\r\n}\r\n"],"names":["fetchGuestBookItem","async","result","q","query","collection","db","orderBy","getDocs","forEach","item","push","data","error","console","postGuestBookItem","addDoc","writer","content","createdAt","useGuestBookQuery","useQuery","queryKey","queryFn","useGuestBookMutation","useMutation","mutationFn","GuestBookWindow","onClickWindowClose","windowRenderObj","onClickWindow","useAppWindowRender","refetch","isLoading","mutate","register","handleSubmit","reset","useForm","_jsxs","AppWindow","width","top","left","zIndex","guestBookWindow","zIndexValue","onClick","children","_jsx","Header","HeadMenu","Content","ContentSection","height","ScrollView","background","map","GuestBookItemContainer","style","display","justifyContent","Markdown","Footer","Input","placeholder","registerFn","rows","multiline","SubmitButtonContainer","Button","getCurrentDate","onSuccess","styled","div","_templateObject","_taggedTemplateLiteral","WindowContent","_templateObject2","app","initializeApp","apiKey","process","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","getFirestore","storage","getStorage","currentDate","Date","year","getFullYear","month","String","getMonth","padStart","day","getDate","hours","getHours","minutes","getMinutes","seconds","getSeconds","concat"],"sourceRoot":""}